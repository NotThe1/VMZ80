0001: 0000         ;     File created by MakeZ80Source on Tue Sep 18 10:06:02 EDT 2018 from:
0002: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\ROM.asm
0003: 0000         ; ROM.Z80
0004: 0000         ; Rom for BIOS set up for diskA to be 3.5HD (1.44MB) disk
0005: 0000
0006: 0000         ; 2018-12-28 Adapted to also be used in BIOS Boot routine
0007: 0000         ; 2018-11-23 Moved code away from the DiskControlBlock
0008: 0000         ; 2018-11-22  Z80 idiom
0009: 0000         ; 2017-03-02 Refactored the CP/M Suite
0010: 0000
0011: 0000
0012: 0000         ;  	DollarInclude ./stdHeader.Z80
0013: 0000         ;	$Include ./osHeader.Z80
0014: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0015: 0000         ;     File created by MakeZ80Source on Mon Sep 17 16:25:47 EDT 2018 from:
0016: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\osHeader.asm
0017: 0000         ; osHeader.Z80
0018: 0000
0019: 0000         ; 2018-12-28 Changed BDOSEntry to remove dead space in BDOS
0020: 0000         ; 2017-03-02 Refactored the CP/M Suite
0021: 0000
0022: 0000         ; Contains the Equates used by the CP/M system
0023: 0000
0024: 0000         ;------------------------Page Zero Constants ---------------------------------
0025: 0000             RAM        EQU    0                    ; Start of RAM ( and the Base page)
0026: 0000
0027: 0000             WarmBoot   EQU    RAM + 0              ; Contains a JMP instruction to warm boot in BIOS
0028: 0000             BIOSPAGE   EQU    RAM + 2              ; BIOS Jump Vector Page
0029: 0000             IOBYTE     EQU    RAM + 3              ; Input/Output redirection byte
0030: 0000
0031: 0000             Pg0CurentUser EQU    RAM + 4              ; Current user ( bits 7-4)
0032: 0000             Pg0CurentDisk EQU    Pg0CurentUser        ; Default logical disk (bits 0-3)
0033: 0000
0034: 0000             BDOSE      EQU    RAM + 5              ; Contains a JMP to BDOS entry
0035: 0000             TopRAM     EQU    BDOSE+2              ; Top page of usable RAM
0036: 0000
0037: 0000             FCB1       EQU    RAM + 05CH           ; File Control Block #1
0038: 0000             FCB2       EQU    FCB1 + 16            ; File Control Block #2
0039: 0000
0040: 0000             ComTail    EQU    RAM + 080H           ; Complete command tail
0041: 0000             ComTailCount EQU    ComTail + 1          ; Count of the number of char in tail
0042: 0000             ComTailChars EQU    ComTailCount + 1     ; Complete Command tail up-cased, w/o trailing CR
0043: 0000         ;-----------------------------------------------------------------------
0044: 0000
0045: 0000             DMABuffer  EQU    RAM + 080H           ; Default "DMA" address used as buffer
0046: 0000         ;-----------------------------------------------------------------------
0047: 0000             TPA        EQU    RAM + 0100H          ; Start of Transient program Area
0048: 0000         ;-----------------------------------------------------------------------
0049: 0000             END_OF_FILE EQU    1AH                  ; end of file
0050: 0000         ;-----------------------------------------------------------------------
0051: 0000
0052: 0000         ;--------------- CP/M Constants -----------------------------------------
0053: 0000
0054: 0000             CCPLength  EQU    0800H                ; Constant
0055: 0000             BDOSLength EQU    0E00H                ; Constant 0E00H
0056: 0000             BIOSLength EQU    0A00H                ; Constant 0900H
0057: 0000
0058: 0000             LengthInBytes EQU    CCPLength + BDOSLength + BIOSLength
0059: 0000             LengthInK  EQU    (LengthInBytes/1024) + 1
0060: 0000
0061: 0000             MemorySize EQU    64
0062: 0000
0063: 0000             CCPEntry   EQU    (MemorySize * 1024) - LengthInBytes
0064: 0000
0065: 0000             BDOSBase   EQU    CCPEntry + CCPLength
0066: 0000             BDOSEntry  EQU    BDOSBase
0067: 0000
0068: 0000             BIOSBase   EQU    BDOSBase + BDOSLength
0069: 0000             BIOSStart  EQU    CCPEntry + CCPLength + BDOSLength
0070: 0000         ;-----------------------------------------------------------------------
0071: 0000
0072: 0000         ;------------------- BDOS System Call Equates --------------------------
0073: 0000             fConsoleIn EQU    01H                  ; rcharf - Console Input
0074: 0000             fConsoleOut EQU    02H                  ; pcharf - Console Output
0075: 0000             fPrintString EQU    09H                  ; pbuff	- Print String
0076: 0000             fReadString EQU    0AH                  ; rbuff	- Read Console String
0077: 0000             fGetConsoleStatus EQU    0BH                  ; breakf - Get Console Status
0078: 0000             fGetVersion EQU    0CH                  ; liftf	- Return Version Number
0079: 0000             fResetSystem EQU    0DH                  ; initf	- Reset Disk System
0080: 0000             fSelectDisk EQU    0EH                  ; self	- Select Disk
0081: 0000             fOpenFile  EQU    0FH                  ; openf	- Open File
0082: 0000             fCloseFile EQU    10H                  ; closef - Close File
0083: 0000             fSearchFirst EQU    11H                  ; searf	- Search For First
0084: 0000             fSearchNext EQU    12H                  ; searnf - Search for Next
0085: 0000             fDeleteFile EQU    13H                  ; delf - Delete File
0086: 0000             fReadSeq   EQU    14H                  ; dreadf - Read Sequential
0087: 0000             fWriteSeq  EQU    15H                  ; dwritf - Write Sequential
0088: 0000             fMakeFile  EQU    16H                  ; makef	- Make File
0089: 0000             fRenameFile EQU    17H                  ; renf	- Rename File
0090: 0000             fGetLoginVector EQU    18H                  ; logf	- Return Login Vector
0091: 0000             fGetCurrentDisk EQU    19H                  ; cself	- Return Current Disk
0092: 0000             fSetDMA    EQU    1AH                  ; dmaf	- Set DMA address
0093: 0000             fGetSetUserNumber EQU    20H                  ; userf	- Set/Get User Code
0094: 0000         ;-----------------------------------------------------------------------
0095: 0000
0096: 0000
0097: 0000
0098: 0000
0099: 0000
0100: 0000         ;*******************************************************************************
0101: 0000         ; These are the values handed over by the BDOS when it calls the Writer operation
0102: 0000         ; The allocated.unallocated indicates whether the BDOS is set to write to an
0103: 0000         ; unallocated allocation block (it only indicates this for the first 128 byte
0104: 0000         ; sector write) or to an allocation block that has already been allocated to a
0105: 0000         ; file. The BDOS also indicates if it is set to write to the file directory
0106: 0000         ;*******************************************************************************
0107: 0000             WriteAllocated EQU    00H
0108: 0000             WriteDirectory EQU    01H
0109: 0000             WriteCleanBuffer EQU    02H
0110: 0000
0111: 0000
0112: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0113: 0000         ; 	$Include ./diskHeader.Z80
0114: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0115: 0000         ;     File created by MakeZ80Source on Mon Sep 17 16:26:22 EDT 2018 from:
0116: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\diskHeader.asm
0117: 0000         ; diskHeader.asm
0118: 0000
0119: 0000         ; 2017-03-02 Refactored the CP/M Suite
0120: 0000
0121: 0000         ; needs osHeader.asm declared before this is used !!!!!!!
0122: 0000
0123: 0000         ; Contains the Equates used by the CP/M system to handle disks
0124: 0000
0125: 0000
0126: 0000         ;*******************************************************************************
0127: 0000         ;
0128: 0000         ;     Disk related values
0129: 0000         ;
0130: 0000         ;
0131: 0000         ;*******************************************************************************
0132: 0000             DiskStatusLocation EQU    043H                 ; status after disk I/O placed here
0133: 0000             DiskControlByte EQU    045H                 ; control byte for disk I/O
0134: 0000             DiskCommandBlock EQU    046H                 ; Control Table Pointer
0135: 0000         ; for boot
0136: 0000             DiskControlTable EQU    0040H
0137: 0000
0138: 0000             DiskReadCode EQU    01H                  ; Code for Read
0139: 0000             DiskWriteCode EQU    02H                  ; Code for Write
0140: 0000
0141: 0000
0142: 0000             cpmRecordSize EQU    080H                 ; (128) record size that CP/M uses
0143: 0000             diskSectorSize EQU    200H                 ; (512) size of physical disk I/O
0144: 0000             recordsPerSector EQU    diskSectorSize/cpmRecordSize
0145: 0000
0146: 0000             DirEntrySize EQU    20H                  ; (32)
0147: 0000             DirBuffSize EQU    cpmRecordSize
0148: 0000
0149: 0000             DirectoryEntryPerRecord EQU    cpmRecordSize / DirEntrySize
0150: 0000
0151: 0000             RecordsPerExtent EQU    080H                 ; extent Record capacity
0152: 0000
0153: 0000
0154: 0000         ;-------------------------------------------------------------------------------------
0155: 0000             NumberOfLogicalDisks EQU    4                    ; max number of disk in this system
0156: 0000
0157: 0000         ;----------------------3.5 Double Density Disk Geometry----------------------------------------
0158: 0000             NumberOfHeads EQU    02H                  ; number of heads
0159: 0000             TracksPerHead EQU    50H                  ; 80
0160: 0000             SectorsPerTrack EQU    12H                  ; 18 -  1 head only
0161: 0000             SectorsPerBlock EQU    04H                  ; 2048 bytes
0162: 0000             DirectoryBlockCount EQU    02H                  ;
0163: 0000         ;-----------------------------------------------------------------------
0164: 0000
0165: 0000             BlockSize  EQU    SectorsPerBlock * 	diskSectorSize ; Size in Bytes
0166: 0000
0167: 0000             RecordsPerBlock EQU    recordsPerSector * SectorsPerBlock
0168: 0000
0169: 0000             TotalNumberOfSectors EQU    SectorsPerTrack * TracksPerHead * NumberOfHeads
0170: 0000             TotalNumberOfBlocks EQU    TotalNumberOfSectors / SectorsPerBlock
0171: 0000             SectorsPerCylinder EQU    SectorsPerTrack * NumberOfHeads
0172: 0000
0173: 0000             SystemSectors EQU    LengthInBytes / diskSectorSize + 1 ; need to account for boot sector
0174: 0000             myOffset   EQU    (SystemSectors / SectorsPerCylinder) + 1 ;
0175: 0000             DataSectors EQU    TotalNumberOfSectors - (SectorsPerCylinder * myOffset)
0176: 0000             DataBlocks EQU    DataSectors / 	SectorsPerBlock
0177: 0000
0178: 0000         ;-----------------------------------------------------------------------
0179: 0000         ;; Disk block parameters for F3HD - 3.5 HD   1.44 MB Diskette
0180: 0000         ;-----------------------------------------------------------------------
0181: 0000         ;dpb3hdSPT				EQU		0090H			; cpmRecords per track- (144)
0182: 0000             dpb3hdSPT  EQU    recordsPerSector * SectorsPerTrack * NumberOfHeads ; SPT - records per Clynder
0183: 0000             dpb3hdBSH  EQU    04H                  ; Block Shift Factor - BlockSize = 128 * (2**BSH)											; BSH = Log2(BlockSize/cpmRecordSize)
0184: 0000             dpb3hdBLM  EQU    0FH                  ; BlockMask = (2**BSH) -1
0185: 0000             dpb3hdEXM  EQU    00H                  ; Extent mask = (PhysicalExtents/LogicalExtents) - 1
0186: 0000             dpb3hdDSM  EQU    DataBlocks -1        ; Maximum allocation block number (710)
0187: 0000             dpb3hdDRM  EQU    ((BlockSize *  DirectoryBlockCount)	/	DirEntrySize) -1 ; DRM Number of directory entries - 1 (127)
0188: 0000             dpb3hdAL0  EQU    0C0H                 ; Bit map for reserving 1 alloc. block
0189: 0000             dpb3hdAL1  EQU    00H                  ;  for each file directory
0190: 0000             dpb3hdCKS  EQU    (dpb3hdDRM +1)/ DirectoryEntryPerRecord ; Disk change work area size (32)
0191: 0000             dpb3hdOFF  EQU    myOffset             ; Number of tracks before directory
0192: 0000             dpb3hdNOH  EQU    NumberOfHeads
0193: 0000
0194: 0000         ;*******************************************************************************
0195: 0000
0196: 0000             SectorMask EQU    SectorsPerBlock - 1
0197: 0000
0198: 0000         ;***************************************************************************
0199: 0000
0200: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0201: 0000             CR         EQU    0DH                  ; Carriage Return
0202: 0000             EndOfMessage EQU    00H
0203: 0000             LF         EQU    0AH                  ; Line Feed
0204: 0000
0205: 0000             BOOT_CON_ADDRESS EQU    0ECH                 ; tty data address
0206: 0000
0207: 0000
0208: 0000                        ORG    0000
0209: 0000
0210: 0000             CodeStart:
0211: 0000 21 A6 00               LD     HL,ROMControl
0212: 0003 CD 0D 00               CALL   ReadRawDisk
0213: 0006 D2 00 01               JP     NC,TPA               ; now execute the boot loader;
0214: 0009
0215: 0009 CD 80 00               CALL   NoDisk               ;
0216: 000C 76                     HALT
0217: 000D
0218: 000D             ReadRawDisk:                      ; Enter with DiskControlBlock pointer in HL
0219: 000D 22 46 00               LD     (DiskCommandBlock),HL ; put it into the Command block for drive A:
0220: 0010
0221: 0010 21 45 00               LD     HL,DiskControlByte
0222: 0013 36 80                  LD     (HL),080H            ; activate the controller
0223: 0015
0224: 0015             WaitForBootComplete:
0225: 0015 7E                     LD     A,(HL)               ; Get the control byte
0226: 0016 B7                     OR     A                    ; is it set to 0 (Completed operation) ?
0227: 0017 20 FC                  JR     NZ,WaitForBootComplete ; if not try again
0228: 0019
0229: 0019 3A 43 00               LD     A,(DiskStatusLocation) ; after operation what's the status?
0230: 001C FE 80                  CP     080H                 ; any errors ?
0231: 001E C9                     RET                         ; exit with result in the CCs
0232: 001F
0233: 001F         ;---------------------------------------
0234: 001F
0235: 001F                        ORG    DMABuffer
0236: 0080
0237: 0080             NoDisk:
0238: 0080 21 8B 00               LD     HL,NoDiskMessage
0239: 0083             SendMessage1:
0240: 0083 7E                     LD     A,(HL)
0241: 0084 B7                     OR     A
0242: 0085 C8                     RET    Z
0243: 0086 D3 EC                  OUT    (BOOT_CON_ADDRESS),A ; Console address
0244: 0088 23                     INC    HL
0245: 0089 18 F8                  JR     SendMessage1
0246: 008B
0247: 008B             NoDiskMessage:
0248: 008B 0D 0A                  DB     CR,LF
0249: 008D 4E 6F 20 53 79 73 74 65 6D 20 44 69 73 6B 20 4D 6F 75 6E 74 65 64                DB     'No System Disk Mounted'
0250: 00A3 0D 0A 00                DB     CR,LF,EndOfMessage
0251: 00A6         ;---------------------------------------
0252: 00A6             ROMControl:
0253: 00A6 01                     DB     DiskReadCode         ; Read function
0254: 00A7 00                     DB     00H                  ; unit number
0255: 00A8 00                     DB     00H                  ; head number
0256: 00A9 00                     DB     00H                  ; track number
0257: 00AA 01                     DB     01H                  ; Starting sector number ()
0258: 00AB 00 02                  DW     diskSectorSize       ; Number of bytes to read ( 1 Sector)
0259: 00AD 00 01                  DW     TPA                  ; read into this address
0260: 00AF 43 00                  DW     DiskStatusLocation   ; pointer to next block - no linking
0261: 00B1 40 00                  DW     DiskControlTable     ; pointer to next table- no linking
0262: 00B3
0263: 00B3             CodeEnd:
0264: 00B3
           ************************   Xref   ************************
0000: $               00B1
0065: BDOSBase        E800   0066 0068
0034: BDOSE           0005   0035
0066: BDOSEntry       E800
0055: BDOSLength      0E00   0058 0068 0069
0068: BIOSBase        F600
0056: BIOSLength      0A00   0058
0028: BIOSPAGE        0002
0069: BIOSStart       F600
0165: BlockSize       0800   0187
0205: BOOT_CON_ADDRESS 00EC   0243
0063: CCPEntry        E000   0065 0069
0054: CCPLength       0800   0058 0065 0069
0263: CodeEnd         00B3
0210: CodeStart       0000
0040: ComTail         0080   0041
0042: ComTailChars    0082
0041: ComTailCount    0081   0042
0142: cpmRecordSize   0080   0144 0147 0149
0201: CR              000D   0248 0250
0176: DataBlocks      02C7   0186
0175: DataSectors     0B1C   0176
0147: DirBuffSize     0080
0162: DirectoryBlockCount 0002   0187
0149: DirectoryEntryPerRecord 0004   0190
0146: DirEntrySize    0020   0149 0187
0134: DiskCommandBlock 0046   0219
0133: DiskControlByte 0045   0221
0136: DiskControlTable 0040   0261
0138: DiskReadCode    0001   0253
0143: diskSectorSize  0200   0144 0165 0173 0258
0132: DiskStatusLocation 0043   0229 0260
0139: DiskWriteCode   0002
0045: DMABuffer       0080   0235
0188: dpb3hdAL0       00C0
0189: dpb3hdAL1       0000
0184: dpb3hdBLM       000F
0183: dpb3hdBSH       0004
0190: dpb3hdCKS       0020
0187: dpb3hdDRM       007F   0190
0186: dpb3hdDSM       02C6
0185: dpb3hdEXM       0000
0192: dpb3hdNOH       0002
0191: dpb3hdOFF       0001
0182: dpb3hdSPT       0090
0049: END_OF_FILE     001A
0202: EndOfMessage    0000   0250
0037: FCB1            005C   0038
0038: FCB2            006C
0082: fCloseFile      0010
0073: fConsoleIn      0001
0074: fConsoleOut     0002
0085: fDeleteFile     0013
0077: fGetConsoleStatus 000B
0091: fGetCurrentDisk 0019
0090: fGetLoginVector 0018
0093: fGetSetUserNumber 0020
0078: fGetVersion     000C
0088: fMakeFile       0016
0081: fOpenFile       000F
0075: fPrintString    0009
0086: fReadSeq        0014
0076: fReadString     000A
0089: fRenameFile     0017
0079: fResetSystem    000D
0083: fSearchFirst    0011
0084: fSearchNext     0012
0080: fSelectDisk     000E
0092: fSetDMA         001A
0087: fWriteSeq       0015
0029: IOBYTE          0003
0058: LengthInBytes   2000   0059 0063 0173
0059: LengthInK       0009
0203: LF              000A   0248 0250
0061: MemorySize      0040   0063
0174: myOffset        0001   0175 0191
0237: NoDisk          0080   0215
0247: NoDiskMessage   008B   0238
0158: NumberOfHeads   0002   0169 0171 0182 0192
0155: NumberOfLogicalDisks 0004
0032: Pg0CurentDisk   0004
0031: Pg0CurentUser   0004   0032
0025: RAM             0000   0027 0028 0029 0031 0034 0037 0040 0045 0047
0218: ReadRawDisk     000D   0212
0167: RecordsPerBlock 0010
0151: RecordsPerExtent 0080
0144: recordsPerSector 0004   0167 0182
0252: ROMControl      00A6   0211
0196: SectorMask      0003
0161: SectorsPerBlock 0004   0165 0167 0170 0176 0196
0171: SectorsPerCylinder 0024   0174 0175
0160: SectorsPerTrack 0012   0169 0171 0182
0239: SendMessage1    0083   0245
0173: SystemSectors   0011   0174
0035: TopRAM          0007
0170: TotalNumberOfBlocks 02D0
0169: TotalNumberOfSectors 0B40   0170 0175
0047: TPA             0100   0213 0259
0159: TracksPerHead   0050   0169
0224: WaitForBootComplete 0015   0227
0027: WarmBoot        0000
0107: WriteAllocated  0000
0109: WriteCleanBuffer 0002
0108: WriteDirectory  0001
