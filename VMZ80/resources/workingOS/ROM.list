0001: 0000         ;     File created by MakeZ80Source on Tue Sep 18 10:06:02 EDT 2018 from:
0002: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\ROM.asm
0003: 0000         ; ROM.asm
0004: 0000         ; Rom for bios set up for diskA to be 3.5HD (1.44MB) disk
0005: 0000
0006: 0000         ; 2018-11-20
0007: 0000         ; 2017-03-02 Refactored the CP/M Suite
0008: 0000
0009: 0000
0010: 0000
0011: 0000                        Include ./osHeader.Z80
0012: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0013: 0000         ;     File created by MakeZ80Source on Mon Sep 17 16:25:47 EDT 2018 from:
0014: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\osHeader.asm
0015: 0000         ; osHeader.asm
0016: 0000
0017: 0000         ; 2017-03-02 Refactored the CP/M Suite
0018: 0000
0019: 0000         ; Contains the Equates used by the CP/M system
0020: 0000
0021: 0000         ;------------------------Page Zero Constants ---------------------------------
0022: 0000             RAM        EQU    0                    ; Start of RAM ( and the Base page)
0023: 0000
0024: 0000             WarmBoot   EQU    RAM + 0              ; Contains a JMP instruction to warm boot in BIOS
0025: 0000             BIOSPAGE   EQU    RAM + 2              ; BIOS Jump Vector Page
0026: 0000             IOBYTE     EQU    RAM + 3              ; Input/Output redirection byte
0027: 0000
0028: 0000             Pg0CurentUser EQU    RAM + 4              ; Current user ( bits 7-4)
0029: 0000             Pg0CurentDisk EQU    Pg0CurentUser        ; Default logical disk (bits 0-3)
0030: 0000
0031: 0000             BDOSE      EQU    RAM + 5              ; Contains a JMP to BDOS entry
0032: 0000             TopRAM     EQU    BDOSE+2              ; Top page of usable RAM
0033: 0000
0034: 0000             FCB1       EQU    RAM + 05CH           ; File Control Block #1
0035: 0000             FCB2       EQU    FCB1 + 16            ; File Control Block #2
0036: 0000
0037: 0000             ComTail    EQU    RAM + 080H           ; Complete command tail
0038: 0000             ComTailCount EQU    ComTail + 1          ; Count of the number of char in tail
0039: 0000             ComTailChars EQU    ComTailCount + 1     ; Complete Command tail up-cased, w/o trailing CR
0040: 0000         ;-----------------------------------------------------------------------
0041: 0000
0042: 0000             DMABuffer  EQU    RAM + 080H           ; Default "DMA" address used as buffer
0043: 0000         ;-----------------------------------------------------------------------
0044: 0000             TPA        EQU    RAM + 0100H          ; Start of Transient program Area
0045: 0000         ;-----------------------------------------------------------------------
0046: 0000             END_OF_FILE EQU    1AH                  ; end of file
0047: 0000         ;-----------------------------------------------------------------------
0048: 0000
0049: 0000         ;--------------- CP/M Constants -----------------------------------------
0050: 0000
0051: 0000             CCPLength  EQU    0800H                ; Constant
0052: 0000             BDOSLength EQU    0E00H                ; Constant 0E00H
0053: 0000             BIOSLength EQU    0A00H                ; Constant 0900H
0054: 0000
0055: 0000             LengthInBytes EQU    CCPLength + BDOSLength + BIOSLength
0056: 0000             LengthInK  EQU    (LengthInBytes/1024) + 1
0057: 0000
0058: 0000             MemorySize EQU    64
0059: 0000
0060: 0000             CCPEntry   EQU    (MemorySize * 1024) - LengthInBytes
0061: 0000
0062: 0000             BDOSBase   EQU    CCPEntry + CCPLength
0063: 0000             BDOSEntry  EQU    BDOSBase + 6
0064: 0000
0065: 0000             BIOSBase   EQU    BDOSBase + BDOSLength
0066: 0000             BIOSStart  EQU    CCPEntry + CCPLength + BDOSLength
0067: 0000         ;-----------------------------------------------------------------------
0068: 0000
0069: 0000         ;------------------- BDOS System Call Equates --------------------------
0070: 0000             fConsoleIn EQU    01H                  ; rcharf - Console Input
0071: 0000             fConsoleOut EQU    02H                  ; pcharf - Console Output
0072: 0000             fPrintString EQU    09H                  ; pbuff	- Print String
0073: 0000             fReadString EQU    0AH                  ; rbuff	- Read Console String
0074: 0000             fGetConsoleStatus EQU    0BH                  ; breakf - Get Console Status
0075: 0000             fGetVersion EQU    0CH                  ; liftf	- Return Version Number
0076: 0000             fResetSystem EQU    0DH                  ; initf	- Reset Disk System
0077: 0000             fSelectDisk EQU    0EH                  ; self	- Select Disk
0078: 0000             fOpenFile  EQU    0FH                  ; openf	- Open File
0079: 0000             fCloseFile EQU    10H                  ; closef - Close File
0080: 0000             fSearchFirst EQU    11H                  ; searf	- Search For First
0081: 0000             fSearchNext EQU    12H                  ; searnf - Search for Next
0082: 0000             fDeleteFile EQU    13H                  ; delf - Delete File
0083: 0000             fReadSeq   EQU    14H                  ; dreadf - Read Sequential
0084: 0000             fWriteSeq  EQU    15H                  ; dwritf - Write Sequential
0085: 0000             fMakeFile  EQU    16H                  ; makef	- Make File
0086: 0000             fRenameFile EQU    17H                  ; renf	- Rename File
0087: 0000             fGetLoginVector EQU    18H                  ; logf	- Return Login Vector
0088: 0000             fGetCurrentDisk EQU    19H                  ; cself	- Return Current Disk
0089: 0000             fSetDMA    EQU    1AH                  ; dmaf	- Set DMA address
0090: 0000             fGetSetUserNumber EQU    20H                  ; userf	- Set/Get User Code
0091: 0000         ;-----------------------------------------------------------------------
0092: 0000
0093: 0000
0094: 0000
0095: 0000
0096: 0000
0097: 0000         ;*******************************************************************************
0098: 0000         ; These are the values handed over by the BDOS when it calls the Writer operation
0099: 0000         ; The allocated.unallocated indicates whether the BDOS is set to write to an
0100: 0000         ; unallocated allocation block (it only indicates this for the first 128 byte
0101: 0000         ; sector write) or to an allocation block that has already been allocated to a
0102: 0000         ; file. The BDOS also indicates if it is set to write to the file directory
0103: 0000         ;*******************************************************************************
0104: 0000             WriteAllocated EQU    00H
0105: 0000             WriteDirectory EQU    01H
0106: 0000             WriteUnallocated EQU    02H
0107: 0000
0108: 0000
0109: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0110: 0000                        Include ./diskHeader.Z80
0111: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0112: 0000         ;     File created by MakeZ80Source on Mon Sep 17 16:26:22 EDT 2018 from:
0113: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\diskHeader.asm
0114: 0000         ; diskHeader.asm
0115: 0000
0116: 0000         ; 2017-03-02 Refactored the CP/M Suite
0117: 0000
0118: 0000         ; needs osHeader.asm declared before this is used !!!!!!!
0119: 0000
0120: 0000         ; Contains the Equates used by the CP/M system to handle disks
0121: 0000
0122: 0000
0123: 0000         ;*******************************************************************************
0124: 0000         ;
0125: 0000         ;     Disk related values
0126: 0000         ;
0127: 0000         ;
0128: 0000         ;*******************************************************************************
0129: 0000             DiskStatusLocation EQU    043H                 ; status after disk I/O placed here
0130: 0000             DiskControlByte EQU    045H                 ; control byte for disk I/O
0131: 0000             DiskCommandBlock EQU    046H                 ; Control Table Pointer
0132: 0000         ; for boot
0133: 0000             DiskControlTable EQU    0040H
0134: 0000
0135: 0000             DiskReadCode EQU    01H                  ; Code for Read
0136: 0000             DiskWriteCode EQU    02H                  ; Code for Write
0137: 0000
0138: 0000
0139: 0000             cpmRecordSize EQU    080H                 ; (128) record size that CP/M uses
0140: 0000             diskSectorSize EQU    200H                 ; (512) size of physical disk I/O
0141: 0000             recordsPerSector EQU    diskSectorSize/cpmRecordSize
0142: 0000
0143: 0000             DirEntrySize EQU    20H                  ; (32)
0144: 0000             DirBuffSize EQU    cpmRecordSize
0145: 0000
0146: 0000             DirectoryEntryPerRecord EQU    cpmRecordSize / DirEntrySize
0147: 0000
0148: 0000             RecordsPerExtent EQU    080H                 ; extent Record capacity
0149: 0000
0150: 0000
0151: 0000         ;-------------------------------------------------------------------------------------
0152: 0000             NumberOfLogicalDisks EQU    4                    ; max number of disk in this system
0153: 0000
0154: 0000         ;----------------------3.5 Double Density Disk Geometry----------------------------------------
0155: 0000             NumberOfHeads EQU    02H                  ; number of heads
0156: 0000             TracksPerHead EQU    50H                  ; 80
0157: 0000             SectorsPerTrack EQU    12H                  ; 18 -  1 head only
0158: 0000             SectorsPerBlock EQU    04H                  ; 2048 bytes
0159: 0000             DirectoryBlockCount EQU    02H                  ;
0160: 0000         ;-----------------------------------------------------------------------
0161: 0000
0162: 0000             BlockSize  EQU    SectorsPerBlock * 	diskSectorSize ; Size in Bytes
0163: 0000
0164: 0000             RecordsPerBlock EQU    recordsPerSector * SectorsPerBlock
0165: 0000
0166: 0000             TotalNumberOfSectors EQU    SectorsPerTrack * TracksPerHead * NumberOfHeads
0167: 0000             TotalNumberOfBlocks EQU    TotalNumberOfSectors / SectorsPerBlock
0168: 0000             SectorsPerCylinder EQU    SectorsPerTrack * NumberOfHeads
0169: 0000
0170: 0000             SystemSectors EQU    LengthInBytes / diskSectorSize + 1 ; need to account for boot sector
0171: 0000             myOffset   EQU    (SystemSectors / SectorsPerCylinder) + 1 ;
0172: 0000             DataSectors EQU    TotalNumberOfSectors - (SectorsPerCylinder * myOffset)
0173: 0000             DataBlocks EQU    DataSectors / 	SectorsPerBlock
0174: 0000
0175: 0000         ;-----------------------------------------------------------------------
0176: 0000         ;; Disk block parameters for F3HD - 3.5 HD   1.44 MB Diskette
0177: 0000         ;-----------------------------------------------------------------------
0178: 0000         ;dpb3hdSPT				EQU		0090H			; cpmRecords per track- (144)
0179: 0000             dpb3hdSPT  EQU    recordsPerSector * SectorsPerTrack * NumberOfHeads ; SPT - records per Clynder
0180: 0000             dpb3hdBSH  EQU    04H                  ; Block Shift Factor - BlockSize = 128 * (2**BSH)											; BSH = Log2(BlockSize/cpmRecordSize)
0181: 0000             dpb3hdBLM  EQU    0FH                  ; BlockMask = (2**BSH) -1
0182: 0000             dpb3hdEXM  EQU    00H                  ; Extent mask = (PhysicalExtents/LogicalExtents) - 1
0183: 0000             dpb3hdDSM  EQU    DataBlocks -1        ; Maximum allocation block number (710)
0184: 0000             dpb3hdDRM  EQU    ((BlockSize *  DirectoryBlockCount)	/	DirEntrySize) -1 ; DRM Number of directory entries - 1 (127)
0185: 0000             dpb3hdAL0  EQU    0C0H                 ; Bit map for reserving 1 alloc. block
0186: 0000             dpb3hdAL1  EQU    00H                  ;  for each file directory
0187: 0000             dpb3hdCKS  EQU    (dpb3hdDRM +1)/ DirectoryEntryPerRecord ; Disk change work area size (32)
0188: 0000             dpb3hdOFF  EQU    myOffset             ; Number of tracks before directory
0189: 0000             dpb3hdNOH  EQU    NumberOfHeads
0190: 0000
0191: 0000         ;*******************************************************************************
0192: 0000
0193: 0000             SectorMask EQU    SectorsPerBlock - 1
0194: 0000
0195: 0000         ;***************************************************************************
0196: 0000
0197: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0198: 0000
0199: 0000                        ORG    0000
0200: 0000
0201: 0000             CodeStart:
0202: 0000 21 18 00               LD     HL,ROMControl
0203: 0003 22 46 00               LD     (DiskCommandBlock),HL ; put it into the Command block for drive A:
0204: 0006
0205: 0006
0206: 0006 21 45 00               LD     HL,DiskControlByte
0207: 0009 36 80                  LD     (HL),080H            ; activate the controller
0208: 000B
0209: 000B             WaitForBootComplete:
0210: 000B 7E                     LD     A,(HL)               ; Get the control byte
0211: 000C B7                     OR     A                    ; is it set to 0 (Completed operation) ?
0212: 000D 20 FC                  JR     NZ,WaitForBootComplete ; if not try again
0213: 000F
0214: 000F 3A 43 00               LD     A,(DiskStatusLocation) ; after operation what's the status?
0215: 0012 FE 80                  CP     080H                 ; any errors ?
0216: 0014
0217: 0014 D2 00 01               JP     NC,TPA               ; now execute the boot loader
0218: 0017 76                     HALT
0219: 0018         ;---------------------------------------
0220: 0018             ROMControl:
0221: 0018 01                     DB     DiskReadCode         ; Read function
0222: 0019 00                     DB     00H                  ; unit number
0223: 001A 00                     DB     00H                  ; head number
0224: 001B 00                     DB     00H                  ; track number
0225: 001C 01                     DB     01H                  ; Starting sector number ()
0226: 001D 00 02                  DW     diskSectorSize       ; Number of bytes to read ( 1 Sector)
0227: 001F 00 01                  DW     TPA                  ; read into this address
0228: 0021 43 00                  DW     DiskStatusLocation   ; pointer to next block - no linking
0229: 0023 40 00                  DW     DiskControlTable     ; pointer to next table- no linking
0230: 0025             CodeEnd:
0231: 0025
           ************************   Xref   ************************
0000: $               0023
0062: BDOSBase        E800   0063 0065
0031: BDOSE           0005   0032
0063: BDOSEntry       E806
0052: BDOSLength      0E00   0055 0065 0066
0065: BIOSBase        F600
0053: BIOSLength      0A00   0055
0025: BIOSPAGE        0002
0066: BIOSStart       F600
0162: BlockSize       0800   0184
0060: CCPEntry        E000   0062 0066
0051: CCPLength       0800   0055 0062 0066
0230: CodeEnd         0025
0201: CodeStart       0000
0037: ComTail         0080   0038
0039: ComTailChars    0082
0038: ComTailCount    0081   0039
0139: cpmRecordSize   0080   0141 0144 0146
0173: DataBlocks      02C7   0183
0172: DataSectors     0B1C   0173
0144: DirBuffSize     0080
0159: DirectoryBlockCount 0002   0184
0146: DirectoryEntryPerRecord 0004   0187
0143: DirEntrySize    0020   0146 0184
0131: DiskCommandBlock 0046   0203
0130: DiskControlByte 0045   0206
0133: DiskControlTable 0040   0229
0135: DiskReadCode    0001   0221
0140: diskSectorSize  0200   0141 0162 0170 0226
0129: DiskStatusLocation 0043   0214 0228
0136: DiskWriteCode   0002
0042: DMABuffer       0080
0185: dpb3hdAL0       00C0
0186: dpb3hdAL1       0000
0181: dpb3hdBLM       000F
0180: dpb3hdBSH       0004
0187: dpb3hdCKS       0020
0184: dpb3hdDRM       007F   0187
0183: dpb3hdDSM       02C6
0182: dpb3hdEXM       0000
0189: dpb3hdNOH       0002
0188: dpb3hdOFF       0001
0179: dpb3hdSPT       0090
0046: END_OF_FILE     001A
0034: FCB1            005C   0035
0035: FCB2            006C
0079: fCloseFile      0010
0070: fConsoleIn      0001
0071: fConsoleOut     0002
0082: fDeleteFile     0013
0074: fGetConsoleStatus 000B
0088: fGetCurrentDisk 0019
0087: fGetLoginVector 0018
0090: fGetSetUserNumber 0020
0075: fGetVersion     000C
0085: fMakeFile       0016
0078: fOpenFile       000F
0072: fPrintString    0009
0083: fReadSeq        0014
0073: fReadString     000A
0086: fRenameFile     0017
0076: fResetSystem    000D
0080: fSearchFirst    0011
0081: fSearchNext     0012
0077: fSelectDisk     000E
0089: fSetDMA         001A
0084: fWriteSeq       0015
0026: IOBYTE          0003
0055: LengthInBytes   2000   0056 0060 0170
0056: LengthInK       0009
0058: MemorySize      0040   0060
0171: myOffset        0001   0172 0188
0155: NumberOfHeads   0002   0166 0168 0179 0189
0152: NumberOfLogicalDisks 0004
0029: Pg0CurentDisk   0004
0028: Pg0CurentUser   0004   0029
0022: RAM             0000   0024 0025 0026 0028 0031 0034 0037 0042 0044
0164: RecordsPerBlock 0010
0148: RecordsPerExtent 0080
0141: recordsPerSector 0004   0164 0179
0220: ROMControl      0018   0202
0193: SectorMask      0003
0158: SectorsPerBlock 0004   0162 0164 0167 0173 0193
0168: SectorsPerCylinder 0024   0171 0172
0157: SectorsPerTrack 0012   0166 0168 0179
0170: SystemSectors   0011   0171
0032: TopRAM          0007
0167: TotalNumberOfBlocks 02D0
0166: TotalNumberOfSectors 0B40   0167 0172
0044: TPA             0100   0217 0227
0156: TracksPerHead   0050   0166
0209: WaitForBootComplete 000B   0212
0024: WarmBoot        0000
0104: WriteAllocated  0000
0105: WriteDirectory  0001
0106: WriteUnallocated 0002
