0001: 0000         ;     File created by MakeZ80Source on Tue Sep 18 10:06:02 EDT 2018 from:
0002: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\ROM.asm
0003: 0000         ; ROM.Z80
0004: 0000         ; Rom for BIOS set up for diskA to be 3.5HD (1.44MB) disk
0005: 0000
0006: 0000         ; 2018-11-23 Moved code away from the DiskControlBlock
0007: 0000         ; 2018-11-22  Z80 idiom
0008: 0000         ; 2017-03-02 Refactored the CP/M Suite
0009: 0000
0010: 0000
0011: 0000                        Include ./stdHeader.Z80
0012: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0013: 0000         ;     File created by MakeZ80Source on Mon Sep 17 16:25:01 EDT 2018 from:
0014: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\stdHeader.asm
0015: 0000         ; stdHeader.asm
0016: 0000         ; standard equates
0017: 0000
0018: 0000         ; 2017-03-02 Refactored the CP/M Suite
0019: 0000
0020: 0000
0021: 0000             TRUE       EQU    -1                   ; not false
0022: 0000             FALSE      EQU    0000H
0023: 0000             ON         EQU    -1
0024: 0000             OFF        EQU    0000H
0025: 0000             LO_NIBBLE_MASK EQU    0FH                  ; mask used to obtain the bytes low four bits
0026: 0000
0027: 0000             BYTE       EQU    1                    ; number of bytes for "byte" type
0028: 0000             WORD       EQU    2                    ; number of bytes for "word" type
0029: 0000
0030: 0000
0031: 0000             ASCII_MASK EQU    7FH                  ; Ascii mask 7 bits
0032: 0000             ZERO       EQU    00H                  ; Zero
0033: 0000             EndOfMessage EQU    00H
0034: 0000
0035: 0000             CTRL_C     EQU    03H                  ; ETX
0036: 0000             CTRL_E     EQU    05H                  ; physical eol
0037: 0000             CTRL_H     EQU    08H                  ; backspace
0038: 0000             CTRL_K     EQU    0BH                  ; VT - Vertical tab
0039: 0000             CTRL_L     EQU    0CH                  ; FF - Form feed
0040: 0000             CTRL_P     EQU    10H                  ; prnt toggle
0041: 0000             CTRL_R     EQU    12H                  ; repeat line
0042: 0000             CTRL_S     EQU    13H                  ; X-OFF stop/start screen
0043: 0000             CTRL_U     EQU    15H                  ; line delete
0044: 0000             CTRL_X     EQU    18H                  ; =ctl-u
0045: 0000             CTRL_Z     EQU    1AH                  ; end of file
0046: 0000
0047: 0000             NULL       EQU    00H                  ; Null
0048: 0000             SOH        EQU    01H                  ; Start of Heading
0049: 0000             BELL       EQU    07H                  ; Bell
0050: 0000             TAB        EQU    09H                  ; Tab
0051: 0000             LF         EQU    0AH                  ; Line Feed
0052: 0000             CR         EQU    0DH                  ; Carriage Return
0053: 0000             SPACE      EQU    20H                  ; Space
0054: 0000             EXCLAIM_POINT EQU    21H                  ; Exclamtion Point
0055: 0000             HASH_TAG   EQU    23H                  ; Sharp sign #
0056: 0000             DOLLAR     EQU    24H                  ; Dollar Sign
0057: 0000             PERCENT    EQU    25H                  ; Percent Sign
0058: 0000             L_PAREN    EQU    28H                  ; Left Paenthesis (
0059: 0000             R_PAREN    EQU    29H                  ; Right Paenthesis )
0060: 0000             ASTERISK   EQU    2AH                  ; Asterisk *
0061: 0000             PLUS_SIGN  EQU    2BH                  ; Plus sign +
0062: 0000             COMMA      EQU    2CH                  ; Comma
0063: 0000             DASH       EQU    2DH                  ; Dash Hyphen -
0064: 0000             PERIOD     EQU    2EH                  ; Period
0065: 0000             SLASH      EQU    2FH                  ; /
0066: 0000             ASCII_ZERO EQU    30H                  ; zero
0067: 0000             COLON      EQU    3AH                  ; Colon
0068: 0000
0069: 0000             SEMICOLON  EQU    3BH                  ; Semi Colon
0070: 0000             LESS_THAN  EQU    3CH                  ; Less Than <
0071: 0000             EQUAL_SIGN EQU    3DH                  ; Equal Sign
0072: 0000             GREATER_THAN EQU    3EH                  ; Greater Than >
0073: 0000             QMARK      EQU    3FH                  ; Question Mark
0074: 0000             UNDER_SCORE EQU    5FH                  ; under score _
0075: 0000             LEFT_ARROW EQU    5FH                  ; Left Arrow ?
0076: 0000             RUBOUT     EQU    7FH                  ; Delete Key
0077: 0000
0078: 0000
0079: 0000             ASCII_A    EQU    'A'
0080: 0000             ASCII_C    EQU    'C'
0081: 0000             ASCII_K    EQU    'K'
0082: 0000             ASCII_N    EQU    'N'
0083: 0000             ASCII_Q    EQU    'Q'
0084: 0000             ASCII_R    EQU    'R'
0085: 0000             ASCII_W    EQU    'W'
0086: 0000             ASCII_Y    EQU    'Y'
0087: 0000             CARET      EQU    '^'
0088: 0000             ASCII_LO_A EQU    'a'
0089: 0000             ASCII_LO_K EQU    'k'
0090: 0000             ASCII_LO_P EQU    'p'
0091: 0000             LEFT_CURLY EQU    '{'                  ; Left curly Bracket
0092: 0000
0093: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0094: 0000         ;	$Include ./osHeader.Z80
0095: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0096: 0000         ;     File created by MakeZ80Source on Mon Sep 17 16:25:47 EDT 2018 from:
0097: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\osHeader.asm
0098: 0000         ; osHeader.asm
0099: 0000
0100: 0000         ; 2017-03-02 Refactored the CP/M Suite
0101: 0000
0102: 0000         ; Contains the Equates used by the CP/M system
0103: 0000
0104: 0000         ;------------------------Page Zero Constants ---------------------------------
0105: 0000             RAM        EQU    0                    ; Start of RAM ( and the Base page)
0106: 0000
0107: 0000             WarmBoot   EQU    RAM + 0              ; Contains a JMP instruction to warm boot in BIOS
0108: 0000             BIOSPAGE   EQU    RAM + 2              ; BIOS Jump Vector Page
0109: 0000             IOBYTE     EQU    RAM + 3              ; Input/Output redirection byte
0110: 0000
0111: 0000             Pg0CurentUser EQU    RAM + 4              ; Current user ( bits 7-4)
0112: 0000             Pg0CurentDisk EQU    Pg0CurentUser        ; Default logical disk (bits 0-3)
0113: 0000
0114: 0000             BDOSE      EQU    RAM + 5              ; Contains a JMP to BDOS entry
0115: 0000             TopRAM     EQU    BDOSE+2              ; Top page of usable RAM
0116: 0000
0117: 0000             FCB1       EQU    RAM + 05CH           ; File Control Block #1
0118: 0000             FCB2       EQU    FCB1 + 16            ; File Control Block #2
0119: 0000
0120: 0000             ComTail    EQU    RAM + 080H           ; Complete command tail
0121: 0000             ComTailCount EQU    ComTail + 1          ; Count of the number of char in tail
0122: 0000             ComTailChars EQU    ComTailCount + 1     ; Complete Command tail up-cased, w/o trailing CR
0123: 0000         ;-----------------------------------------------------------------------
0124: 0000
0125: 0000             DMABuffer  EQU    RAM + 080H           ; Default "DMA" address used as buffer
0126: 0000         ;-----------------------------------------------------------------------
0127: 0000             TPA        EQU    RAM + 0100H          ; Start of Transient program Area
0128: 0000         ;-----------------------------------------------------------------------
0129: 0000             END_OF_FILE EQU    1AH                  ; end of file
0130: 0000         ;-----------------------------------------------------------------------
0131: 0000
0132: 0000         ;--------------- CP/M Constants -----------------------------------------
0133: 0000
0134: 0000             CCPLength  EQU    0800H                ; Constant
0135: 0000             BDOSLength EQU    0E00H                ; Constant 0E00H
0136: 0000             BIOSLength EQU    0A00H                ; Constant 0900H
0137: 0000
0138: 0000             LengthInBytes EQU    CCPLength + BDOSLength + BIOSLength
0139: 0000             LengthInK  EQU    (LengthInBytes/1024) + 1
0140: 0000
0141: 0000             MemorySize EQU    64
0142: 0000
0143: 0000             CCPEntry   EQU    (MemorySize * 1024) - LengthInBytes
0144: 0000
0145: 0000             BDOSBase   EQU    CCPEntry + CCPLength
0146: 0000             BDOSEntry  EQU    BDOSBase + 6
0147: 0000
0148: 0000             BIOSBase   EQU    BDOSBase + BDOSLength
0149: 0000             BIOSStart  EQU    CCPEntry + CCPLength + BDOSLength
0150: 0000         ;-----------------------------------------------------------------------
0151: 0000
0152: 0000         ;------------------- BDOS System Call Equates --------------------------
0153: 0000             fConsoleIn EQU    01H                  ; rcharf - Console Input
0154: 0000             fConsoleOut EQU    02H                  ; pcharf - Console Output
0155: 0000             fPrintString EQU    09H                  ; pbuff	- Print String
0156: 0000             fReadString EQU    0AH                  ; rbuff	- Read Console String
0157: 0000             fGetConsoleStatus EQU    0BH                  ; breakf - Get Console Status
0158: 0000             fGetVersion EQU    0CH                  ; liftf	- Return Version Number
0159: 0000             fResetSystem EQU    0DH                  ; initf	- Reset Disk System
0160: 0000             fSelectDisk EQU    0EH                  ; self	- Select Disk
0161: 0000             fOpenFile  EQU    0FH                  ; openf	- Open File
0162: 0000             fCloseFile EQU    10H                  ; closef - Close File
0163: 0000             fSearchFirst EQU    11H                  ; searf	- Search For First
0164: 0000             fSearchNext EQU    12H                  ; searnf - Search for Next
0165: 0000             fDeleteFile EQU    13H                  ; delf - Delete File
0166: 0000             fReadSeq   EQU    14H                  ; dreadf - Read Sequential
0167: 0000             fWriteSeq  EQU    15H                  ; dwritf - Write Sequential
0168: 0000             fMakeFile  EQU    16H                  ; makef	- Make File
0169: 0000             fRenameFile EQU    17H                  ; renf	- Rename File
0170: 0000             fGetLoginVector EQU    18H                  ; logf	- Return Login Vector
0171: 0000             fGetCurrentDisk EQU    19H                  ; cself	- Return Current Disk
0172: 0000             fSetDMA    EQU    1AH                  ; dmaf	- Set DMA address
0173: 0000             fGetSetUserNumber EQU    20H                  ; userf	- Set/Get User Code
0174: 0000         ;-----------------------------------------------------------------------
0175: 0000
0176: 0000
0177: 0000
0178: 0000
0179: 0000
0180: 0000         ;*******************************************************************************
0181: 0000         ; These are the values handed over by the BDOS when it calls the Writer operation
0182: 0000         ; The allocated.unallocated indicates whether the BDOS is set to write to an
0183: 0000         ; unallocated allocation block (it only indicates this for the first 128 byte
0184: 0000         ; sector write) or to an allocation block that has already been allocated to a
0185: 0000         ; file. The BDOS also indicates if it is set to write to the file directory
0186: 0000         ;*******************************************************************************
0187: 0000             WriteAllocated EQU    00H
0188: 0000             WriteDirectory EQU    01H
0189: 0000             WriteCleanBuffer EQU    02H
0190: 0000
0191: 0000
0192: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0193: 0000         ; 	$Include ./diskHeader.Z80
0194: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0195: 0000         ;     File created by MakeZ80Source on Mon Sep 17 16:26:22 EDT 2018 from:
0196: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\diskHeader.asm
0197: 0000         ; diskHeader.asm
0198: 0000
0199: 0000         ; 2017-03-02 Refactored the CP/M Suite
0200: 0000
0201: 0000         ; needs osHeader.asm declared before this is used !!!!!!!
0202: 0000
0203: 0000         ; Contains the Equates used by the CP/M system to handle disks
0204: 0000
0205: 0000
0206: 0000         ;*******************************************************************************
0207: 0000         ;
0208: 0000         ;     Disk related values
0209: 0000         ;
0210: 0000         ;
0211: 0000         ;*******************************************************************************
0212: 0000             DiskStatusLocation EQU    043H                 ; status after disk I/O placed here
0213: 0000             DiskControlByte EQU    045H                 ; control byte for disk I/O
0214: 0000             DiskCommandBlock EQU    046H                 ; Control Table Pointer
0215: 0000         ; for boot
0216: 0000             DiskControlTable EQU    0040H
0217: 0000
0218: 0000             DiskReadCode EQU    01H                  ; Code for Read
0219: 0000             DiskWriteCode EQU    02H                  ; Code for Write
0220: 0000
0221: 0000
0222: 0000             cpmRecordSize EQU    080H                 ; (128) record size that CP/M uses
0223: 0000             diskSectorSize EQU    200H                 ; (512) size of physical disk I/O
0224: 0000             recordsPerSector EQU    diskSectorSize/cpmRecordSize
0225: 0000
0226: 0000             DirEntrySize EQU    20H                  ; (32)
0227: 0000             DirBuffSize EQU    cpmRecordSize
0228: 0000
0229: 0000             DirectoryEntryPerRecord EQU    cpmRecordSize / DirEntrySize
0230: 0000
0231: 0000             RecordsPerExtent EQU    080H                 ; extent Record capacity
0232: 0000
0233: 0000
0234: 0000         ;-------------------------------------------------------------------------------------
0235: 0000             NumberOfLogicalDisks EQU    4                    ; max number of disk in this system
0236: 0000
0237: 0000         ;----------------------3.5 Double Density Disk Geometry----------------------------------------
0238: 0000             NumberOfHeads EQU    02H                  ; number of heads
0239: 0000             TracksPerHead EQU    50H                  ; 80
0240: 0000             SectorsPerTrack EQU    12H                  ; 18 -  1 head only
0241: 0000             SectorsPerBlock EQU    04H                  ; 2048 bytes
0242: 0000             DirectoryBlockCount EQU    02H                  ;
0243: 0000         ;-----------------------------------------------------------------------
0244: 0000
0245: 0000             BlockSize  EQU    SectorsPerBlock * 	diskSectorSize ; Size in Bytes
0246: 0000
0247: 0000             RecordsPerBlock EQU    recordsPerSector * SectorsPerBlock
0248: 0000
0249: 0000             TotalNumberOfSectors EQU    SectorsPerTrack * TracksPerHead * NumberOfHeads
0250: 0000             TotalNumberOfBlocks EQU    TotalNumberOfSectors / SectorsPerBlock
0251: 0000             SectorsPerCylinder EQU    SectorsPerTrack * NumberOfHeads
0252: 0000
0253: 0000             SystemSectors EQU    LengthInBytes / diskSectorSize + 1 ; need to account for boot sector
0254: 0000             myOffset   EQU    (SystemSectors / SectorsPerCylinder) + 1 ;
0255: 0000             DataSectors EQU    TotalNumberOfSectors - (SectorsPerCylinder * myOffset)
0256: 0000             DataBlocks EQU    DataSectors / 	SectorsPerBlock
0257: 0000
0258: 0000         ;-----------------------------------------------------------------------
0259: 0000         ;; Disk block parameters for F3HD - 3.5 HD   1.44 MB Diskette
0260: 0000         ;-----------------------------------------------------------------------
0261: 0000         ;dpb3hdSPT				EQU		0090H			; cpmRecords per track- (144)
0262: 0000             dpb3hdSPT  EQU    recordsPerSector * SectorsPerTrack * NumberOfHeads ; SPT - records per Clynder
0263: 0000             dpb3hdBSH  EQU    04H                  ; Block Shift Factor - BlockSize = 128 * (2**BSH)											; BSH = Log2(BlockSize/cpmRecordSize)
0264: 0000             dpb3hdBLM  EQU    0FH                  ; BlockMask = (2**BSH) -1
0265: 0000             dpb3hdEXM  EQU    00H                  ; Extent mask = (PhysicalExtents/LogicalExtents) - 1
0266: 0000             dpb3hdDSM  EQU    DataBlocks -1        ; Maximum allocation block number (710)
0267: 0000             dpb3hdDRM  EQU    ((BlockSize *  DirectoryBlockCount)	/	DirEntrySize) -1 ; DRM Number of directory entries - 1 (127)
0268: 0000             dpb3hdAL0  EQU    0C0H                 ; Bit map for reserving 1 alloc. block
0269: 0000             dpb3hdAL1  EQU    00H                  ;  for each file directory
0270: 0000             dpb3hdCKS  EQU    (dpb3hdDRM +1)/ DirectoryEntryPerRecord ; Disk change work area size (32)
0271: 0000             dpb3hdOFF  EQU    myOffset             ; Number of tracks before directory
0272: 0000             dpb3hdNOH  EQU    NumberOfHeads
0273: 0000
0274: 0000         ;*******************************************************************************
0275: 0000
0276: 0000             SectorMask EQU    SectorsPerBlock - 1
0277: 0000
0278: 0000         ;***************************************************************************
0279: 0000
0280: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0281: 0000
0282: 0000             BOOT_CON_ADDRESS EQU    0ECH                 ; tty data address
0283: 0000
0284: 0000
0285: 0000                        ORG    0000
0286: 0000
0287: 0000             CodeStart:
0288: 0000 21 A6 00               LD     HL,ROMControl
0289: 0003 CD 0D 00               CALL   ReadRawDisk
0290: 0006 D2 00 01               JP     NC,TPA               ; now execute the boot loader;
0291: 0009
0292: 0009 CD 80 00               CALL   NoDisk               ;
0293: 000C 76                     HALT
0294: 000D
0295: 000D             ReadRawDisk:                      ; Enter with DiskControlBlock pointer in HL
0296: 000D 22 46 00               LD     (DiskCommandBlock),HL ; put it into the Command block for drive A:
0297: 0010
0298: 0010 21 45 00               LD     HL,DiskControlByte
0299: 0013 36 80                  LD     (HL),080H            ; activate the controller
0300: 0015
0301: 0015             WaitForBootComplete:
0302: 0015 7E                     LD     A,(HL)               ; Get the control byte
0303: 0016 B7                     OR     A                    ; is it set to 0 (Completed operation) ?
0304: 0017 20 FC                  JR     NZ,WaitForBootComplete ; if not try again
0305: 0019
0306: 0019 3A 43 00               LD     A,(DiskStatusLocation) ; after operation what's the status?
0307: 001C FE 80                  CP     080H                 ; any errors ?
0308: 001E C9                     RET                         ; exit with result in the CCs
0309: 001F
0310: 001F         ;---------------------------------------
0311: 001F
0312: 001F                        ORG    DMABuffer
0313: 0080
0314: 0080             NoDisk:
0315: 0080 21 8B 00               LD     HL,NoDiskMessage
0316: 0083             SendMessage1:
0317: 0083 7E                     LD     A,(HL)
0318: 0084 B7                     OR     A
0319: 0085 C8                     RET    Z
0320: 0086 D3 EC                  OUT    (BOOT_CON_ADDRESS),A ; Console address
0321: 0088 23                     INC    HL
0322: 0089 18 F8                  JR     SendMessage1
0323: 008B
0324: 008B             NoDiskMessage:
0325: 008B 0D 0A                  DB     CR,LF
0326: 008D 4E 6F 20 53 79 73 74 65 6D 20 44 69 73 6B 20 4D 6F 75 6E 74 65 64                DB     'No System Disk Mounted'
0327: 00A3 0D 0A 00                DB     CR,LF,EndOfMessage
0328: 00A6         ;---------------------------------------
0329: 00A6             ROMControl:
0330: 00A6 01                     DB     DiskReadCode         ; Read function
0331: 00A7 00                     DB     00H                  ; unit number
0332: 00A8 00                     DB     00H                  ; head number
0333: 00A9 00                     DB     00H                  ; track number
0334: 00AA 01                     DB     01H                  ; Starting sector number ()
0335: 00AB 00 02                  DW     diskSectorSize       ; Number of bytes to read ( 1 Sector)
0336: 00AD 00 01                  DW     TPA                  ; read into this address
0337: 00AF 43 00                  DW     DiskStatusLocation   ; pointer to next block - no linking
0338: 00B1 40 00                  DW     DiskControlTable     ; pointer to next table- no linking
0339: 00B3
0340: 00B3             CodeEnd:
0341: 00B3
           ************************   Xref   ************************
0000: $               00B1
0079: ASCII_A         0041
0080: ASCII_C         0043
0081: ASCII_K         004B
0088: ASCII_LO_A      0061
0089: ASCII_LO_K      006B
0090: ASCII_LO_P      0070
0031: ASCII_MASK      007F
0082: ASCII_N         004E
0083: ASCII_Q         0051
0084: ASCII_R         0052
0085: ASCII_W         0057
0086: ASCII_Y         0059
0066: ASCII_ZERO      0030
0060: ASTERISK        002A
0145: BDOSBase        E800   0146 0148
0114: BDOSE           0005   0115
0146: BDOSEntry       E806
0135: BDOSLength      0E00   0138 0148 0149
0049: BELL            0007
0148: BIOSBase        F600
0136: BIOSLength      0A00   0138
0108: BIOSPAGE        0002
0149: BIOSStart       F600
0245: BlockSize       0800   0267
0282: BOOT_CON_ADDRESS 00EC   0320
0027: BYTE            0001
0087: CARET           005E
0143: CCPEntry        E000   0145 0149
0134: CCPLength       0800   0138 0145 0149
0340: CodeEnd         00B3
0287: CodeStart       0000
0067: COLON           003A
0062: COMMA           002C
0120: ComTail         0080   0121
0122: ComTailChars    0082
0121: ComTailCount    0081   0122
0222: cpmRecordSize   0080   0224 0227 0229
0052: CR              000D   0325 0327
0035: CTRL_C          0003
0036: CTRL_E          0005
0037: CTRL_H          0008
0038: CTRL_K          000B
0039: CTRL_L          000C
0040: CTRL_P          0010
0041: CTRL_R          0012
0042: CTRL_S          0013
0043: CTRL_U          0015
0044: CTRL_X          0018
0045: CTRL_Z          001A
0063: DASH            002D
0256: DataBlocks      02C7   0266
0255: DataSectors     0B1C   0256
0227: DirBuffSize     0080
0242: DirectoryBlockCount 0002   0267
0229: DirectoryEntryPerRecord 0004   0270
0226: DirEntrySize    0020   0229 0267
0214: DiskCommandBlock 0046   0296
0213: DiskControlByte 0045   0298
0216: DiskControlTable 0040   0338
0218: DiskReadCode    0001   0330
0223: diskSectorSize  0200   0224 0245 0253 0335
0212: DiskStatusLocation 0043   0306 0337
0219: DiskWriteCode   0002
0125: DMABuffer       0080   0312
0056: DOLLAR          0024
0268: dpb3hdAL0       00C0
0269: dpb3hdAL1       0000
0264: dpb3hdBLM       000F
0263: dpb3hdBSH       0004
0270: dpb3hdCKS       0020
0267: dpb3hdDRM       007F   0270
0266: dpb3hdDSM       02C6
0265: dpb3hdEXM       0000
0272: dpb3hdNOH       0002
0271: dpb3hdOFF       0001
0262: dpb3hdSPT       0090
0129: END_OF_FILE     001A
0033: EndOfMessage    0000   0327
0071: EQUAL_SIGN      003D
0054: EXCLAIM_POINT   0021
0022: FALSE           0000
0117: FCB1            005C   0118
0118: FCB2            006C
0162: fCloseFile      0010
0153: fConsoleIn      0001
0154: fConsoleOut     0002
0165: fDeleteFile     0013
0157: fGetConsoleStatus 000B
0171: fGetCurrentDisk 0019
0170: fGetLoginVector 0018
0173: fGetSetUserNumber 0020
0158: fGetVersion     000C
0168: fMakeFile       0016
0161: fOpenFile       000F
0155: fPrintString    0009
0166: fReadSeq        0014
0156: fReadString     000A
0169: fRenameFile     0017
0159: fResetSystem    000D
0163: fSearchFirst    0011
0164: fSearchNext     0012
0160: fSelectDisk     000E
0172: fSetDMA         001A
0167: fWriteSeq       0015
0072: GREATER_THAN    003E
0055: HASH_TAG        0023
0109: IOBYTE          0003
0058: L_PAREN         0028
0075: LEFT_ARROW      005F
0091: LEFT_CURLY      007B
0138: LengthInBytes   2000   0139 0143 0253
0139: LengthInK       0009
0070: LESS_THAN       003C
0051: LF              000A   0325 0327
0025: LO_NIBBLE_MASK  000F
0141: MemorySize      0040   0143
0254: myOffset        0001   0255 0271
0314: NoDisk          0080   0292
0324: NoDiskMessage   008B   0315
0047: NULL            0000
0238: NumberOfHeads   0002   0249 0251 0262 0272
0235: NumberOfLogicalDisks 0004
0024: OFF             0000
0023: ON              FFFF
0057: PERCENT         0025
0064: PERIOD          002E
0112: Pg0CurentDisk   0004
0111: Pg0CurentUser   0004   0112
0061: PLUS_SIGN       002B
0073: QMARK           003F
0059: R_PAREN         0029
0105: RAM             0000   0107 0108 0109 0111 0114 0117 0120 0125 0127
0295: ReadRawDisk     000D   0289
0247: RecordsPerBlock 0010
0231: RecordsPerExtent 0080
0224: recordsPerSector 0004   0247 0262
0329: ROMControl      00A6   0288
0076: RUBOUT          007F
0276: SectorMask      0003
0241: SectorsPerBlock 0004   0245 0247 0250 0256 0276
0251: SectorsPerCylinder 0024   0254 0255
0240: SectorsPerTrack 0012   0249 0251 0262
0069: SEMICOLON       003B
0316: SendMessage1    0083   0322
0065: SLASH           002F
0048: SOH             0001
0053: SPACE           0020
0253: SystemSectors   0011   0254
0050: TAB             0009
0115: TopRAM          0007
0250: TotalNumberOfBlocks 02D0
0249: TotalNumberOfSectors 0B40   0250 0255
0127: TPA             0100   0290 0336
0239: TracksPerHead   0050   0249
0021: TRUE            FFFF
0074: UNDER_SCORE     005F
0301: WaitForBootComplete 0015   0304
0107: WarmBoot        0000
0028: WORD            0002
0187: WriteAllocated  0000
0189: WriteCleanBuffer 0002
0188: WriteDirectory  0001
0032: ZERO            0000
