0001: 0100         ; A.Z80
0002: 0100         ;
0003: 0100         ;	2018-11-30
0004: 0100         ; 5
0005: 0100
0006: 0100             IN_OPCODE  EQU    0DBH                 ; opcode for read
0007: 0100             OUT_OPCODE EQU    0D3H                 ; opcode for Write
0008: 0100             END_OF_FILE EQU    01AH                 ;		; End Of File code
0009: 0100             ASCII_MASK EQU    07FH                 ; bits 0-6
0010: 0100             DUMMY_VALUE EQU    00H                  ; place holder for Dummy Status mask
0011: 0100
0012: 0100             StackTop   EQU    0100H
0013: 0100
0014: 0100
0015: 0100                        ORG    0100H
0016: 0100             Start:
0017: 0100 31 00 01               LD     SP,StackTop
0018: 0103         ;	CALL ConStatus
0019: 0103         ;	CALL	ConIn
0020: 0103         ;	LD		C,045H
0021: 0103         ;	CALL	CONOut
0022: 0103 CD 2A 01               CALL   LISTST
0023: 0106 76                     HALT
0024: 0107 18 F7                  JR     Start
0025: 0109
0026: 0109             IOBYTE:    DS     1
0027: 010A         ;---------------------------------------------------------------------------
0028: 010A         ;				BIOS Character I/O devices
0029: 010A         ;
0030: 010A         ;				BIOS JMP vector		Function
0031: 010A         ;					--				--------
0032: 010A         ;		ConStatus:	02			 	Console Status
0033: 010A         ;		ConIn:		03				Console In
0034: 010A         ;		CONOut:		04				Console Out
0035: 010A         ;					05				List Out
0036: 010A         ;					06				Punch Out
0037: 010A         ;					07				Reader In
0038: 010A         ;					0F				List Status
0039: 010A
0040: 010A
0041: 010A
0042: 010A         ;---------------------------------------------------------------------------
0043: 010A         ;	Console Status:		BIOS 02
0044: 010A         ; Entered directly from BIOS JMP vector, returns Register A
0045: 010A         ; 00H -> No data ,  0FFH -> there is data
0046: 010A         ;
0047: 010A
0048: 010A             ConStatus:
0049: 010A CD 3C 01               CALL   GetConInStatus
0050: 010D B7                     OR     A
0051: 010E C8                     RET    Z                    ; 00 => No data pending
0052: 010F 3E FF                  LD     A,0FFH
0053: 0111 C9                     RET                         ; OFFH => Data in Buffer
0054: 0112
0055: 0112         ;---------------------------------------------------------------------------
0056: 0112         ;	Console In:		BIOS 03
0057: 0112         ; Get console Input character entered directly from the BIOS jmp Vector
0058: 0112         ; return the character from the console in the A register.
0059: 0112         ; most significant bit will be 0. except when "reader" (communication)
0060: 0112         ; port has input , all 8 bits are reurned
0061: 0112         ;
0062: 0112         ; normally this follows a call to CONST ( a blocking call) to indicates a char is ready.
0063: 0112
0064: 0112             ConIn:
0065: 0112 CD 3C 01               CALL   GetConInStatus       ; is there incoming data ?
0066: 0115 28 FB                  JR     Z,ConIn              ; loop until there is some
0067: 0117 DD 6E 10               LD     L,(IX+ConDataInVector-ConStatInVector)
0068: 011A DD 66 11               LD     H,(IX+(ConDataInVector-ConStatInVector+1))
0069: 011D E9                     JP     (HL)
0070: 011E
0071: 011E         ;---------------------------------------------------------------------------
0072: 011E         ;	Console Out:		BIOS 04
0073: 011E         ;  entered directly from BIOS JMP Vector. it outputs the
0074: 011E         ; character in the C register to the appropriate device according to
0075: 011E         ; bits 1,0 of IOBYTE
0076: 011E             CONOut:
0077: 011E CD 42 01               CALL   GetConOutStatus
0078: 0121 28 FB                  JR     Z,CONOut
0079: 0123 DD 6E 10               LD     L,(IX+ConDataOutVector-ConStatOutVector)
0080: 0126 DD 66 11               LD     H,(IX+(ConDataOutVector-ConStatOutVector+1))
0081: 0129 E9                     JP     (HL)
0082: 012A         ;---------------------------------------------------------------------------
0083: 012A         ;	List Status:  BIOS 0F
0084: 012A
0085: 012A             LISTST:
0086: 012A         ; List Device (output) status entered directly from the BIOS JMP Vector
0087: 012A         ; returns in A the list device status that indicates if the device will
0088: 012A         ; accept another character the IOBYTE's bits 7,6 determine the physical device
0089: 012A         ; A =  00H : no Device cannot accept data. zero flag set
0090: 012A         ;     0FFH :  All can accept data. zero flag cleared
0091: 012A
0092: 012A 3E 00                  LD     A,00H
0093: 012C CD 5A 01               CALL   GetAllLSTStatus
0094: 012F 76                     HALT
0095: 0130
0096: 0130
0097: 0130         ;=============================================================================
0098: 0130             SetIndexesIO:
0099: 0130 E6 03                  AND    03H                  ; Get bits 0 & 1;
0100: 0132 16 00                  LD     D,00H
0101: 0134 5F                     LD     E,A                  ; load byte index int DE
0102: 0135 FD 19                  ADD    IY,DE                ; add to the value vector base
0103: 0137
0104: 0137 87                     ADD    A,A                  ; Double for word size index
0105: 0138         ;	LD	D,00H
0106: 0138 5F                     LD     E,A                  ; load word index int DE
0107: 0139 DD 19                  ADD    IX,DE                ; add to the Routine vector base
0108: 013B C9                     RET
0109: 013C
0110: 013C         ;---------------------------------------------------------------------
0111: 013C             GetConInStatus:
0112: 013C DD 21 AD 01               LD     IX,ConStatInVector   ; vector to I/O routines
0113: 0140 18 04                  JR     GetConStatus
0114: 0142             GetConOutStatus:
0115: 0142 DD 21 B5 01               LD     IX,ConStatOutVector  ; vector to I/O routines
0116: 0146
0117: 0146             GetConStatus:
0118: 0146 3A 09 01               LD     A,(IOBYTE)           ; Get Physical device
0119: 0149 FD 21 CD 01               LD     IY,ConStatPort       ; vector to I/O values
0120: 014D CD 30 01               CALL   SetIndexesIO         ; set up IX & IY
0121: 0150 DD 6E 00               LD     L,(IX+0)
0122: 0153 DD 66 01               LD     H,(IX+1)             ; HL Points to the routine
0123: 0156 E9                     JP     (HL)
0124: 0157         ;----------------------------------------------------------------
0125: 0157
0126: 0157             GetLSTStatus:
0127: 0157 3A 09 01               LD     A,(IOBYTE)           ; Get Physical device
0128: 015A             GetAllLSTStatus:
0129: 015A DD 21 00 10               LD     IX,LSTStatOutVector  ; vector to I/O routines
0130: 015E FD 21 0A 10               LD     IY,LSTStatPort       ; vector to I/O values
0131: 0162 CD 30 01               CALL   SetIndexesIO         ; set up IX & IY
0132: 0165 DD 6E 00               LD     L,(IX+0)
0133: 0168 DD 66 01               LD     H,(IX+1)             ; HL Points to the routine
0134: 016B E9                     JP     (HL)
0135: 016C
0136: 016C         ;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
0137: 016C             TTYOutStatus:
0138: 016C             CRTOutStatus:
0139: 016C             COMOutStatus:
0140: 016C FD 56 0C               LD     D,(IY+(ConStatOutMask-ConStatPort))
0141: 016F 18 03                  JR     ConInOutStatus
0142: 0171             TTYInStatus:
0143: 0171             CRTInStatus:
0144: 0171             COMInStatus:
0145: 0171 FD 56 08               LD     D,(IY+(ConStatInMask-ConStatPort))
0146: 0174             ConInOutStatus:
0147: 0174 FD 7E 00               LD     A,(IY+(ConStatPort-ConStatPort)) ; Status Port
0148: 0177 32 7B 01               LD     (InputStatusPort),A
0149: 017A DB                     DB     IN_OPCODE
0150: 017B             InputStatusPort:
0151: 017B 00                     DB     00                   ; Modified code location
0152: 017C A2                     AND    D
0153: 017D C9                     RET                         ; 00 => No data pending
0154: 017E 76                     HALT
0155: 017F
0156: 017F             TTYInData:
0157: 017F             CRTInData0:
0158: 017F             COMInData:
0159: 017F FD 7E 04               LD     A,(IY+ConDataPort-ConStatPort)
0160: 0182 32 86 01               LD     (InputDataPort),A
0161: 0185 DB                     DB     IN_OPCODE
0162: 0186 00          InputDataPort: DB     00                   ; Modified code location
0163: 0187 C9                     RET
0164: 0188
0165: 0188             CRTInData:
0166: 0188 CD 7F 01               CALL   CRTInData0
0167: 018B E6 7F                  AND    ASCII_MASK           ; strip off bit 7
0168: 018D C9                     RET
0169: 018E
0170: 018E             TTYOutData:
0171: 018E             CRTOutData:
0172: 018E             COMOutData:
0173: 018E FD 7E 04               LD     A,(IY+ConDataPort-ConStatPort)
0174: 0191 32 96 01               LD     (OutputDataPort),A
0175: 0194 79                     LD     A,C                  ; Get Byte from C to output
0176: 0195 D3                     DB     OUT_OPCODE
0177: 0196 00          OutputDataPort: DB     00                   ; Modified code location
0178: 0197 C9                     RET
0179: 0198         ;......................................................
0180: 0198             LPTOutStatus:
0181: 0198 FD 56 08               LD     D,(IY+(LSTStatOutMask-LSTStatPort))
0182: 019B FD 7E 00               LD     A,(IY+(LSTStatPort-LSTStatPort)) ; Status port
0183: 019E 32 A2 01               LD     (InputStatusPort1),A
0184: 01A1 DB                     DB     IN_OPCODE
0185: 01A2             InputStatusPort1:
0186: 01A2 00                     DB     00                   ; Modified code location
0187: 01A3 A2                     AND    D
0188: 01A4 C9                     RET                         ; 00 => No data pending
0189: 01A5 76                     HALT
0190: 01A6
0191: 01A6         ;........................................................
0192: 01A6             DummyStatus:
0193: 01A6 3E FF                  LD     A,0FFH
0194: 01A8 B7                     OR     A                    ; Reset the Z Flag
0195: 01A9 C9                     RET                         ; Dummy always returns FFH
0196: 01AA             DummyInput:
0197: 01AA 3E 1A                  LD     A,END_OF_FILE        ;			; Always returns End Of File
0198: 01AC             DummyOutput:
0199: 01AC C9                     RET
0200: 01AD
0201: 01AD         ;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
0202: 01AD
0203: 01AD         ;-----------  CON: -----Bits 1 & 0 -------------------
0204: 01AD         ;		ORG		2000H
0205: 01AD             ConStatInVector:
0206: 01AD 71 01                  DW     TTYInStatus
0207: 01AF 71 01                  DW     CRTInStatus
0208: 01B1 71 01                  DW     COMInStatus
0209: 01B3 A6 01                  DW     DummyStatus
0210: 01B5             ConStatOutVector:
0211: 01B5 6C 01                  DW     TTYOutStatus
0212: 01B7 6C 01                  DW     CRTOutStatus
0213: 01B9 6C 01                  DW     COMOutStatus
0214: 01BB A6 01                  DW     DummyStatus
0215: 01BD             ConDataInVector:
0216: 01BD 7F 01                  DW     TTYInData
0217: 01BF 88 01                  DW     CRTInData
0218: 01C1 7F 01                  DW     COMInData
0219: 01C3 AA 01                  DW     DummyInput
0220: 01C5             ConDataOutVector:
0221: 01C5 8E 01                  DW     TTYOutData
0222: 01C7 8E 01                  DW     CRTOutData
0223: 01C9 8E 01                  DW     COMOutData
0224: 01CB AC 01                  DW     DummyOutput
0225: 01CD             ConStatPort:
0226: 01CD ED                     DB     TTYStatusPort
0227: 01CE 02                     DB     CRTStatusPort
0228: 01CF ED                     DB     COMStatusPort
0229: 01D0 00                     DB     DUMMY_VALUE
0230: 01D1             ConDataPort:
0231: 01D1 EC                     DB     TTYDataPort
0232: 01D2 01                     DB     CRTDataPort
0233: 01D3 EC                     DB     COMDataPort
0234: 01D4 00                     DB     DUMMY_VALUE
0235: 01D5             ConStatInMask:
0236: 01D5 02                     DB     TTYStatusInMask
0237: 01D6 7F                     DB     CRTStatusInMask
0238: 01D7 02                     DB     COMStatusInMask
0239: 01D8 00                     DB     DUMMY_VALUE
0240: 01D9             ConStatOutMask:
0241: 01D9 01                     DB     TTYStatusOutMask
0242: 01DA 80                     DB     CRT_StatusOutMask
0243: 01DB 1D                     DB     COMStatusOutMask
0244: 01DC 00                     DB     DUMMY_VALUE
0245: 01DD
0246: 01DD         ;-----------  LST: -----Bits 7 & 6 -------------------
0247: 01DD                        ORG    1000H
0248: 1000             LSTStatInVector:
0249: 1000         ;	DW	TTYInStatus
0250: 1000         ;	DW	CRTInStatus
0251: 1000         ;	DW	LPTInStatus
0252: 1000         ;	DW	DummyStatus
0253: 1000             LSTStatOutVector:
0254: 1000 6C 01                  DW     TTYOutStatus
0255: 1002 6C 01                  DW     CRTOutStatus
0256: 1004 98 01                  DW     LPTOutStatus
0257: 1006 A6 01                  DW     DummyStatus
0258: 1008         ;LSTDataInVector:
0259: 1008         ;	DW	TTYInData
0260: 1008         ;	DW	CRTInData
0261: 1008         ;	DW	LPTInData
0262: 1008         ;	DW	DummyInput
0263: 1008             LSTDataOutVector:
0264: 1008         ;	DW	TTYOutData
0265: 1008         ;	DW	CRTOutData
0266: 1008         ;	DW	LPTOutData
0267: 1008 AC 01                  DW     DummyOutput
0268: 100A             LSTStatPort:
0269: 100A ED                     DB     TTYStatusPort
0270: 100B 02                     DB     CRTStatusPort
0271: 100C 11                     DB     LPTStatusPort
0272: 100D 00                     DB     DUMMY_VALUE
0273: 100E             LSTDataPort:
0274: 100E EC                     DB     TTYDataPort
0275: 100F 01                     DB     CRTDataPort
0276: 1010 10                     DB     LPTDataPort
0277: 1011 00                     DB     DUMMY_VALUE
0278: 1012         ;LSTStatInMask:
0279: 1012         ;	DB	TTYStatusInMask
0280: 1012         ;	DB	CRTStatusInMask
0281: 1012         ;	DB	LPTtatusInMask
0282: 1012         ;	DB	DUMMY_VALUE
0283: 1012             LSTStatOutMask:
0284: 1012 01                     DB     TTYStatusOutMask
0285: 1013 80                     DB     CRT_StatusOutMask
0286: 1014 FF                     DB     LPTStatusOutMask
0287: 1015 00                     DB     DUMMY_VALUE
0288: 1016
0289: 1016
0290: 1016
0291: 1016
0292: 1016         ;---------------------------------------------------------------
0293: 1016
0294: 1016             PhysicalStatusPort:
0295: 1016             TTYStatusPort EQU    0EDH
0296: 1016             CRTStatusPort EQU    02H
0297: 1016             COMStatusPort EQU    0EDH
0298: 1016             LPTStatusPort EQU    011H
0299: 1016
0300: 1016             PhysicalDataPort:
0301: 1016             TTYDataPort EQU    0ECH
0302: 1016             CRTDataPort EQU    01H
0303: 1016             COMDataPort EQU    0ECH
0304: 1016             LPTDataPort EQU    010H
0305: 1016
0306: 1016             PhysicalStatusInMask:
0307: 1016             TTYStatusInMask EQU    02H
0308: 1016             CRTStatusInMask EQU    07FH
0309: 1016             COMStatusInMask EQU    02H
0310: 1016             LPTStatusInMask EQU    07FH
0311: 1016
0312: 1016             PhysicalStatusOutMask:
0313: 1016             TTYStatusOutMask EQU    01H
0314: 1016             CRT_StatusOutMask EQU    080H
0315: 1016             COMStatusOutMask EQU    01DH
0316: 1016             LPTStatusOutMask EQU    0FFH
0317: 1016
0318: 1016
0319: 1016         ;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
           ************************   Xref   ************************
0000: $               1016
0009: ASCII_MASK      007F   0167
0303: COMDataPort     00EC   0233
0158: COMInData       017F   0218
0144: COMInStatus     0171   0208
0172: COMOutData      018E   0223
0139: COMOutStatus    016C   0213
0309: COMStatusInMask 0002   0238
0315: COMStatusOutMask 001D   0243
0297: COMStatusPort   00ED   0228
0215: ConDataInVector 01BD   0067 0068
0220: ConDataOutVector 01C5   0079 0080
0230: ConDataPort     01D1   0159 0173
0064: ConIn           0112   0066
0146: ConInOutStatus  0174   0141
0076: CONOut          011E   0078
0235: ConStatInMask   01D5   0145
0205: ConStatInVector 01AD   0067 0068 0112
0240: ConStatOutMask  01D9   0140
0210: ConStatOutVector 01B5   0079 0080 0115
0225: ConStatPort     01CD   0119 0140 0145 0147 0159 0173
0048: ConStatus       010A
0314: CRT_StatusOutMask 0080   0242 0285
0302: CRTDataPort     0001   0232 0275
0165: CRTInData       0188   0217
0157: CRTInData0      017F   0166
0143: CRTInStatus     0171   0207
0171: CRTOutData      018E   0222
0138: CRTOutStatus    016C   0212 0255
0308: CRTStatusInMask 007F   0237
0296: CRTStatusPort   0002   0227 0270
0010: DUMMY_VALUE     0000   0229 0234 0239 0244 0272 0277 0287
0196: DummyInput      01AA   0219
0198: DummyOutput     01AC   0224 0267
0192: DummyStatus     01A6   0209 0214 0257
0008: END_OF_FILE     001A   0197
0128: GetAllLSTStatus 015A   0093
0111: GetConInStatus  013C   0049 0065
0114: GetConOutStatus 0142   0077
0117: GetConStatus    0146   0113
0126: GetLSTStatus    0157
0006: IN_OPCODE       00DB   0149 0161 0184
0162: InputDataPort   0186   0160
0150: InputStatusPort 017B   0148
0185: InputStatusPort1 01A2   0183
0026: IOBYTE          0109   0118 0127
0085: LISTST          012A   0022
0304: LPTDataPort     0010   0276
0180: LPTOutStatus    0198   0256
0310: LPTStatusInMask 007F
0316: LPTStatusOutMask 00FF   0286
0298: LPTStatusPort   0011   0271
0263: LSTDataOutVector 1008
0273: LSTDataPort     100E
0248: LSTStatInVector 1000
0283: LSTStatOutMask  1012   0181
0253: LSTStatOutVector 1000   0129
0268: LSTStatPort     100A   0130 0181 0182
0007: OUT_OPCODE      00D3   0176
0177: OutputDataPort  0196   0174
0300: PhysicalDataPort 1016
0306: PhysicalStatusInMask 1016
0312: PhysicalStatusOutMask 1016
0294: PhysicalStatusPort 1016
0098: SetIndexesIO    0130   0120 0131
0012: StackTop        0100   0017
0016: Start           0100   0024
0301: TTYDataPort     00EC   0231 0274
0156: TTYInData       017F   0216
0142: TTYInStatus     0171   0206
0170: TTYOutData      018E   0221
0137: TTYOutStatus    016C   0211 0254
0307: TTYStatusInMask 0002   0236
0313: TTYStatusOutMask 0001   0241 0284
0295: TTYStatusPort   00ED   0226 0269
