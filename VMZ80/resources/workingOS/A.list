0001: 0100         ; A.Z80
0002: 0100         ;
0003: 0100         ;	2018-11-30
0004: 0100         ; 5
0005: 0100
0006: 0100             IN_OPCODE  EQU    0DBH                 ; opcode for read
0007: 0100             OUT_OPCODE EQU    0D3H                 ; opcode for Write
0008: 0100             END_OF_FILE EQU    01AH                 ;		; End Of File code
0009: 0100             ASCII_MASK EQU    07FH                 ; bits 0-6
0010: 0100
0011: 0100             StackTop   EQU    0100H
0012: 0100
0013: 0100
0014: 0100                        ORG    0100H
0015: 0100             Start:
0016: 0100 31 00 01               LD     SP,StackTop
0017: 0103         ;	CALL ConStatus
0018: 0103         ;	CALL	ConIn
0019: 0103 0E 45                  LD     C,045H
0020: 0105 CD 3C 01               CALL   CONOut
0021: 0108 76                     HALT
0022: 0109 18 F5                  JR     Start
0023: 010B
0024: 010B             IOBYTE:    DS     1
0025: 010C         ;---------------------------------------------------------------------------
0026: 010C         ;				BIOS Character I/O devices
0027: 010C         ;
0028: 010C         ;				BIOS JMP vector		Function
0029: 010C         ;					--				--------
0030: 010C         ;		ConStatus:	02			 	Console Status
0031: 010C         ;		ConIn:		03				Console In
0032: 010C         ;					04				Console Out
0033: 010C         ;					05				List Out
0034: 010C         ;					06				Punch Out
0035: 010C         ;					07				Reader In
0036: 010C         ;					0F				List Status
0037: 010C
0038: 010C
0039: 010C
0040: 010C         ;---------------------------------------------------------------------------
0041: 010C         ;	Console Status  BIOS 02
0042: 010C         ; Entered directly from BIOS JMP vector, returns Register A
0043: 010C         ; 00H -> No data ,  0FFH -> there is data
0044: 010C         ;
0045: 010C
0046: 010C             ConStatus:
0047: 010C CD 14 01               CALL   GetConInStatus
0048: 010F B7                     OR     A
0049: 0110 C8                     RET    Z                    ; 00 => No data pending
0050: 0111 3E FF                  LD     A,0FFH
0051: 0113 C9                     RET                         ; OFFH => Data in Buffer
0052: 0114
0053: 0114             GetConInStatus:
0054: 0114 DD 21 00 10               LD     IX,ConStatInVector   ; vector to I/O routines
0055: 0118 18 04                  JR     GetConStatus
0056: 011A             GetConOutStatus:
0057: 011A DD 21 08 10               LD     IX,ConStatOutVector  ; vector to I/O routines
0058: 011E
0059: 011E             GetConStatus:
0060: 011E 3A 0B 01               LD     A,(IOBYTE)           ; Get Physical device
0061: 0121 FD 21 20 10               LD     IY,ConStatPort       ; vector to I/O values
0062: 0125 CD 48 01               CALL   SetIndexesIO         ; set up IX & IY
0063: 0128 DD 6E 00               LD     L,(IX+0)
0064: 012B DD 66 01               LD     H,(IX+1)             ; HL Points to the routine
0065: 012E E9                     JP     (HL)
0066: 012F
0067: 012F 76                     HALT
0068: 0130
0069: 0130         ;---------------------------------------------------------------------------
0070: 0130         ;	Console In  BIOS 03
0071: 0130         ; Get console Input character entered directly from the BIOS jmp Vector
0072: 0130         ; return the character from the console in the A register.
0073: 0130         ; most significant bit will be 0. except when "reader" (communication)
0074: 0130         ; port has input , all 8 bits are reurned
0075: 0130         ;
0076: 0130         ; normally this follows a call to CONST ( a blocking call) to indicates a char is ready.
0077: 0130
0078: 0130             ConIn:
0079: 0130 CD 14 01               CALL   GetConInStatus       ; is there incoming data ?
0080: 0133 28 FB                  JR     Z,ConIn              ; loop until there is some
0081: 0135 DD 6E 10               LD     L,(IX+ConDataInVector-ConStatInVector)
0082: 0138 DD 66 11               LD     H,(IX+(ConDataInVector-ConStatInVector+1))
0083: 013B E9                     JP     (HL)
0084: 013C
0085: 013C         ;---------------------------------------------------------------------------
0086: 013C         ;	Console Out  BIOS 04
0087: 013C         ;  entered directly from BIOS JMP Vector. it outputs the
0088: 013C         ; character in the C register to the appropriate device according to
0089: 013C         ; bits 1,0 of IOBYTE
0090: 013C             CONOut:
0091: 013C CD 1A 01               CALL   GetConOutStatus
0092: 013F 28 FB                  JR     Z,CONOut
0093: 0141 DD 6E 10               LD     L,(IX+ConDataOutVector-ConStatOutVector)
0094: 0144 DD 66 11               LD     H,(IX+(ConDataOutVector-ConStatOutVector+1))
0095: 0147 E9                     JP     (HL)
0096: 0148         ;	LD		A,(IOBYTE)							; get i/o redirection byte
0097: 0148         ;	CALL 	SelectRoutine
0098: 0148
0099: 0148         ;=============================================================================
0100: 0148             SetIndexesIO:
0101: 0148 E6 03                  AND    03H                  ; Get bits 0 & 1;
0102: 014A 16 00                  LD     D,00H
0103: 014C 5F                     LD     E,A                  ; load byte index int DE
0104: 014D FD 19                  ADD    IY,DE                ; add to the value vector base
0105: 014F
0106: 014F 87                     ADD    A,A                  ; Double for word size index
0107: 0150         ;	LD	D,00H
0108: 0150 5F                     LD     E,A                  ; load word index int DE
0109: 0151 DD 19                  ADD    IX,DE                ; add to the Routine vector base
0110: 0153 C9                     RET
0111: 0154
0112: 0154
0113: 0154             SelectRoutine:
0114: 0154 E6 03                  AND    03H                  ; Get bits 0 & 1;
0115: 0156 16 00                  LD     D,00H
0116: 0158 5F                     LD     E,A                  ; load byte index int DE
0117: 0159 FD 19                  ADD    IY,DE                ; add to the value vector base
0118: 015B
0119: 015B 87                     ADD    A,A                  ; Double for word size index
0120: 015C         ;	LD	D,00H
0121: 015C 5F                     LD     E,A                  ; load word index int DE
0122: 015D DD 19                  ADD    IX,DE                ; add to the Routine vector base
0123: 015F DD 6E 00               LD     L,(IX+0)
0124: 0162 DD 66 01               LD     H,(IX+1)             ; HL Points to the routine
0125: 0165 E9                     JP     (HL)                 ; go to the routine
0126: 0166
0127: 0166
0128: 0166             TTYOutStatus:
0129: 0166             CRTOutStatus:
0130: 0166             COMOutStatus:
0131: 0166 FD 56 0C               LD     D,(IY+(ConStatOutMask-ConStatPort))
0132: 0169 18 03                  JR     ConInOutStatus
0133: 016B             TTYInStatus:
0134: 016B             CRTInStatus:
0135: 016B             COMInStatus:
0136: 016B FD 56 08               LD     D,(IY+(ConStatInMask-ConStatPort))
0137: 016E             ConInOutStatus:
0138: 016E FD 7E 00               LD     A,(IY+(ConStatPort-ConStatPort)) ; Status Port
0139: 0171 32 75 01               LD     (InputStatusPort),A
0140: 0174 DB                     DB     IN_OPCODE
0141: 0175             InputStatusPort:
0142: 0175 00                     DB     00                   ; Modified code location
0143: 0176 A2                     AND    D
0144: 0177 C9                     RET                         ; 00 => No data pending
0145: 0178 76                     HALT
0146: 0179
0147: 0179             TTYInData:
0148: 0179             CRTInData0:
0149: 0179             COMInData:
0150: 0179 FD 7E 04               LD     A,(IY+ConDataPort-ConStatPort)
0151: 017C 32 80 01               LD     (InputDataPort),A
0152: 017F DB                     DB     IN_OPCODE
0153: 0180 00          InputDataPort: DB     00                   ; Modified code location
0154: 0181 C9                     RET
0155: 0182
0156: 0182             CRTInData:
0157: 0182 CD 79 01               CALL   CRTInData0
0158: 0185 E6 7F                  AND    ASCII_MASK           ; strip off bit 7
0159: 0187 C9                     RET
0160: 0188
0161: 0188             TTYOutData:
0162: 0188             CRTOutData:
0163: 0188             COMOutData:
0164: 0188 FD 7E 04               LD     A,(IY+ConDataPort-ConStatPort)
0165: 018B 32 90 01               LD     (OutputDataPort),A
0166: 018E 79                     LD     A,C                  ; Get Byte from C to output
0167: 018F D3                     DB     OUT_OPCODE
0168: 0190 00          OutputDataPort: DB     00                   ; Modified code location
0169: 0191 C9                     RET
0170: 0192
0171: 0192
0172: 0192
0173: 0192
0174: 0192
0175: 0192             DummyStatus:
0176: 0192 3E FF                  LD     A,0FFH
0177: 0194 B7                     OR     A                    ; Reset the Z Flag
0178: 0195 C9                     RET                         ; Dummy always returns FFH
0179: 0196             DummyInput:
0180: 0196 3E 1A                  LD     A,END_OF_FILE        ;		; Always returns End Of File
0181: 0198             DummyOutput:
0182: 0198 C9                     RET
0183: 0199
0184: 0199         ;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
0185: 0199
0186: 0199         ;-----------  CON: -----Bits 1 & 0 -------------------
0187: 0199                        ORG    1000H
0188: 1000             ConStatInVector:
0189: 1000 6B 01                  DW     TTYInStatus
0190: 1002 6B 01                  DW     CRTInStatus
0191: 1004 6B 01                  DW     COMInStatus
0192: 1006 92 01                  DW     DummyStatus
0193: 1008             ConStatOutVector:
0194: 1008 66 01                  DW     TTYOutStatus
0195: 100A 66 01                  DW     CRTOutStatus
0196: 100C 66 01                  DW     COMOutStatus
0197: 100E 92 01                  DW     DummyStatus
0198: 1010             ConDataInVector:
0199: 1010 79 01                  DW     TTYInData
0200: 1012 82 01                  DW     CRTInData
0201: 1014 79 01                  DW     COMInData
0202: 1016 96 01                  DW     DummyInput
0203: 1018             ConDataOutVector:
0204: 1018 88 01                  DW     TTYOutData
0205: 101A 88 01                  DW     CRTOutData
0206: 101C 88 01                  DW     COMOutData
0207: 101E 98 01                  DW     DummyOutput
0208: 1020             ConStatPort:
0209: 1020 ED                     DB     TTYStatusPort
0210: 1021 02                     DB     CRTStatusPort
0211: 1022 ED                     DB     COMStatusPort
0212: 1023 11                     DB     LPTStatusPort
0213: 1024             ConDataPort:
0214: 1024 EC                     DB     TTYDataPort
0215: 1025 01                     DB     CRTDataPort
0216: 1026 EC                     DB     COMDataPort
0217: 1027 10                     DB     LPTDataPort
0218: 1028             ConStatInMask:
0219: 1028 02                     DB     TTYStatusInMask
0220: 1029 7F                     DB     CRTStatusInMask
0221: 102A 02                     DB     COMStatusInMask
0222: 102B 7F                     DB     LPTStatusInMask
0223: 102C             ConStatOutMask:
0224: 102C 01                     DB     TTYStatusOutMask
0225: 102D 80                     DB     CRT_StatusOutMask
0226: 102E 1D                     DB     COMStatusOutMask
0227: 102F FF                     DB     LPTStatusOutMask
0228: 1030
0229: 1030
0230: 1030
0231: 1030
0232: 1030
0233: 1030
0234: 1030             PhysicalStatusPort:
0235: 1030             TTYStatusPort EQU    0EDH
0236: 1030             CRTStatusPort EQU    02H
0237: 1030             COMStatusPort EQU    0EDH
0238: 1030             LPTStatusPort EQU    011H
0239: 1030
0240: 1030             PhysicalDataPort:
0241: 1030             TTYDataPort EQU    0ECH
0242: 1030             CRTDataPort EQU    01H
0243: 1030             COMDataPort EQU    0ECH
0244: 1030             LPTDataPort EQU    010H
0245: 1030
0246: 1030             PhysicalStatusInMask:
0247: 1030             TTYStatusInMask EQU    02H
0248: 1030             CRTStatusInMask EQU    07FH
0249: 1030             COMStatusInMask EQU    02H
0250: 1030             LPTStatusInMask EQU    07FH
0251: 1030
0252: 1030             PhysicalStatusOutMask:
0253: 1030             TTYStatusOutMask EQU    01H
0254: 1030             CRT_StatusOutMask EQU    080H
0255: 1030             COMStatusOutMask EQU    01DH
0256: 1030             LPTStatusOutMask EQU    0FFH
0257: 1030
0258: 1030
0259: 1030         ;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
           ************************   Xref   ************************
0000: $               1030
0009: ASCII_MASK      007F   0158
0243: COMDataPort     00EC   0216
0149: COMInData       0179   0201
0135: COMInStatus     016B   0191
0163: COMOutData      0188   0206
0130: COMOutStatus    0166   0196
0249: COMStatusInMask 0002   0221
0255: COMStatusOutMask 001D   0226
0237: COMStatusPort   00ED   0211
0198: ConDataInVector 1010   0081 0082
0203: ConDataOutVector 1018   0093 0094
0213: ConDataPort     1024   0150 0164
0078: ConIn           0130   0080
0137: ConInOutStatus  016E   0132
0090: CONOut          013C   0020 0092
0218: ConStatInMask   1028   0136
0188: ConStatInVector 1000   0054 0081 0082
0223: ConStatOutMask  102C   0131
0193: ConStatOutVector 1008   0057 0093 0094
0208: ConStatPort     1020   0061 0131 0136 0138 0150 0164
0046: ConStatus       010C
0254: CRT_StatusOutMask 0080   0225
0242: CRTDataPort     0001   0215
0156: CRTInData       0182   0200
0148: CRTInData0      0179   0157
0134: CRTInStatus     016B   0190
0162: CRTOutData      0188   0205
0129: CRTOutStatus    0166   0195
0248: CRTStatusInMask 007F   0220
0236: CRTStatusPort   0002   0210
0179: DummyInput      0196   0202
0181: DummyOutput     0198   0207
0175: DummyStatus     0192   0192 0197
0008: END_OF_FILE     001A   0180
0053: GetConInStatus  0114   0047 0079
0056: GetConOutStatus 011A   0091
0059: GetConStatus    011E   0055
0006: IN_OPCODE       00DB   0140 0152
0153: InputDataPort   0180   0151
0141: InputStatusPort 0175   0139
0024: IOBYTE          010B   0060
0244: LPTDataPort     0010   0217
0250: LPTStatusInMask 007F   0222
0256: LPTStatusOutMask 00FF   0227
0238: LPTStatusPort   0011   0212
0007: OUT_OPCODE      00D3   0167
0168: OutputDataPort  0190   0165
0240: PhysicalDataPort 1030
0246: PhysicalStatusInMask 1030
0252: PhysicalStatusOutMask 1030
0234: PhysicalStatusPort 1030
0113: SelectRoutine   0154
0100: SetIndexesIO    0148   0062
0011: StackTop        0100   0016
0015: Start           0100   0022
0241: TTYDataPort     00EC   0214
0147: TTYInData       0179   0199
0133: TTYInStatus     016B   0189
0161: TTYOutData      0188   0204
0128: TTYOutStatus    0166   0194
0247: TTYStatusInMask 0002   0219
0253: TTYStatusOutMask 0001   0224
0235: TTYStatusPort   00ED   0209
