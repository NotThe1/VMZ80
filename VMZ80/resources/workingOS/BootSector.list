0001: 0100         ;     File created by MakeZ80Source on Tue Sep 18 10:01:22 EDT 2018 from:
0002: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\BootSector.asm
0003: 0100         ; BootSector.Z80
0004: 0100
0005: 0100         ; 2018-11-22   Z80 idiom
0006: 0100         ; 2017-04-07 Added equates for message IO : BOOT_CON_ADDRESS
0007: 0100         ;				 , and default IOBYTE : IOBYTE_DEFAULT
0008: 0100         ; 2017-03-02 Refactored the CP/M Suite
0009: 0100
0010: 0100                        Include ./stdHeader.Z80
0011: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0012: 0100         ;     File created by MakeZ80Source on Mon Sep 17 16:25:01 EDT 2018 from:
0013: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\stdHeader.asm
0014: 0100         ; stdHeader.asm
0015: 0100         ; standard equates
0016: 0100
0017: 0100         ; 2017-03-02 Refactored the CP/M Suite
0018: 0100
0019: 0100
0020: 0100             TRUE       EQU    -1                   ; not false
0021: 0100             FALSE      EQU    0000H
0022: 0100             ON         EQU    -1
0023: 0100             OFF        EQU    0000H
0024: 0100             LO_NIBBLE_MASK EQU    0FH                  ; mask used to obtain the bytes low four bits
0025: 0100
0026: 0100             BYTE       EQU    1                    ; number of bytes for "byte" type
0027: 0100             WORD       EQU    2                    ; number of bytes for "word" type
0028: 0100
0029: 0100
0030: 0100             ASCII_MASK EQU    7FH                  ; Ascii mask 7 bits
0031: 0100             ZERO       EQU    00H                  ; Zero
0032: 0100             EndOfMessage EQU    00H
0033: 0100
0034: 0100             CTRL_C     EQU    03H                  ; ETX
0035: 0100             CTRL_E     EQU    05H                  ; physical eol
0036: 0100             CTRL_H     EQU    08H                  ; backspace
0037: 0100             CTRL_K     EQU    0BH                  ; VT - Vertical tab
0038: 0100             CTRL_L     EQU    0CH                  ; FF - Form feed
0039: 0100             CTRL_P     EQU    10H                  ; prnt toggle
0040: 0100             CTRL_R     EQU    12H                  ; repeat line
0041: 0100             CTRL_S     EQU    13H                  ; X-OFF stop/start screen
0042: 0100             CTRL_U     EQU    15H                  ; line delete
0043: 0100             CTRL_X     EQU    18H                  ; =ctl-u
0044: 0100             CTRL_Z     EQU    1AH                  ; end of file
0045: 0100
0046: 0100             NULL       EQU    00H                  ; Null
0047: 0100             SOH        EQU    01H                  ; Start of Heading
0048: 0100             BELL       EQU    07H                  ; Bell
0049: 0100             TAB        EQU    09H                  ; Tab
0050: 0100             LF         EQU    0AH                  ; Line Feed
0051: 0100             CR         EQU    0DH                  ; Carriage Return
0052: 0100             SPACE      EQU    20H                  ; Space
0053: 0100             EXCLAIM_POINT EQU    21H                  ; Exclamtion Point
0054: 0100             HASH_TAG   EQU    23H                  ; Sharp sign #
0055: 0100             DOLLAR     EQU    24H                  ; Dollar Sign
0056: 0100             PERCENT    EQU    25H                  ; Percent Sign
0057: 0100             L_PAREN    EQU    28H                  ; Left Paenthesis (
0058: 0100             R_PAREN    EQU    29H                  ; Right Paenthesis )
0059: 0100             ASTERISK   EQU    2AH                  ; Asterisk *
0060: 0100             PLUS_SIGN  EQU    2BH                  ; Plus sign +
0061: 0100             COMMA      EQU    2CH                  ; Comma
0062: 0100             DASH       EQU    2DH                  ; Dash Hyphen -
0063: 0100             PERIOD     EQU    2EH                  ; Period
0064: 0100             SLASH      EQU    2FH                  ; /
0065: 0100             ASCII_ZERO EQU    30H                  ; zero
0066: 0100             COLON      EQU    3AH                  ; Colon
0067: 0100
0068: 0100             SEMICOLON  EQU    3BH                  ; Semi Colon
0069: 0100             LESS_THAN  EQU    3CH                  ; Less Than <
0070: 0100             EQUAL_SIGN EQU    3DH                  ; Equal Sign
0071: 0100             GREATER_THAN EQU    3EH                  ; Greater Than >
0072: 0100             QMARK      EQU    3FH                  ; Question Mark
0073: 0100             UNDER_SCORE EQU    5FH                  ; under score _
0074: 0100             LEFT_ARROW EQU    5FH                  ; Left Arrow ?
0075: 0100             RUBOUT     EQU    7FH                  ; Delete Key
0076: 0100
0077: 0100
0078: 0100             ASCII_A    EQU    'A'
0079: 0100             ASCII_C    EQU    'C'
0080: 0100             ASCII_K    EQU    'K'
0081: 0100             ASCII_N    EQU    'N'
0082: 0100             ASCII_Q    EQU    'Q'
0083: 0100             ASCII_R    EQU    'R'
0084: 0100             ASCII_W    EQU    'W'
0085: 0100             ASCII_Y    EQU    'Y'
0086: 0100             CARET      EQU    '^'
0087: 0100             ASCII_LO_A EQU    'a'
0088: 0100             ASCII_LO_K EQU    'k'
0089: 0100             ASCII_LO_P EQU    'p'
0090: 0100             LEFT_CURLY EQU    '{'                  ; Left curly Bracket
0091: 0100
0092: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0093: 0100                        Include ./osHeader.Z80
0094: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0095: 0100         ;     File created by MakeZ80Source on Mon Sep 17 16:25:47 EDT 2018 from:
0096: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\osHeader.asm
0097: 0100         ; osHeader.asm
0098: 0100
0099: 0100         ; 2017-03-02 Refactored the CP/M Suite
0100: 0100
0101: 0100         ; Contains the Equates used by the CP/M system
0102: 0100
0103: 0100         ;------------------------Page Zero Constants ---------------------------------
0104: 0100             RAM        EQU    0                    ; Start of RAM ( and the Base page)
0105: 0100
0106: 0100             WarmBoot   EQU    RAM + 0              ; Contains a JMP instruction to warm boot in BIOS
0107: 0100             BIOSPAGE   EQU    RAM + 2              ; BIOS Jump Vector Page
0108: 0100             IOBYTE     EQU    RAM + 3              ; Input/Output redirection byte
0109: 0100
0110: 0100             Pg0CurentUser EQU    RAM + 4              ; Current user ( bits 7-4)
0111: 0100             Pg0CurentDisk EQU    Pg0CurentUser        ; Default logical disk (bits 0-3)
0112: 0100
0113: 0100             BDOSE      EQU    RAM + 5              ; Contains a JMP to BDOS entry
0114: 0100             TopRAM     EQU    BDOSE+2              ; Top page of usable RAM
0115: 0100
0116: 0100             FCB1       EQU    RAM + 05CH           ; File Control Block #1
0117: 0100             FCB2       EQU    FCB1 + 16            ; File Control Block #2
0118: 0100
0119: 0100             ComTail    EQU    RAM + 080H           ; Complete command tail
0120: 0100             ComTailCount EQU    ComTail + 1          ; Count of the number of char in tail
0121: 0100             ComTailChars EQU    ComTailCount + 1     ; Complete Command tail up-cased, w/o trailing CR
0122: 0100         ;-----------------------------------------------------------------------
0123: 0100
0124: 0100             DMABuffer  EQU    RAM + 080H           ; Default "DMA" address used as buffer
0125: 0100         ;-----------------------------------------------------------------------
0126: 0100             TPA        EQU    RAM + 0100H          ; Start of Transient program Area
0127: 0100         ;-----------------------------------------------------------------------
0128: 0100             END_OF_FILE EQU    1AH                  ; end of file
0129: 0100         ;-----------------------------------------------------------------------
0130: 0100
0131: 0100         ;--------------- CP/M Constants -----------------------------------------
0132: 0100
0133: 0100             CCPLength  EQU    0800H                ; Constant
0134: 0100             BDOSLength EQU    0E00H                ; Constant 0E00H
0135: 0100             BIOSLength EQU    0A00H                ; Constant 0900H
0136: 0100
0137: 0100             LengthInBytes EQU    CCPLength + BDOSLength + BIOSLength
0138: 0100             LengthInK  EQU    (LengthInBytes/1024) + 1
0139: 0100
0140: 0100             MemorySize EQU    64
0141: 0100
0142: 0100             CCPEntry   EQU    (MemorySize * 1024) - LengthInBytes
0143: 0100
0144: 0100             BDOSBase   EQU    CCPEntry + CCPLength
0145: 0100             BDOSEntry  EQU    BDOSBase + 6
0146: 0100
0147: 0100             BIOSBase   EQU    BDOSBase + BDOSLength
0148: 0100             BIOSStart  EQU    CCPEntry + CCPLength + BDOSLength
0149: 0100         ;-----------------------------------------------------------------------
0150: 0100
0151: 0100         ;------------------- BDOS System Call Equates --------------------------
0152: 0100             fConsoleIn EQU    01H                  ; rcharf - Console Input
0153: 0100             fConsoleOut EQU    02H                  ; pcharf - Console Output
0154: 0100             fPrintString EQU    09H                  ; pbuff	- Print String
0155: 0100             fReadString EQU    0AH                  ; rbuff	- Read Console String
0156: 0100             fGetConsoleStatus EQU    0BH                  ; breakf - Get Console Status
0157: 0100             fGetVersion EQU    0CH                  ; liftf	- Return Version Number
0158: 0100             fResetSystem EQU    0DH                  ; initf	- Reset Disk System
0159: 0100             fSelectDisk EQU    0EH                  ; self	- Select Disk
0160: 0100             fOpenFile  EQU    0FH                  ; openf	- Open File
0161: 0100             fCloseFile EQU    10H                  ; closef - Close File
0162: 0100             fSearchFirst EQU    11H                  ; searf	- Search For First
0163: 0100             fSearchNext EQU    12H                  ; searnf - Search for Next
0164: 0100             fDeleteFile EQU    13H                  ; delf - Delete File
0165: 0100             fReadSeq   EQU    14H                  ; dreadf - Read Sequential
0166: 0100             fWriteSeq  EQU    15H                  ; dwritf - Write Sequential
0167: 0100             fMakeFile  EQU    16H                  ; makef	- Make File
0168: 0100             fRenameFile EQU    17H                  ; renf	- Rename File
0169: 0100             fGetLoginVector EQU    18H                  ; logf	- Return Login Vector
0170: 0100             fGetCurrentDisk EQU    19H                  ; cself	- Return Current Disk
0171: 0100             fSetDMA    EQU    1AH                  ; dmaf	- Set DMA address
0172: 0100             fGetSetUserNumber EQU    20H                  ; userf	- Set/Get User Code
0173: 0100         ;-----------------------------------------------------------------------
0174: 0100
0175: 0100
0176: 0100
0177: 0100
0178: 0100
0179: 0100         ;*******************************************************************************
0180: 0100         ; These are the values handed over by the BDOS when it calls the Writer operation
0181: 0100         ; The allocated.unallocated indicates whether the BDOS is set to write to an
0182: 0100         ; unallocated allocation block (it only indicates this for the first 128 byte
0183: 0100         ; sector write) or to an allocation block that has already been allocated to a
0184: 0100         ; file. The BDOS also indicates if it is set to write to the file directory
0185: 0100         ;*******************************************************************************
0186: 0100             WriteAllocated EQU    00H
0187: 0100             WriteDirectory EQU    01H
0188: 0100             WriteUnallocated EQU    02H
0189: 0100
0190: 0100
0191: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0192: 0100                        Include ./diskHeader.Z80
0193: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0194: 0100         ;     File created by MakeZ80Source on Mon Sep 17 16:26:22 EDT 2018 from:
0195: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\diskHeader.asm
0196: 0100         ; diskHeader.asm
0197: 0100
0198: 0100         ; 2017-03-02 Refactored the CP/M Suite
0199: 0100
0200: 0100         ; needs osHeader.asm declared before this is used !!!!!!!
0201: 0100
0202: 0100         ; Contains the Equates used by the CP/M system to handle disks
0203: 0100
0204: 0100
0205: 0100         ;*******************************************************************************
0206: 0100         ;
0207: 0100         ;     Disk related values
0208: 0100         ;
0209: 0100         ;
0210: 0100         ;*******************************************************************************
0211: 0100             DiskStatusLocation EQU    043H                 ; status after disk I/O placed here
0212: 0100             DiskControlByte EQU    045H                 ; control byte for disk I/O
0213: 0100             DiskCommandBlock EQU    046H                 ; Control Table Pointer
0214: 0100         ; for boot
0215: 0100             DiskControlTable EQU    0040H
0216: 0100
0217: 0100             DiskReadCode EQU    01H                  ; Code for Read
0218: 0100             DiskWriteCode EQU    02H                  ; Code for Write
0219: 0100
0220: 0100
0221: 0100             cpmRecordSize EQU    080H                 ; (128) record size that CP/M uses
0222: 0100             diskSectorSize EQU    200H                 ; (512) size of physical disk I/O
0223: 0100             recordsPerSector EQU    diskSectorSize/cpmRecordSize
0224: 0100
0225: 0100             DirEntrySize EQU    20H                  ; (32)
0226: 0100             DirBuffSize EQU    cpmRecordSize
0227: 0100
0228: 0100             DirectoryEntryPerRecord EQU    cpmRecordSize / DirEntrySize
0229: 0100
0230: 0100             RecordsPerExtent EQU    080H                 ; extent Record capacity
0231: 0100
0232: 0100
0233: 0100         ;-------------------------------------------------------------------------------------
0234: 0100             NumberOfLogicalDisks EQU    4                    ; max number of disk in this system
0235: 0100
0236: 0100         ;----------------------3.5 Double Density Disk Geometry----------------------------------------
0237: 0100             NumberOfHeads EQU    02H                  ; number of heads
0238: 0100             TracksPerHead EQU    50H                  ; 80
0239: 0100             SectorsPerTrack EQU    12H                  ; 18 -  1 head only
0240: 0100             SectorsPerBlock EQU    04H                  ; 2048 bytes
0241: 0100             DirectoryBlockCount EQU    02H                  ;
0242: 0100         ;-----------------------------------------------------------------------
0243: 0100
0244: 0100             BlockSize  EQU    SectorsPerBlock * 	diskSectorSize ; Size in Bytes
0245: 0100
0246: 0100             RecordsPerBlock EQU    recordsPerSector * SectorsPerBlock
0247: 0100
0248: 0100             TotalNumberOfSectors EQU    SectorsPerTrack * TracksPerHead * NumberOfHeads
0249: 0100             TotalNumberOfBlocks EQU    TotalNumberOfSectors / SectorsPerBlock
0250: 0100             SectorsPerCylinder EQU    SectorsPerTrack * NumberOfHeads
0251: 0100
0252: 0100             SystemSectors EQU    LengthInBytes / diskSectorSize + 1 ; need to account for boot sector
0253: 0100             myOffset   EQU    (SystemSectors / SectorsPerCylinder) + 1 ;
0254: 0100             DataSectors EQU    TotalNumberOfSectors - (SectorsPerCylinder * myOffset)
0255: 0100             DataBlocks EQU    DataSectors / 	SectorsPerBlock
0256: 0100
0257: 0100         ;-----------------------------------------------------------------------
0258: 0100         ;; Disk block parameters for F3HD - 3.5 HD   1.44 MB Diskette
0259: 0100         ;-----------------------------------------------------------------------
0260: 0100         ;dpb3hdSPT				EQU		0090H			; cpmRecords per track- (144)
0261: 0100             dpb3hdSPT  EQU    recordsPerSector * SectorsPerTrack * NumberOfHeads ; SPT - records per Clynder
0262: 0100             dpb3hdBSH  EQU    04H                  ; Block Shift Factor - BlockSize = 128 * (2**BSH)											; BSH = Log2(BlockSize/cpmRecordSize)
0263: 0100             dpb3hdBLM  EQU    0FH                  ; BlockMask = (2**BSH) -1
0264: 0100             dpb3hdEXM  EQU    00H                  ; Extent mask = (PhysicalExtents/LogicalExtents) - 1
0265: 0100             dpb3hdDSM  EQU    DataBlocks -1        ; Maximum allocation block number (710)
0266: 0100             dpb3hdDRM  EQU    ((BlockSize *  DirectoryBlockCount)	/	DirEntrySize) -1 ; DRM Number of directory entries - 1 (127)
0267: 0100             dpb3hdAL0  EQU    0C0H                 ; Bit map for reserving 1 alloc. block
0268: 0100             dpb3hdAL1  EQU    00H                  ;  for each file directory
0269: 0100             dpb3hdCKS  EQU    (dpb3hdDRM +1)/ DirectoryEntryPerRecord ; Disk change work area size (32)
0270: 0100             dpb3hdOFF  EQU    myOffset             ; Number of tracks before directory
0271: 0100             dpb3hdNOH  EQU    NumberOfHeads
0272: 0100
0273: 0100         ;*******************************************************************************
0274: 0100
0275: 0100             SectorMask EQU    SectorsPerBlock - 1
0276: 0100
0277: 0100         ;***************************************************************************
0278: 0100
0279: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0280: 0100
0281: 0100             BOOT_CON_ADDRESS EQU    0ECH                 ; tty data address
0282: 0100             IOBYTE_DEFAULT EQU    080H                 ; LST:=LPT, rest all = TTY:
0283: 0100
0284: 0100
0285: 0100             WarmBootEntry EQU    BIOSStart + 3
0286: 0100
0287: 0100                        ORG    TPA
0288: 0100             Start:
0289: 0100 31 FF 00               LD     SP,Start-1           ; stack goes down from here
0290: 0103 CD B3 01               CALL   SendBootMessage      ; display boot message
0291: 0106 06 3B                  LD     B,Page0ImageEnd-Page0Image ; Size of code to move
0292: 0108 21 3B 01               LD     HL,Page0Image        ; Source of page 0 code
0293: 010B 11 00 00               LD     DE,0000              ; Location 0, the target
0294: 010E
0295: 010E         ; Set up page zero,Move (B) bytes from (HL) to (DE).
0296: 010E
0297: 010E             HL2DE:
0298: 010E 7E                     LD     A,(HL)
0299: 010F 12                     LD     (DE),A
0300: 0110 23                     INC    HL
0301: 0111 13                     INC    DE
0302: 0112 05                     DEC    B
0303: 0113 C2 0E 01               JP     NZ,HL2DE
0304: 0116
0305: 0116         ; Now  start to move data to Disk Control Block
0306: 0116
0307: 0116 21 2E 01               LD     HL,BootControl
0308: 0119 22 46 00               LD     (DiskCommandBlock),HL ; put it into the Command block for drive A:
0309: 011C
0310: 011C
0311: 011C 21 45 00               LD     HL,DiskControlByte
0312: 011F 36 80                  LD     (HL),080H            ; activate the controller
0313: 0121
0314: 0121             WaitForBootComplete:
0315: 0121 7E                     LD     A,(HL)               ; Get the control byte
0316: 0122 B7                     OR     A                    ; is it set to 0 (Completed operation) ?
0317: 0123 20 FC                  JR     NZ,WaitForBootComplete ; if not try again
0318: 0125
0319: 0125 3A 43 00               LD     A,(DiskStatusLocation) ; after operation what's the status?
0320: 0128 FE 80                  CP     080H                 ; any errors ?
0321: 012A
0322: 012A D2 00 00               JP     NC,0000              ; now do a warm boot
0323: 012D         ; else we have a problem
0324: 012D 76                     HALT
0325: 012E         ;---------------------------------------------------
0326: 012E
0327: 012E             BootControl:
0328: 012E 01                     DB     DiskReadCode         ; Read function
0329: 012F 00                     DB     00H                  ; unit number
0330: 0130 00                     DB     00H                  ; head number
0331: 0131 00                     DB     00H                  ; track number
0332: 0132 0D                     DB     0DH                  ; Starting sector number (13)
0333: 0133 00 0A                  DW     5 * 512              ; Number of bytes to read ( 0A00 All of BIOS)
0334: 0135 00 F6                  DW     BIOSStart            ; read into this address
0335: 0137 43 00                  DW     DiskStatusLocation   ; pointer to next block - no linking
0336: 0139 40 00                  DW     DiskControlTable     ; pointer to next table- no linking
0337: 013B
0338: 013B         ;---------------------------------------------------
0339: 013B
0340: 013B             Page0Image:
0341: 013B C3 03 F6               JP     WarmBootEntry        ; warm start
0342: 013E         ;IOBYTE:
0343: 013E 80                     DB     IOBYTE_DEFAULT       ; IOBYTE-
0344: 013F             DefaultDisk:
0345: 013F 00                     DB     00H                  ; Current default drive (A)
0346: 0140 C3 06 E8               JP     BDOSEntry            ; jump to BDOS entry
0347: 0143                        DS     028H                 ; interrupt locations 1-5 not used
0348: 016B                        DS     008H                 ; interrupt location 6 is reserved
0349: 0173 C3 00 00               JP     0000H                ; rst 7 used only by DDT & SID programs
0350: 0176             Page0ImageEnd:
0351: 0176
0352: 0176         ;---------------------------------------------------
0353: 0176
0354: 0176
0355: 0176             BootMessage:
0356: 0176 0D 0A                  DB     CR,LF
0357: 0178 43 50 2F 4D 20 32 2E 32 20 42 6F 6F 74 53 74 72 61 70                DB     'CP/M 2.2 BootStrap'
0358: 018A 20 6C 6F 61 64 65 72                DB     ' loader'
0359: 0191 0D 0A                  DB     CR,LF,
0360: 0193 42 75 69 6C 64 20                DB     'Build '
0361: 0199 31 2E 31 30 20 20 3A 20 31 2E 30 20 2D 20 31 2E 31 20 2D 20 31 2E 32                DB     '1.10  : 1.0 - 1.1 - 1.2'
0362: 01B0 0D 0A 00                DB     CR,LF,EndOfMessage
0363: 01B3
0364: 01B3             SendBootMessage:
0365: 01B3 21 76 01               LD     HL,BootMessage
0366: 01B6             SendMessage1:
0367: 01B6 7E                     LD     A,(HL)
0368: 01B7 B7                     OR     A
0369: 01B8 C8                     RET    Z
0370: 01B9 D3 EC                  OUT    (BOOT_CON_ADDRESS),A ; Console address
0371: 01BB 23                     INC    HL
0372: 01BC C3 B6 01               JP     SendMessage1
0373: 01BF
0374: 01BF
0375: 01BF         ;---------------------------------------------------
0376: 01BF
           ************************   Xref   ************************
0000: $               01BC
0078: ASCII_A         0041
0079: ASCII_C         0043
0080: ASCII_K         004B
0087: ASCII_LO_A      0061
0088: ASCII_LO_K      006B
0089: ASCII_LO_P      0070
0030: ASCII_MASK      007F
0081: ASCII_N         004E
0082: ASCII_Q         0051
0083: ASCII_R         0052
0084: ASCII_W         0057
0085: ASCII_Y         0059
0065: ASCII_ZERO      0030
0059: ASTERISK        002A
0144: BDOSBase        E800   0145 0147
0113: BDOSE           0005   0114
0145: BDOSEntry       E806   0346
0134: BDOSLength      0E00   0137 0147 0148
0048: BELL            0007
0147: BIOSBase        F600
0135: BIOSLength      0A00   0137
0107: BIOSPAGE        0002
0148: BIOSStart       F600   0285 0334
0244: BlockSize       0800   0266
0281: BOOT_CON_ADDRESS 00EC   0370
0327: BootControl     012E   0307
0355: BootMessage     0176   0365
0026: BYTE            0001
0086: CARET           005E
0142: CCPEntry        E000   0144 0148
0133: CCPLength       0800   0137 0144 0148
0066: COLON           003A
0061: COMMA           002C
0119: ComTail         0080   0120
0121: ComTailChars    0082
0120: ComTailCount    0081   0121
0221: cpmRecordSize   0080   0223 0226 0228
0051: CR              000D   0356 0359 0362
0034: CTRL_C          0003
0035: CTRL_E          0005
0036: CTRL_H          0008
0037: CTRL_K          000B
0038: CTRL_L          000C
0039: CTRL_P          0010
0040: CTRL_R          0012
0041: CTRL_S          0013
0042: CTRL_U          0015
0043: CTRL_X          0018
0044: CTRL_Z          001A
0062: DASH            002D
0255: DataBlocks      02C7   0265
0254: DataSectors     0B1C   0255
0344: DefaultDisk     013F
0226: DirBuffSize     0080
0241: DirectoryBlockCount 0002   0266
0228: DirectoryEntryPerRecord 0004   0269
0225: DirEntrySize    0020   0228 0266
0213: DiskCommandBlock 0046   0308
0212: DiskControlByte 0045   0311
0215: DiskControlTable 0040   0336
0217: DiskReadCode    0001   0328
0222: diskSectorSize  0200   0223 0244 0252
0211: DiskStatusLocation 0043   0319 0335
0218: DiskWriteCode   0002
0124: DMABuffer       0080
0055: DOLLAR          0024
0267: dpb3hdAL0       00C0
0268: dpb3hdAL1       0000
0263: dpb3hdBLM       000F
0262: dpb3hdBSH       0004
0269: dpb3hdCKS       0020
0266: dpb3hdDRM       007F   0269
0265: dpb3hdDSM       02C6
0264: dpb3hdEXM       0000
0271: dpb3hdNOH       0002
0270: dpb3hdOFF       0001
0261: dpb3hdSPT       0090
0128: END_OF_FILE     001A
0032: EndOfMessage    0000   0362
0070: EQUAL_SIGN      003D
0053: EXCLAIM_POINT   0021
0021: FALSE           0000
0116: FCB1            005C   0117
0117: FCB2            006C
0161: fCloseFile      0010
0152: fConsoleIn      0001
0153: fConsoleOut     0002
0164: fDeleteFile     0013
0156: fGetConsoleStatus 000B
0170: fGetCurrentDisk 0019
0169: fGetLoginVector 0018
0172: fGetSetUserNumber 0020
0157: fGetVersion     000C
0167: fMakeFile       0016
0160: fOpenFile       000F
0154: fPrintString    0009
0165: fReadSeq        0014
0155: fReadString     000A
0168: fRenameFile     0017
0158: fResetSystem    000D
0162: fSearchFirst    0011
0163: fSearchNext     0012
0159: fSelectDisk     000E
0171: fSetDMA         001A
0166: fWriteSeq       0015
0071: GREATER_THAN    003E
0054: HASH_TAG        0023
0297: HL2DE           010E   0303
0108: IOBYTE          0003
0282: IOBYTE_DEFAULT  0080   0343
0057: L_PAREN         0028
0074: LEFT_ARROW      005F
0090: LEFT_CURLY      007B
0137: LengthInBytes   2000   0138 0142 0252
0138: LengthInK       0009
0069: LESS_THAN       003C
0050: LF              000A   0356 0359 0362
0024: LO_NIBBLE_MASK  000F
0140: MemorySize      0040   0142
0253: myOffset        0001   0254 0270
0046: NULL            0000
0237: NumberOfHeads   0002   0248 0250 0261 0271
0234: NumberOfLogicalDisks 0004
0023: OFF             0000
0022: ON              FFFF
0340: Page0Image      013B   0291 0292
0350: Page0ImageEnd   0176   0291
0056: PERCENT         0025
0063: PERIOD          002E
0111: Pg0CurentDisk   0004
0110: Pg0CurentUser   0004   0111
0060: PLUS_SIGN       002B
0072: QMARK           003F
0058: R_PAREN         0029
0104: RAM             0000   0106 0107 0108 0110 0113 0116 0119 0124 0126
0246: RecordsPerBlock 0010
0230: RecordsPerExtent 0080
0223: recordsPerSector 0004   0246 0261
0075: RUBOUT          007F
0275: SectorMask      0003
0240: SectorsPerBlock 0004   0244 0246 0249 0255 0275
0250: SectorsPerCylinder 0024   0253 0254
0239: SectorsPerTrack 0012   0248 0250 0261
0068: SEMICOLON       003B
0364: SendBootMessage 01B3   0290
0366: SendMessage1    01B6   0372
0064: SLASH           002F
0047: SOH             0001
0052: SPACE           0020
0288: Start           0100   0289
0252: SystemSectors   0011   0253
0049: TAB             0009
0114: TopRAM          0007
0249: TotalNumberOfBlocks 02D0
0248: TotalNumberOfSectors 0B40   0249 0254
0126: TPA             0100   0287
0238: TracksPerHead   0050   0248
0020: TRUE            FFFF
0073: UNDER_SCORE     005F
0314: WaitForBootComplete 0121   0317
0106: WarmBoot        0000
0285: WarmBootEntry   F603   0341
0027: WORD            0002
0186: WriteAllocated  0000
0187: WriteDirectory  0001
0188: WriteUnallocated 0002
0031: ZERO            0000
