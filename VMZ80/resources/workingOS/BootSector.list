0001: 0100         ;     File created by MakeZ80Source on Tue Sep 18 10:01:22 EDT 2018 from:
0002: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\BootSector.asm
0003: 0100         ; BootSector.Z80
0004: 0100         ; Build 2.01
0005: 0100
0006: 0100         ; 2018-02-19 BDOS 1.0 designation
0007: 0100         ; 2018-11-22 begin  Z80 idiom update
0008: 0100         ; 2017-04-07 Added equates for message IO : BOOT_CON_ADDRESS
0009: 0100         ;				 , and default IOBYTE : IOBYTE_DEFAULT
0010: 0100         ; 2017-03-02 Refactored the CP/M Suite
0011: 0100
0012: 0100                        Include ./stdHeader.Z80
0013: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0014: 0100         ;     File created by MakeZ80Source on Mon Sep 17 16:25:01 EDT 2018 from:
0015: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\stdHeader.asm
0016: 0100         ; stdHeader.asm
0017: 0100         ; standard equates
0018: 0100
0019: 0100         ; 2017-03-02 Refactored the CP/M Suite
0020: 0100
0021: 0100
0022: 0100             TRUE       EQU    -1                   ; not false
0023: 0100             FALSE      EQU    0000H
0024: 0100             ON         EQU    -1
0025: 0100             OFF        EQU    0000H
0026: 0100             LO_NIBBLE_MASK EQU    0FH                  ; mask used to obtain the bytes low four bits
0027: 0100
0028: 0100             BYTE       EQU    1                    ; number of bytes for "byte" type
0029: 0100             WORD       EQU    2                    ; number of bytes for "word" type
0030: 0100
0031: 0100
0032: 0100             ASCII_MASK EQU    7FH                  ; Ascii mask 7 bits
0033: 0100             ZERO       EQU    00H                  ; Zero
0034: 0100             EndOfMessage EQU    00H
0035: 0100
0036: 0100             CTRL_C     EQU    03H                  ; ETX
0037: 0100             CTRL_E     EQU    05H                  ; physical eol
0038: 0100             CTRL_H     EQU    08H                  ; backspace
0039: 0100             CTRL_K     EQU    0BH                  ; VT - Vertical tab
0040: 0100             CTRL_L     EQU    0CH                  ; FF - Form feed
0041: 0100             CTRL_P     EQU    10H                  ; prnt toggle
0042: 0100             CTRL_R     EQU    12H                  ; repeat line
0043: 0100             CTRL_S     EQU    13H                  ; X-OFF stop/start screen
0044: 0100             CTRL_U     EQU    15H                  ; line delete
0045: 0100             CTRL_X     EQU    18H                  ; =ctl-u
0046: 0100             CTRL_Z     EQU    1AH                  ; end of file
0047: 0100
0048: 0100             NULL       EQU    00H                  ; Null
0049: 0100             SOH        EQU    01H                  ; Start of Heading
0050: 0100             BELL       EQU    07H                  ; Bell
0051: 0100             TAB        EQU    09H                  ; Tab
0052: 0100             LF         EQU    0AH                  ; Line Feed
0053: 0100             CR         EQU    0DH                  ; Carriage Return
0054: 0100             SPACE      EQU    20H                  ; Space
0055: 0100             EXCLAIM_POINT EQU    21H                  ; Exclamtion Point
0056: 0100             HASH_TAG   EQU    23H                  ; Sharp sign #
0057: 0100             DOLLAR     EQU    24H                  ; Dollar Sign
0058: 0100             PERCENT    EQU    25H                  ; Percent Sign
0059: 0100             L_PAREN    EQU    28H                  ; Left Paenthesis (
0060: 0100             R_PAREN    EQU    29H                  ; Right Paenthesis )
0061: 0100             ASTERISK   EQU    2AH                  ; Asterisk *
0062: 0100             PLUS_SIGN  EQU    2BH                  ; Plus sign +
0063: 0100             COMMA      EQU    2CH                  ; Comma
0064: 0100             DASH       EQU    2DH                  ; Dash Hyphen -
0065: 0100             PERIOD     EQU    2EH                  ; Period
0066: 0100             SLASH      EQU    2FH                  ; /
0067: 0100             ASCII_ZERO EQU    30H                  ; zero
0068: 0100             COLON      EQU    3AH                  ; Colon
0069: 0100
0070: 0100             SEMICOLON  EQU    3BH                  ; Semi Colon
0071: 0100             LESS_THAN  EQU    3CH                  ; Less Than <
0072: 0100             EQUAL_SIGN EQU    3DH                  ; Equal Sign
0073: 0100             GREATER_THAN EQU    3EH                  ; Greater Than >
0074: 0100             QMARK      EQU    3FH                  ; Question Mark
0075: 0100             UNDER_SCORE EQU    5FH                  ; under score _
0076: 0100             LEFT_ARROW EQU    5FH                  ; Left Arrow ?
0077: 0100             RUBOUT     EQU    7FH                  ; Delete Key
0078: 0100
0079: 0100
0080: 0100             ASCII_A    EQU    'A'
0081: 0100             ASCII_C    EQU    'C'
0082: 0100             ASCII_K    EQU    'K'
0083: 0100             ASCII_N    EQU    'N'
0084: 0100             ASCII_Q    EQU    'Q'
0085: 0100             ASCII_R    EQU    'R'
0086: 0100             ASCII_W    EQU    'W'
0087: 0100             ASCII_Y    EQU    'Y'
0088: 0100             CARET      EQU    '^'
0089: 0100             ASCII_LO_A EQU    'a'
0090: 0100             ASCII_LO_K EQU    'k'
0091: 0100             ASCII_LO_P EQU    'p'
0092: 0100             LEFT_CURLY EQU    '{'                  ; Left curly Bracket
0093: 0100
0094: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0095: 0100                        Include ./osHeader.Z80
0096: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0097: 0100         ;     File created by MakeZ80Source on Mon Sep 17 16:25:47 EDT 2018 from:
0098: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\osHeader.asm
0099: 0100         ; osHeader.Z80
0100: 0100
0101: 0100         ; 2018-12-28 Changed BDOSEntry to remove dead space in BDOS
0102: 0100         ; 2017-03-02 Refactored the CP/M Suite
0103: 0100
0104: 0100         ; Contains the Equates used by the CP/M system
0105: 0100
0106: 0100         ;------------------------Page Zero Constants ---------------------------------
0107: 0100             RAM        EQU    0                    ; Start of RAM ( and the Base page)
0108: 0100
0109: 0100             WarmBoot   EQU    RAM + 0              ; Contains a JMP instruction to warm boot in BIOS
0110: 0100             BIOSPAGE   EQU    RAM + 2              ; BIOS Jump Vector Page
0111: 0100             IOBYTE     EQU    RAM + 3              ; Input/Output redirection byte
0112: 0100
0113: 0100             Pg0CurentUser EQU    RAM + 4              ; Current user ( bits 7-4)
0114: 0100             Pg0CurentDisk EQU    Pg0CurentUser        ; Default logical disk (bits 0-3)
0115: 0100
0116: 0100             BDOSE      EQU    RAM + 5              ; Contains a JMP to BDOS entry
0117: 0100             TopRAM     EQU    BDOSE+2              ; Top page of usable RAM
0118: 0100
0119: 0100             FCB1       EQU    RAM + 05CH           ; File Control Block #1
0120: 0100             FCB2       EQU    FCB1 + 16            ; File Control Block #2
0121: 0100
0122: 0100             ComTail    EQU    RAM + 080H           ; Complete command tail
0123: 0100             ComTailCount EQU    ComTail + 1          ; Count of the number of char in tail
0124: 0100             ComTailChars EQU    ComTailCount + 1     ; Complete Command tail up-cased, w/o trailing CR
0125: 0100         ;-----------------------------------------------------------------------
0126: 0100
0127: 0100             DMABuffer  EQU    RAM + 080H           ; Default "DMA" address used as buffer
0128: 0100         ;-----------------------------------------------------------------------
0129: 0100             TPA        EQU    RAM + 0100H          ; Start of Transient program Area
0130: 0100         ;-----------------------------------------------------------------------
0131: 0100             END_OF_FILE EQU    1AH                  ; end of file
0132: 0100         ;-----------------------------------------------------------------------
0133: 0100
0134: 0100         ;--------------- CP/M Constants -----------------------------------------
0135: 0100
0136: 0100             CCPLength  EQU    0800H                ; Constant
0137: 0100             BDOSLength EQU    0E00H                ; Constant 0E00H
0138: 0100             BIOSLength EQU    0A00H                ; Constant 0900H
0139: 0100
0140: 0100             LengthInBytes EQU    CCPLength + BDOSLength + BIOSLength
0141: 0100             LengthInK  EQU    (LengthInBytes/1024) + 1
0142: 0100
0143: 0100             MemorySize EQU    64
0144: 0100
0145: 0100             CCPEntry   EQU    (MemorySize * 1024) - LengthInBytes
0146: 0100
0147: 0100             BDOSBase   EQU    CCPEntry + CCPLength
0148: 0100             BDOSEntry  EQU    BDOSBase
0149: 0100
0150: 0100             BIOSBase   EQU    BDOSBase + BDOSLength
0151: 0100             BIOSStart  EQU    CCPEntry + CCPLength + BDOSLength
0152: 0100         ;-----------------------------------------------------------------------
0153: 0100
0154: 0100         ;------------------- BDOS System Call Equates --------------------------
0155: 0100             fConsoleIn EQU    01H                  ; rcharf - Console Input
0156: 0100             fConsoleOut EQU    02H                  ; pcharf - Console Output
0157: 0100             fPrintString EQU    09H                  ; pbuff	- Print String
0158: 0100             fReadString EQU    0AH                  ; rbuff	- Read Console String
0159: 0100             fGetConsoleStatus EQU    0BH                  ; breakf - Get Console Status
0160: 0100             fGetVersion EQU    0CH                  ; liftf	- Return Version Number
0161: 0100             fResetSystem EQU    0DH                  ; initf	- Reset Disk System
0162: 0100             fSelectDisk EQU    0EH                  ; self	- Select Disk
0163: 0100             fOpenFile  EQU    0FH                  ; openf	- Open File
0164: 0100             fCloseFile EQU    10H                  ; closef - Close File
0165: 0100             fSearchFirst EQU    11H                  ; searf	- Search For First
0166: 0100             fSearchNext EQU    12H                  ; searnf - Search for Next
0167: 0100             fDeleteFile EQU    13H                  ; delf - Delete File
0168: 0100             fReadSeq   EQU    14H                  ; dreadf - Read Sequential
0169: 0100             fWriteSeq  EQU    15H                  ; dwritf - Write Sequential
0170: 0100             fMakeFile  EQU    16H                  ; makef	- Make File
0171: 0100             fRenameFile EQU    17H                  ; renf	- Rename File
0172: 0100             fGetLoginVector EQU    18H                  ; logf	- Return Login Vector
0173: 0100             fGetCurrentDisk EQU    19H                  ; cself	- Return Current Disk
0174: 0100             fSetDMA    EQU    1AH                  ; dmaf	- Set DMA address
0175: 0100             fGetSetUserNumber EQU    20H                  ; userf	- Set/Get User Code
0176: 0100         ;-----------------------------------------------------------------------
0177: 0100
0178: 0100
0179: 0100
0180: 0100
0181: 0100
0182: 0100         ;*******************************************************************************
0183: 0100         ; These are the values handed over by the BDOS when it calls the Writer operation
0184: 0100         ; The allocated.unallocated indicates whether the BDOS is set to write to an
0185: 0100         ; unallocated allocation block (it only indicates this for the first 128 byte
0186: 0100         ; sector write) or to an allocation block that has already been allocated to a
0187: 0100         ; file. The BDOS also indicates if it is set to write to the file directory
0188: 0100         ;*******************************************************************************
0189: 0100             WriteAllocated EQU    00H
0190: 0100             WriteDirectory EQU    01H
0191: 0100             WriteCleanBuffer EQU    02H
0192: 0100
0193: 0100
0194: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0195: 0100                        Include ./diskHeader.Z80
0196: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0197: 0100         ;     File created by MakeZ80Source on Mon Sep 17 16:26:22 EDT 2018 from:
0198: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\diskHeader.asm
0199: 0100         ; diskHeader.asm
0200: 0100
0201: 0100         ; 2017-03-02 Refactored the CP/M Suite
0202: 0100
0203: 0100         ; needs osHeader.asm declared before this is used !!!!!!!
0204: 0100
0205: 0100         ; Contains the Equates used by the CP/M system to handle disks
0206: 0100
0207: 0100
0208: 0100         ;*******************************************************************************
0209: 0100         ;
0210: 0100         ;     Disk related values
0211: 0100         ;
0212: 0100         ;
0213: 0100         ;*******************************************************************************
0214: 0100             DiskStatusLocation EQU    043H                 ; status after disk I/O placed here
0215: 0100             DiskControlByte EQU    045H                 ; control byte for disk I/O
0216: 0100             DiskCommandBlock EQU    046H                 ; Control Table Pointer
0217: 0100         ; for boot
0218: 0100             DiskControlTable EQU    0040H
0219: 0100
0220: 0100             DiskReadCode EQU    01H                  ; Code for Read
0221: 0100             DiskWriteCode EQU    02H                  ; Code for Write
0222: 0100
0223: 0100
0224: 0100             cpmRecordSize EQU    080H                 ; (128) record size that CP/M uses
0225: 0100             diskSectorSize EQU    200H                 ; (512) size of physical disk I/O
0226: 0100             recordsPerSector EQU    diskSectorSize/cpmRecordSize
0227: 0100
0228: 0100             DirEntrySize EQU    20H                  ; (32)
0229: 0100             DirBuffSize EQU    cpmRecordSize
0230: 0100
0231: 0100             DirectoryEntryPerRecord EQU    cpmRecordSize / DirEntrySize
0232: 0100
0233: 0100             RecordsPerExtent EQU    080H                 ; extent Record capacity
0234: 0100
0235: 0100
0236: 0100         ;-------------------------------------------------------------------------------------
0237: 0100             NumberOfLogicalDisks EQU    4                    ; max number of disk in this system
0238: 0100
0239: 0100         ;----------------------3.5 Double Density Disk Geometry----------------------------------------
0240: 0100             NumberOfHeads EQU    02H                  ; number of heads
0241: 0100             TracksPerHead EQU    50H                  ; 80
0242: 0100             SectorsPerTrack EQU    12H                  ; 18 -  1 head only
0243: 0100             SectorsPerBlock EQU    04H                  ; 2048 bytes
0244: 0100             DirectoryBlockCount EQU    02H                  ;
0245: 0100         ;-----------------------------------------------------------------------
0246: 0100
0247: 0100             BlockSize  EQU    SectorsPerBlock * 	diskSectorSize ; Size in Bytes
0248: 0100
0249: 0100             RecordsPerBlock EQU    recordsPerSector * SectorsPerBlock
0250: 0100
0251: 0100             TotalNumberOfSectors EQU    SectorsPerTrack * TracksPerHead * NumberOfHeads
0252: 0100             TotalNumberOfBlocks EQU    TotalNumberOfSectors / SectorsPerBlock
0253: 0100             SectorsPerCylinder EQU    SectorsPerTrack * NumberOfHeads
0254: 0100
0255: 0100             SystemSectors EQU    LengthInBytes / diskSectorSize + 1 ; need to account for boot sector
0256: 0100             myOffset   EQU    (SystemSectors / SectorsPerCylinder) + 1 ;
0257: 0100             DataSectors EQU    TotalNumberOfSectors - (SectorsPerCylinder * myOffset)
0258: 0100             DataBlocks EQU    DataSectors / 	SectorsPerBlock
0259: 0100
0260: 0100         ;-----------------------------------------------------------------------
0261: 0100         ;; Disk block parameters for F3HD - 3.5 HD   1.44 MB Diskette
0262: 0100         ;-----------------------------------------------------------------------
0263: 0100         ;dpb3hdSPT				EQU		0090H			; cpmRecords per track- (144)
0264: 0100             dpb3hdSPT  EQU    recordsPerSector * SectorsPerTrack * NumberOfHeads ; SPT - records per Clynder
0265: 0100             dpb3hdBSH  EQU    04H                  ; Block Shift Factor - BlockSize = 128 * (2**BSH)											; BSH = Log2(BlockSize/cpmRecordSize)
0266: 0100             dpb3hdBLM  EQU    0FH                  ; BlockMask = (2**BSH) -1
0267: 0100             dpb3hdEXM  EQU    00H                  ; Extent mask = (PhysicalExtents/LogicalExtents) - 1
0268: 0100             dpb3hdDSM  EQU    DataBlocks -1        ; Maximum allocation block number (710)
0269: 0100             dpb3hdDRM  EQU    ((BlockSize *  DirectoryBlockCount)	/	DirEntrySize) -1 ; DRM Number of directory entries - 1 (127)
0270: 0100             dpb3hdAL0  EQU    0C0H                 ; Bit map for reserving 1 alloc. block
0271: 0100             dpb3hdAL1  EQU    00H                  ;  for each file directory
0272: 0100             dpb3hdCKS  EQU    (dpb3hdDRM +1)/ DirectoryEntryPerRecord ; Disk change work area size (32)
0273: 0100             dpb3hdOFF  EQU    myOffset             ; Number of tracks before directory
0274: 0100             dpb3hdNOH  EQU    NumberOfHeads
0275: 0100
0276: 0100         ;*******************************************************************************
0277: 0100
0278: 0100             SectorMask EQU    SectorsPerBlock - 1
0279: 0100
0280: 0100         ;***************************************************************************
0281: 0100
0282: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0283: 0100
0284: 0100             BOOT_CON_ADDRESS EQU    0ECH                 ; tty data address
0285: 0100             IOBYTE_DEFAULT EQU    080H                 ; LST:=LPT, rest all = TTY:
0286: 0100
0287: 0100
0288: 0100             WarmBootEntry EQU    BIOSStart + 3
0289: 0100
0290: 0100                        ORG    TPA
0291: 0100             Start:
0292: 0100 31 FF 00               LD     SP,Start-1           ; Stack goes down from here
0293: 0103 CD F7 01               CALL   SendBootMessage      ; Display boot message
0294: 0106 01 3B 00               LD     BC,Page0ImageEnd-Page0Image ; Size of code to move
0295: 0109 21 3C 01               LD     HL,Page0Image        ; Source of page 0 code
0296: 010C 11 00 00               LD     DE,0000              ; Location 0, the target
0297: 010F
0298: 010F         ; Set up page zero,Move (B) bytes from (HL) to (DE).
0299: 010F ED B0                  LDIR
0300: 0111
0301: 0111         ; Now  start to move data to Disk Control Block
0302: 0111
0303: 0111 21 2F 01               LD     HL,BootControl
0304: 0114 22 46 00               LD     (DiskCommandBlock),HL ; Set up Command block for drive A:
0305: 0117
0306: 0117
0307: 0117 21 45 00               LD     HL,DiskControlByte
0308: 011A 36 80                  LD     (HL),080H            ; Activate the controller
0309: 011C
0310: 011C             WaitForBootComplete:
0311: 011C 7E                     LD     A,(HL)               ; Get the control byte
0312: 011D B7                     OR     A                    ; 0 = Completed operation
0313: 011E 20 FC                  JR     NZ,WaitForBootComplete ;  if not try again
0314: 0120
0315: 0120 3A 43 00               LD     A,(DiskStatusLocation) ; What's the status after operation
0316: 0123 FE 80                  CP     080H                 ; Any errors ?
0317: 0125
0318: 0125
0319: 0125 D2 00 00               JP     NC,0000              ; No, do a Warm Boot
0320: 0128         ;  else we have a problem
0321: 0128 21 CA 01               LD     HL,FailedBootMessage
0322: 012B CD FA 01               CALL   SendMessage
0323: 012E 76                     HALT
0324: 012F
0325: 012F
0326: 012F         ;---------------------------- ROM Disk Control Block ------------------------;
0327: 012F             BootControl:                      ;
0328: 012F 01                     DB     DiskReadCode         ; Read function                   	 ;
0329: 0130 00                     DB     00H                  ; unit number                     	 ;
0330: 0131 00                     DB     00H                  ; head number                     	 ;
0331: 0132 00                     DB     00H                  ; track number                    	 ;
0332: 0133 0D                     DB     0DH                  ; Starting sector number (13)     	 ;
0333: 0134 00 0A                  DW     5 * 512              ; Number of bytes to read         	 ;
0334: 0136         ;	( 0A00 All of BIOS)           	 ;
0335: 0136 00 F6                  DW     BIOSStart            ; read into this address          	 ;
0336: 0138 43 00                  DW     DiskStatusLocation   ; next block - no linking         	 ;
0337: 013A 40 00                  DW     DiskControlTable     ; next table- no linking          	 ;
0338: 013C         ;---------------------------- ROM Disk Control Block ------------------------;
0339: 013C
0340: 013C         ;------------------------------------ Page 0 --------------------------------;
0341: 013C             Page0Image:                      ;
0342: 013C C3 03 F6               JP     WarmBootEntry        ; warm start                         ;
0343: 013F         ;IOBYTE:                                                                     ;
0344: 013F 80                     DB     IOBYTE_DEFAULT       ; IOBYTE-                            ;
0345: 0140             DefaultDisk:                      ;
0346: 0140 00                     DB     00H                  ; Current default drive (A)          ;
0347: 0141 C3 00 E8               JP     BDOSEntry            ; jump to BDOS entry                 ;
0348: 0144                        DS     028H                 ; interrupt locations 1-5 not used   ;
0349: 016C                        DS     008H                 ; interrupt location 6 is reserved   ;
0350: 0174 C3 00 00               JP     0000H                ; RST 7 used only by DDT & SID       ;
0351: 0177             Page0ImageEnd:                      ;
0352: 0177         ;------------------------------------ Page 0 --------------------------------;
0353: 0177
0354: 0177         ;---------------------------------- Messages --------------------------------;
0355: 0177             BootMessage:                      ;
0356: 0177 0D 0A                  DB     CR,LF                ;
0357: 0179 42 6F 6F 74 53 74 72 61 70 20 6C 6F 61 64 65 72 20                DB     'BootStrap loader '  ;
0358: 018A 43 50 2F 4D 20 32 2E 32 20 28 5A 38 30 29 20                DB     'CP/M 2.2 (Z80) '    ;
0359: 0199 0D 0A                  DB     CR,LF                ;
0360: 019B 42 75 69 6C 64 20 30 2E 44 20                DB     'Build 0.D '         ;
0361: 01A5 0D 0A                  DB     CR,LF                ;
0362: 01A7 43 43 50 20 30 2E 41 20 7C 20 20 42 44 4F 53 20 31 2E 30 20 7C 20 42 49 4F 53 20 31 2E 30                DB     'CCP 0.A |  BDOS 1.0 | BIOS 1.0' ;
0363: 01C5 0D 0A 0D 0A 00                DB     CR,LF,CR,LF,EndOfMessage ;
0364: 01CA         ;
0365: 01CA             FailedBootMessage:                      ;
0366: 01CA 0D 0A                  DB     CR,LF                ;
0367: 01CC 42 6F 6F 74 20 55 6E 73 75 63 63 65 73 73 66 75 6C 20 2D 20 43 68 65 63 6B 20 66 6F 72 20 44 69 73 6B 20 69 6E 20 41 3A                DB     'Boot Unsuccessful - Check for Disk in A:' ;
0368: 01F4 0D 0A 00                DB     CR,LF,EndOfMessage   ;
0369: 01F7         ;
0370: 01F7             SendBootMessage:                      ;
0371: 01F7 21 77 01               LD     HL,BootMessage       ;
0372: 01FA         ;
0373: 01FA             SendMessage:                      ;
0374: 01FA 7E                     LD     A,(HL)               ;
0375: 01FB B7                     OR     A                    ;
0376: 01FC C8                     RET    Z                    ;
0377: 01FD D3 EC                  OUT    (BOOT_CON_ADDRESS),A ; Console address		             ;
0378: 01FF 23                     INC    HL                   ;
0379: 0200 C3 FA 01               JP     SendMessage          ;
0380: 0203         ;---------------------------------- Messages --------------------------------;
0381: 0203             Z_HighestLocation:
0382: 0203             Z_MemoryLeft EQU    0512H - Z_HighestLocation
           ************************   Xref   ************************
0000: $               0203
0080: ASCII_A         0041
0081: ASCII_C         0043
0082: ASCII_K         004B
0089: ASCII_LO_A      0061
0090: ASCII_LO_K      006B
0091: ASCII_LO_P      0070
0032: ASCII_MASK      007F
0083: ASCII_N         004E
0084: ASCII_Q         0051
0085: ASCII_R         0052
0086: ASCII_W         0057
0087: ASCII_Y         0059
0067: ASCII_ZERO      0030
0061: ASTERISK        002A
0147: BDOSBase        E800   0148 0150
0116: BDOSE           0005   0117
0148: BDOSEntry       E800   0347
0137: BDOSLength      0E00   0140 0150 0151
0050: BELL            0007
0150: BIOSBase        F600
0138: BIOSLength      0A00   0140
0110: BIOSPAGE        0002
0151: BIOSStart       F600   0288 0335
0247: BlockSize       0800   0269
0284: BOOT_CON_ADDRESS 00EC   0377
0327: BootControl     012F   0303
0355: BootMessage     0177   0371
0028: BYTE            0001
0088: CARET           005E
0145: CCPEntry        E000   0147 0151
0136: CCPLength       0800   0140 0147 0151
0068: COLON           003A
0063: COMMA           002C
0122: ComTail         0080   0123
0124: ComTailChars    0082
0123: ComTailCount    0081   0124
0224: cpmRecordSize   0080   0226 0229 0231
0053: CR              000D   0356 0359 0361 0363 0366 0368
0036: CTRL_C          0003
0037: CTRL_E          0005
0038: CTRL_H          0008
0039: CTRL_K          000B
0040: CTRL_L          000C
0041: CTRL_P          0010
0042: CTRL_R          0012
0043: CTRL_S          0013
0044: CTRL_U          0015
0045: CTRL_X          0018
0046: CTRL_Z          001A
0064: DASH            002D
0258: DataBlocks      02C7   0268
0257: DataSectors     0B1C   0258
0345: DefaultDisk     0140
0229: DirBuffSize     0080
0244: DirectoryBlockCount 0002   0269
0231: DirectoryEntryPerRecord 0004   0272
0228: DirEntrySize    0020   0231 0269
0216: DiskCommandBlock 0046   0304
0215: DiskControlByte 0045   0307
0218: DiskControlTable 0040   0337
0220: DiskReadCode    0001   0328
0225: diskSectorSize  0200   0226 0247 0255
0214: DiskStatusLocation 0043   0315 0336
0221: DiskWriteCode   0002
0127: DMABuffer       0080
0057: DOLLAR          0024
0270: dpb3hdAL0       00C0
0271: dpb3hdAL1       0000
0266: dpb3hdBLM       000F
0265: dpb3hdBSH       0004
0272: dpb3hdCKS       0020
0269: dpb3hdDRM       007F   0272
0268: dpb3hdDSM       02C6
0267: dpb3hdEXM       0000
0274: dpb3hdNOH       0002
0273: dpb3hdOFF       0001
0264: dpb3hdSPT       0090
0131: END_OF_FILE     001A
0034: EndOfMessage    0000   0363 0368
0072: EQUAL_SIGN      003D
0055: EXCLAIM_POINT   0021
0365: FailedBootMessage 01CA   0321
0023: FALSE           0000
0119: FCB1            005C   0120
0120: FCB2            006C
0164: fCloseFile      0010
0155: fConsoleIn      0001
0156: fConsoleOut     0002
0167: fDeleteFile     0013
0159: fGetConsoleStatus 000B
0173: fGetCurrentDisk 0019
0172: fGetLoginVector 0018
0175: fGetSetUserNumber 0020
0160: fGetVersion     000C
0170: fMakeFile       0016
0163: fOpenFile       000F
0157: fPrintString    0009
0168: fReadSeq        0014
0158: fReadString     000A
0171: fRenameFile     0017
0161: fResetSystem    000D
0165: fSearchFirst    0011
0166: fSearchNext     0012
0162: fSelectDisk     000E
0174: fSetDMA         001A
0169: fWriteSeq       0015
0073: GREATER_THAN    003E
0056: HASH_TAG        0023
0111: IOBYTE          0003
0285: IOBYTE_DEFAULT  0080   0344
0059: L_PAREN         0028
0076: LEFT_ARROW      005F
0092: LEFT_CURLY      007B
0140: LengthInBytes   2000   0141 0145 0255
0141: LengthInK       0009
0071: LESS_THAN       003C
0052: LF              000A   0356 0359 0361 0363 0366 0368
0026: LO_NIBBLE_MASK  000F
0143: MemorySize      0040   0145
0256: myOffset        0001   0257 0273
0048: NULL            0000
0240: NumberOfHeads   0002   0251 0253 0264 0274
0237: NumberOfLogicalDisks 0004
0025: OFF             0000
0024: ON              FFFF
0341: Page0Image      013C   0294 0295
0351: Page0ImageEnd   0177   0294
0058: PERCENT         0025
0065: PERIOD          002E
0114: Pg0CurentDisk   0004
0113: Pg0CurentUser   0004   0114
0062: PLUS_SIGN       002B
0074: QMARK           003F
0060: R_PAREN         0029
0107: RAM             0000   0109 0110 0111 0113 0116 0119 0122 0127 0129
0249: RecordsPerBlock 0010
0233: RecordsPerExtent 0080
0226: recordsPerSector 0004   0249 0264
0077: RUBOUT          007F
0278: SectorMask      0003
0243: SectorsPerBlock 0004   0247 0249 0252 0258 0278
0253: SectorsPerCylinder 0024   0256 0257
0242: SectorsPerTrack 0012   0251 0253 0264
0070: SEMICOLON       003B
0370: SendBootMessage 01F7   0293
0373: SendMessage     01FA   0322 0379
0066: SLASH           002F
0049: SOH             0001
0054: SPACE           0020
0291: Start           0100   0292
0255: SystemSectors   0011   0256
0051: TAB             0009
0117: TopRAM          0007
0252: TotalNumberOfBlocks 02D0
0251: TotalNumberOfSectors 0B40   0252 0257
0129: TPA             0100   0290
0241: TracksPerHead   0050   0251
0022: TRUE            FFFF
0075: UNDER_SCORE     005F
0310: WaitForBootComplete 011C   0313
0109: WarmBoot        0000
0288: WarmBootEntry   F603   0342
0029: WORD            0002
0189: WriteAllocated  0000
0191: WriteCleanBuffer 0002
0190: WriteDirectory  0001
0381: Z_HighestLocation 0203   0382
0382: Z_MemoryLeft    030F
0033: ZERO            0000
