0001: 0100         ;     File created by MakeZ80Source on Tue Sep 18 10:01:22 EDT 2018 from:
0002: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\BootSector.asm
0003: 0100         ; BootSector.Z80
0004: 0100         ; Build 2.01
0005: 0100
0006: 0100         ; 2018-11-22 begin  Z80 idiom update
0007: 0100         ; 2017-04-07 Added equates for message IO : BOOT_CON_ADDRESS
0008: 0100         ;				 , and default IOBYTE : IOBYTE_DEFAULT
0009: 0100         ; 2017-03-02 Refactored the CP/M Suite
0010: 0100
0011: 0100                        Include ./stdHeader.Z80
0012: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0013: 0100         ;     File created by MakeZ80Source on Mon Sep 17 16:25:01 EDT 2018 from:
0014: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\stdHeader.asm
0015: 0100         ; stdHeader.asm
0016: 0100         ; standard equates
0017: 0100
0018: 0100         ; 2017-03-02 Refactored the CP/M Suite
0019: 0100
0020: 0100
0021: 0100             TRUE       EQU    -1                   ; not false
0022: 0100             FALSE      EQU    0000H
0023: 0100             ON         EQU    -1
0024: 0100             OFF        EQU    0000H
0025: 0100             LO_NIBBLE_MASK EQU    0FH                  ; mask used to obtain the bytes low four bits
0026: 0100
0027: 0100             BYTE       EQU    1                    ; number of bytes for "byte" type
0028: 0100             WORD       EQU    2                    ; number of bytes for "word" type
0029: 0100
0030: 0100
0031: 0100             ASCII_MASK EQU    7FH                  ; Ascii mask 7 bits
0032: 0100             ZERO       EQU    00H                  ; Zero
0033: 0100             EndOfMessage EQU    00H
0034: 0100
0035: 0100             CTRL_C     EQU    03H                  ; ETX
0036: 0100             CTRL_E     EQU    05H                  ; physical eol
0037: 0100             CTRL_H     EQU    08H                  ; backspace
0038: 0100             CTRL_K     EQU    0BH                  ; VT - Vertical tab
0039: 0100             CTRL_L     EQU    0CH                  ; FF - Form feed
0040: 0100             CTRL_P     EQU    10H                  ; prnt toggle
0041: 0100             CTRL_R     EQU    12H                  ; repeat line
0042: 0100             CTRL_S     EQU    13H                  ; X-OFF stop/start screen
0043: 0100             CTRL_U     EQU    15H                  ; line delete
0044: 0100             CTRL_X     EQU    18H                  ; =ctl-u
0045: 0100             CTRL_Z     EQU    1AH                  ; end of file
0046: 0100
0047: 0100             NULL       EQU    00H                  ; Null
0048: 0100             SOH        EQU    01H                  ; Start of Heading
0049: 0100             BELL       EQU    07H                  ; Bell
0050: 0100             TAB        EQU    09H                  ; Tab
0051: 0100             LF         EQU    0AH                  ; Line Feed
0052: 0100             CR         EQU    0DH                  ; Carriage Return
0053: 0100             SPACE      EQU    20H                  ; Space
0054: 0100             EXCLAIM_POINT EQU    21H                  ; Exclamtion Point
0055: 0100             HASH_TAG   EQU    23H                  ; Sharp sign #
0056: 0100             DOLLAR     EQU    24H                  ; Dollar Sign
0057: 0100             PERCENT    EQU    25H                  ; Percent Sign
0058: 0100             L_PAREN    EQU    28H                  ; Left Paenthesis (
0059: 0100             R_PAREN    EQU    29H                  ; Right Paenthesis )
0060: 0100             ASTERISK   EQU    2AH                  ; Asterisk *
0061: 0100             PLUS_SIGN  EQU    2BH                  ; Plus sign +
0062: 0100             COMMA      EQU    2CH                  ; Comma
0063: 0100             DASH       EQU    2DH                  ; Dash Hyphen -
0064: 0100             PERIOD     EQU    2EH                  ; Period
0065: 0100             SLASH      EQU    2FH                  ; /
0066: 0100             ASCII_ZERO EQU    30H                  ; zero
0067: 0100             COLON      EQU    3AH                  ; Colon
0068: 0100
0069: 0100             SEMICOLON  EQU    3BH                  ; Semi Colon
0070: 0100             LESS_THAN  EQU    3CH                  ; Less Than <
0071: 0100             EQUAL_SIGN EQU    3DH                  ; Equal Sign
0072: 0100             GREATER_THAN EQU    3EH                  ; Greater Than >
0073: 0100             QMARK      EQU    3FH                  ; Question Mark
0074: 0100             UNDER_SCORE EQU    5FH                  ; under score _
0075: 0100             LEFT_ARROW EQU    5FH                  ; Left Arrow ?
0076: 0100             RUBOUT     EQU    7FH                  ; Delete Key
0077: 0100
0078: 0100
0079: 0100             ASCII_A    EQU    'A'
0080: 0100             ASCII_C    EQU    'C'
0081: 0100             ASCII_K    EQU    'K'
0082: 0100             ASCII_N    EQU    'N'
0083: 0100             ASCII_Q    EQU    'Q'
0084: 0100             ASCII_R    EQU    'R'
0085: 0100             ASCII_W    EQU    'W'
0086: 0100             ASCII_Y    EQU    'Y'
0087: 0100             CARET      EQU    '^'
0088: 0100             ASCII_LO_A EQU    'a'
0089: 0100             ASCII_LO_K EQU    'k'
0090: 0100             ASCII_LO_P EQU    'p'
0091: 0100             LEFT_CURLY EQU    '{'                  ; Left curly Bracket
0092: 0100
0093: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0094: 0100                        Include ./osHeader.Z80
0095: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0096: 0100         ;     File created by MakeZ80Source on Mon Sep 17 16:25:47 EDT 2018 from:
0097: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\osHeader.asm
0098: 0100         ; osHeader.Z80
0099: 0100
0100: 0100         ; 2018-12-28 Changed BDOSEntry to remove dead space in BDOS
0101: 0100         ; 2017-03-02 Refactored the CP/M Suite
0102: 0100
0103: 0100         ; Contains the Equates used by the CP/M system
0104: 0100
0105: 0100         ;------------------------Page Zero Constants ---------------------------------
0106: 0100             RAM        EQU    0                    ; Start of RAM ( and the Base page)
0107: 0100
0108: 0100             WarmBoot   EQU    RAM + 0              ; Contains a JMP instruction to warm boot in BIOS
0109: 0100             BIOSPAGE   EQU    RAM + 2              ; BIOS Jump Vector Page
0110: 0100             IOBYTE     EQU    RAM + 3              ; Input/Output redirection byte
0111: 0100
0112: 0100             Pg0CurentUser EQU    RAM + 4              ; Current user ( bits 7-4)
0113: 0100             Pg0CurentDisk EQU    Pg0CurentUser        ; Default logical disk (bits 0-3)
0114: 0100
0115: 0100             BDOSE      EQU    RAM + 5              ; Contains a JMP to BDOS entry
0116: 0100             TopRAM     EQU    BDOSE+2              ; Top page of usable RAM
0117: 0100
0118: 0100             FCB1       EQU    RAM + 05CH           ; File Control Block #1
0119: 0100             FCB2       EQU    FCB1 + 16            ; File Control Block #2
0120: 0100
0121: 0100             ComTail    EQU    RAM + 080H           ; Complete command tail
0122: 0100             ComTailCount EQU    ComTail + 1          ; Count of the number of char in tail
0123: 0100             ComTailChars EQU    ComTailCount + 1     ; Complete Command tail up-cased, w/o trailing CR
0124: 0100         ;-----------------------------------------------------------------------
0125: 0100
0126: 0100             DMABuffer  EQU    RAM + 080H           ; Default "DMA" address used as buffer
0127: 0100         ;-----------------------------------------------------------------------
0128: 0100             TPA        EQU    RAM + 0100H          ; Start of Transient program Area
0129: 0100         ;-----------------------------------------------------------------------
0130: 0100             END_OF_FILE EQU    1AH                  ; end of file
0131: 0100         ;-----------------------------------------------------------------------
0132: 0100
0133: 0100         ;--------------- CP/M Constants -----------------------------------------
0134: 0100
0135: 0100             CCPLength  EQU    0800H                ; Constant
0136: 0100             BDOSLength EQU    0E00H                ; Constant 0E00H
0137: 0100             BIOSLength EQU    0A00H                ; Constant 0900H
0138: 0100
0139: 0100             LengthInBytes EQU    CCPLength + BDOSLength + BIOSLength
0140: 0100             LengthInK  EQU    (LengthInBytes/1024) + 1
0141: 0100
0142: 0100             MemorySize EQU    64
0143: 0100
0144: 0100             CCPEntry   EQU    (MemorySize * 1024) - LengthInBytes
0145: 0100
0146: 0100             BDOSBase   EQU    CCPEntry + CCPLength
0147: 0100             BDOSEntry  EQU    BDOSBase
0148: 0100
0149: 0100             BIOSBase   EQU    BDOSBase + BDOSLength
0150: 0100             BIOSStart  EQU    CCPEntry + CCPLength + BDOSLength
0151: 0100         ;-----------------------------------------------------------------------
0152: 0100
0153: 0100         ;------------------- BDOS System Call Equates --------------------------
0154: 0100             fConsoleIn EQU    01H                  ; rcharf - Console Input
0155: 0100             fConsoleOut EQU    02H                  ; pcharf - Console Output
0156: 0100             fPrintString EQU    09H                  ; pbuff	- Print String
0157: 0100             fReadString EQU    0AH                  ; rbuff	- Read Console String
0158: 0100             fGetConsoleStatus EQU    0BH                  ; breakf - Get Console Status
0159: 0100             fGetVersion EQU    0CH                  ; liftf	- Return Version Number
0160: 0100             fResetSystem EQU    0DH                  ; initf	- Reset Disk System
0161: 0100             fSelectDisk EQU    0EH                  ; self	- Select Disk
0162: 0100             fOpenFile  EQU    0FH                  ; openf	- Open File
0163: 0100             fCloseFile EQU    10H                  ; closef - Close File
0164: 0100             fSearchFirst EQU    11H                  ; searf	- Search For First
0165: 0100             fSearchNext EQU    12H                  ; searnf - Search for Next
0166: 0100             fDeleteFile EQU    13H                  ; delf - Delete File
0167: 0100             fReadSeq   EQU    14H                  ; dreadf - Read Sequential
0168: 0100             fWriteSeq  EQU    15H                  ; dwritf - Write Sequential
0169: 0100             fMakeFile  EQU    16H                  ; makef	- Make File
0170: 0100             fRenameFile EQU    17H                  ; renf	- Rename File
0171: 0100             fGetLoginVector EQU    18H                  ; logf	- Return Login Vector
0172: 0100             fGetCurrentDisk EQU    19H                  ; cself	- Return Current Disk
0173: 0100             fSetDMA    EQU    1AH                  ; dmaf	- Set DMA address
0174: 0100             fGetSetUserNumber EQU    20H                  ; userf	- Set/Get User Code
0175: 0100         ;-----------------------------------------------------------------------
0176: 0100
0177: 0100
0178: 0100
0179: 0100
0180: 0100
0181: 0100         ;*******************************************************************************
0182: 0100         ; These are the values handed over by the BDOS when it calls the Writer operation
0183: 0100         ; The allocated.unallocated indicates whether the BDOS is set to write to an
0184: 0100         ; unallocated allocation block (it only indicates this for the first 128 byte
0185: 0100         ; sector write) or to an allocation block that has already been allocated to a
0186: 0100         ; file. The BDOS also indicates if it is set to write to the file directory
0187: 0100         ;*******************************************************************************
0188: 0100             WriteAllocated EQU    00H
0189: 0100             WriteDirectory EQU    01H
0190: 0100             WriteCleanBuffer EQU    02H
0191: 0100
0192: 0100
0193: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0194: 0100                        Include ./diskHeader.Z80
0195: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0196: 0100         ;     File created by MakeZ80Source on Mon Sep 17 16:26:22 EDT 2018 from:
0197: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\diskHeader.asm
0198: 0100         ; diskHeader.asm
0199: 0100
0200: 0100         ; 2017-03-02 Refactored the CP/M Suite
0201: 0100
0202: 0100         ; needs osHeader.asm declared before this is used !!!!!!!
0203: 0100
0204: 0100         ; Contains the Equates used by the CP/M system to handle disks
0205: 0100
0206: 0100
0207: 0100         ;*******************************************************************************
0208: 0100         ;
0209: 0100         ;     Disk related values
0210: 0100         ;
0211: 0100         ;
0212: 0100         ;*******************************************************************************
0213: 0100             DiskStatusLocation EQU    043H                 ; status after disk I/O placed here
0214: 0100             DiskControlByte EQU    045H                 ; control byte for disk I/O
0215: 0100             DiskCommandBlock EQU    046H                 ; Control Table Pointer
0216: 0100         ; for boot
0217: 0100             DiskControlTable EQU    0040H
0218: 0100
0219: 0100             DiskReadCode EQU    01H                  ; Code for Read
0220: 0100             DiskWriteCode EQU    02H                  ; Code for Write
0221: 0100
0222: 0100
0223: 0100             cpmRecordSize EQU    080H                 ; (128) record size that CP/M uses
0224: 0100             diskSectorSize EQU    200H                 ; (512) size of physical disk I/O
0225: 0100             recordsPerSector EQU    diskSectorSize/cpmRecordSize
0226: 0100
0227: 0100             DirEntrySize EQU    20H                  ; (32)
0228: 0100             DirBuffSize EQU    cpmRecordSize
0229: 0100
0230: 0100             DirectoryEntryPerRecord EQU    cpmRecordSize / DirEntrySize
0231: 0100
0232: 0100             RecordsPerExtent EQU    080H                 ; extent Record capacity
0233: 0100
0234: 0100
0235: 0100         ;-------------------------------------------------------------------------------------
0236: 0100             NumberOfLogicalDisks EQU    4                    ; max number of disk in this system
0237: 0100
0238: 0100         ;----------------------3.5 Double Density Disk Geometry----------------------------------------
0239: 0100             NumberOfHeads EQU    02H                  ; number of heads
0240: 0100             TracksPerHead EQU    50H                  ; 80
0241: 0100             SectorsPerTrack EQU    12H                  ; 18 -  1 head only
0242: 0100             SectorsPerBlock EQU    04H                  ; 2048 bytes
0243: 0100             DirectoryBlockCount EQU    02H                  ;
0244: 0100         ;-----------------------------------------------------------------------
0245: 0100
0246: 0100             BlockSize  EQU    SectorsPerBlock * 	diskSectorSize ; Size in Bytes
0247: 0100
0248: 0100             RecordsPerBlock EQU    recordsPerSector * SectorsPerBlock
0249: 0100
0250: 0100             TotalNumberOfSectors EQU    SectorsPerTrack * TracksPerHead * NumberOfHeads
0251: 0100             TotalNumberOfBlocks EQU    TotalNumberOfSectors / SectorsPerBlock
0252: 0100             SectorsPerCylinder EQU    SectorsPerTrack * NumberOfHeads
0253: 0100
0254: 0100             SystemSectors EQU    LengthInBytes / diskSectorSize + 1 ; need to account for boot sector
0255: 0100             myOffset   EQU    (SystemSectors / SectorsPerCylinder) + 1 ;
0256: 0100             DataSectors EQU    TotalNumberOfSectors - (SectorsPerCylinder * myOffset)
0257: 0100             DataBlocks EQU    DataSectors / 	SectorsPerBlock
0258: 0100
0259: 0100         ;-----------------------------------------------------------------------
0260: 0100         ;; Disk block parameters for F3HD - 3.5 HD   1.44 MB Diskette
0261: 0100         ;-----------------------------------------------------------------------
0262: 0100         ;dpb3hdSPT				EQU		0090H			; cpmRecords per track- (144)
0263: 0100             dpb3hdSPT  EQU    recordsPerSector * SectorsPerTrack * NumberOfHeads ; SPT - records per Clynder
0264: 0100             dpb3hdBSH  EQU    04H                  ; Block Shift Factor - BlockSize = 128 * (2**BSH)											; BSH = Log2(BlockSize/cpmRecordSize)
0265: 0100             dpb3hdBLM  EQU    0FH                  ; BlockMask = (2**BSH) -1
0266: 0100             dpb3hdEXM  EQU    00H                  ; Extent mask = (PhysicalExtents/LogicalExtents) - 1
0267: 0100             dpb3hdDSM  EQU    DataBlocks -1        ; Maximum allocation block number (710)
0268: 0100             dpb3hdDRM  EQU    ((BlockSize *  DirectoryBlockCount)	/	DirEntrySize) -1 ; DRM Number of directory entries - 1 (127)
0269: 0100             dpb3hdAL0  EQU    0C0H                 ; Bit map for reserving 1 alloc. block
0270: 0100             dpb3hdAL1  EQU    00H                  ;  for each file directory
0271: 0100             dpb3hdCKS  EQU    (dpb3hdDRM +1)/ DirectoryEntryPerRecord ; Disk change work area size (32)
0272: 0100             dpb3hdOFF  EQU    myOffset             ; Number of tracks before directory
0273: 0100             dpb3hdNOH  EQU    NumberOfHeads
0274: 0100
0275: 0100         ;*******************************************************************************
0276: 0100
0277: 0100             SectorMask EQU    SectorsPerBlock - 1
0278: 0100
0279: 0100         ;***************************************************************************
0280: 0100
0281: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0282: 0100
0283: 0100             BOOT_CON_ADDRESS EQU    0ECH                 ; tty data address
0284: 0100             IOBYTE_DEFAULT EQU    080H                 ; LST:=LPT, rest all = TTY:
0285: 0100
0286: 0100
0287: 0100             WarmBootEntry EQU    BIOSStart + 3
0288: 0100
0289: 0100                        ORG    TPA
0290: 0100             Start:
0291: 0100 31 FF 00               LD     SP,Start-1           ; Stack goes down from here
0292: 0103 CD F7 01               CALL   SendBootMessage      ; Display boot message
0293: 0106 01 3B 00               LD     BC,Page0ImageEnd-Page0Image ; Size of code to move
0294: 0109 21 3C 01               LD     HL,Page0Image        ; Source of page 0 code
0295: 010C 11 00 00               LD     DE,0000              ; Location 0, the target
0296: 010F
0297: 010F         ; Set up page zero,Move (B) bytes from (HL) to (DE).
0298: 010F ED B0                  LDIR
0299: 0111
0300: 0111         ; Now  start to move data to Disk Control Block
0301: 0111
0302: 0111 21 2F 01               LD     HL,BootControl
0303: 0114 22 46 00               LD     (DiskCommandBlock),HL ; Set up Command block for drive A:
0304: 0117
0305: 0117
0306: 0117 21 45 00               LD     HL,DiskControlByte
0307: 011A 36 80                  LD     (HL),080H            ; Activate the controller
0308: 011C
0309: 011C             WaitForBootComplete:
0310: 011C 7E                     LD     A,(HL)               ; Get the control byte
0311: 011D B7                     OR     A                    ; 0 = Completed operation
0312: 011E 20 FC                  JR     NZ,WaitForBootComplete ;  if not try again
0313: 0120
0314: 0120 3A 43 00               LD     A,(DiskStatusLocation) ; What's the status after operation
0315: 0123 FE 80                  CP     080H                 ; Any errors ?
0316: 0125
0317: 0125
0318: 0125 D2 00 00               JP     NC,0000              ; No, do a Warm Boot
0319: 0128         ;  else we have a problem
0320: 0128 21 CA 01               LD     HL,FailedBootMessage
0321: 012B CD FA 01               CALL   SendMessage
0322: 012E 76                     HALT
0323: 012F
0324: 012F
0325: 012F         ;---------------------------- ROM Disk Control Block -------------------------;
0326: 012F             BootControl:                      ;
0327: 012F 01                     DB     DiskReadCode         ; Read function                   	  ;
0328: 0130 00                     DB     00H                  ; unit number                     	  ;
0329: 0131 00                     DB     00H                  ; head number                     	  ;
0330: 0132 00                     DB     00H                  ; track number                    	  ;
0331: 0133 0D                     DB     0DH                  ; Starting sector number (13)     	  ;
0332: 0134 00 0A                  DW     5 * 512              ; Number of bytes to read         	  ;
0333: 0136         ;	( 0A00 All of BIOS)           	  ;
0334: 0136 00 F6                  DW     BIOSStart            ; read into this address          	  ;
0335: 0138 43 00                  DW     DiskStatusLocation   ; next block - no linking         	  ;
0336: 013A 40 00                  DW     DiskControlTable     ; next table- no linking          	  ;
0337: 013C         ;---------------------------- ROM Disk Control Block -------------------------;
0338: 013C
0339: 013C         ;------------------------------------ Page 0 ---------------------------------;
0340: 013C             Page0Image:                      ;
0341: 013C C3 03 F6               JP     WarmBootEntry        ; warm start                          ;
0342: 013F         ;IOBYTE:                                                                      ;
0343: 013F 80                     DB     IOBYTE_DEFAULT       ; IOBYTE-                             ;
0344: 0140             DefaultDisk:                      ;
0345: 0140 00                     DB     00H                  ; Current default drive (A)           ;
0346: 0141 C3 00 E8               JP     BDOSEntry            ; jump to BDOS entry                  ;
0347: 0144                        DS     028H                 ; interrupt locations 1-5 not used    ;
0348: 016C                        DS     008H                 ; interrupt location 6 is reserved    ;
0349: 0174 C3 00 00               JP     0000H                ; RST 7 used only by DDT & SID        ;
0350: 0177             Page0ImageEnd:                      ;
0351: 0177         ;------------------------------------ Page 0 ---------------------------------;
0352: 0177
0353: 0177         ;---------------------------------- Messages ---------------------------------;
0354: 0177             BootMessage:                      ;
0355: 0177 0D 0A                  DB     CR,LF                ;
0356: 0179 42 6F 6F 74 53 74 72 61 70 20 6C 6F 61 64 65 72 20                DB     'BootStrap loader '  ;
0357: 018A 43 50 2F 4D 20 32 2E 32 20 28 5A 38 30 29 20                DB     'CP/M 2.2 (Z80) '    ;
0358: 0199 0D 0A                  DB     CR,LF                ;
0359: 019B 42 75 69 6C 64 20 30 2E 42 20                DB     'Build 0.B '         ;
0360: 01A5 0D 0A                  DB     CR,LF                ;
0361: 01A7 43 43 50 20 30 2E 41 20 7C 20 20 42 44 4F 53 20 30 2E 41 20 7C 20 42 49 4F 53 20 31 2E 30                DB     'CCP 0.A |  BDOS 0.A | BIOS 1.0' ;
0362: 01C5 0D 0A 0D 0A 00                DB     CR,LF,CR,LF,EndOfMessage ;
0363: 01CA         ;
0364: 01CA             FailedBootMessage:                      ;
0365: 01CA 0D 0A                  DB     CR,LF                ;
0366: 01CC 42 6F 6F 74 20 55 6E 73 75 63 63 65 73 73 66 75 6C 20 2D 20 43 68 65 63 6B 20 66 6F 72 20 44 69 73 6B 20 69 6E 20 41 3A                DB     'Boot Unsuccessful - Check for Disk in A:' ;
0367: 01F4 0D 0A 00                DB     CR,LF,EndOfMessage   ;
0368: 01F7         ;
0369: 01F7             SendBootMessage:                      ;
0370: 01F7 21 77 01               LD     HL,BootMessage       ;
0371: 01FA         ;
0372: 01FA             SendMessage:                      ;
0373: 01FA 7E                     LD     A,(HL)               ;
0374: 01FB B7                     OR     A                    ;
0375: 01FC C8                     RET    Z                    ;
0376: 01FD D3 EC                  OUT    (BOOT_CON_ADDRESS),A ; Console address		              ;
0377: 01FF 23                     INC    HL                   ;
0378: 0200 C3 FA 01               JP     SendMessage          ;
0379: 0203         ;---------------------------------- Messages ---------------------------------;
0380: 0203
           ************************   Xref   ************************
0000: $               0200
0079: ASCII_A         0041
0080: ASCII_C         0043
0081: ASCII_K         004B
0088: ASCII_LO_A      0061
0089: ASCII_LO_K      006B
0090: ASCII_LO_P      0070
0031: ASCII_MASK      007F
0082: ASCII_N         004E
0083: ASCII_Q         0051
0084: ASCII_R         0052
0085: ASCII_W         0057
0086: ASCII_Y         0059
0066: ASCII_ZERO      0030
0060: ASTERISK        002A
0146: BDOSBase        E800   0147 0149
0115: BDOSE           0005   0116
0147: BDOSEntry       E800   0346
0136: BDOSLength      0E00   0139 0149 0150
0049: BELL            0007
0149: BIOSBase        F600
0137: BIOSLength      0A00   0139
0109: BIOSPAGE        0002
0150: BIOSStart       F600   0287 0334
0246: BlockSize       0800   0268
0283: BOOT_CON_ADDRESS 00EC   0376
0326: BootControl     012F   0302
0354: BootMessage     0177   0370
0027: BYTE            0001
0087: CARET           005E
0144: CCPEntry        E000   0146 0150
0135: CCPLength       0800   0139 0146 0150
0067: COLON           003A
0062: COMMA           002C
0121: ComTail         0080   0122
0123: ComTailChars    0082
0122: ComTailCount    0081   0123
0223: cpmRecordSize   0080   0225 0228 0230
0052: CR              000D   0355 0358 0360 0362 0365 0367
0035: CTRL_C          0003
0036: CTRL_E          0005
0037: CTRL_H          0008
0038: CTRL_K          000B
0039: CTRL_L          000C
0040: CTRL_P          0010
0041: CTRL_R          0012
0042: CTRL_S          0013
0043: CTRL_U          0015
0044: CTRL_X          0018
0045: CTRL_Z          001A
0063: DASH            002D
0257: DataBlocks      02C7   0267
0256: DataSectors     0B1C   0257
0344: DefaultDisk     0140
0228: DirBuffSize     0080
0243: DirectoryBlockCount 0002   0268
0230: DirectoryEntryPerRecord 0004   0271
0227: DirEntrySize    0020   0230 0268
0215: DiskCommandBlock 0046   0303
0214: DiskControlByte 0045   0306
0217: DiskControlTable 0040   0336
0219: DiskReadCode    0001   0327
0224: diskSectorSize  0200   0225 0246 0254
0213: DiskStatusLocation 0043   0314 0335
0220: DiskWriteCode   0002
0126: DMABuffer       0080
0056: DOLLAR          0024
0269: dpb3hdAL0       00C0
0270: dpb3hdAL1       0000
0265: dpb3hdBLM       000F
0264: dpb3hdBSH       0004
0271: dpb3hdCKS       0020
0268: dpb3hdDRM       007F   0271
0267: dpb3hdDSM       02C6
0266: dpb3hdEXM       0000
0273: dpb3hdNOH       0002
0272: dpb3hdOFF       0001
0263: dpb3hdSPT       0090
0130: END_OF_FILE     001A
0033: EndOfMessage    0000   0362 0367
0071: EQUAL_SIGN      003D
0054: EXCLAIM_POINT   0021
0364: FailedBootMessage 01CA   0320
0022: FALSE           0000
0118: FCB1            005C   0119
0119: FCB2            006C
0163: fCloseFile      0010
0154: fConsoleIn      0001
0155: fConsoleOut     0002
0166: fDeleteFile     0013
0158: fGetConsoleStatus 000B
0172: fGetCurrentDisk 0019
0171: fGetLoginVector 0018
0174: fGetSetUserNumber 0020
0159: fGetVersion     000C
0169: fMakeFile       0016
0162: fOpenFile       000F
0156: fPrintString    0009
0167: fReadSeq        0014
0157: fReadString     000A
0170: fRenameFile     0017
0160: fResetSystem    000D
0164: fSearchFirst    0011
0165: fSearchNext     0012
0161: fSelectDisk     000E
0173: fSetDMA         001A
0168: fWriteSeq       0015
0072: GREATER_THAN    003E
0055: HASH_TAG        0023
0110: IOBYTE          0003
0284: IOBYTE_DEFAULT  0080   0343
0058: L_PAREN         0028
0075: LEFT_ARROW      005F
0091: LEFT_CURLY      007B
0139: LengthInBytes   2000   0140 0144 0254
0140: LengthInK       0009
0070: LESS_THAN       003C
0051: LF              000A   0355 0358 0360 0362 0365 0367
0025: LO_NIBBLE_MASK  000F
0142: MemorySize      0040   0144
0255: myOffset        0001   0256 0272
0047: NULL            0000
0239: NumberOfHeads   0002   0250 0252 0263 0273
0236: NumberOfLogicalDisks 0004
0024: OFF             0000
0023: ON              FFFF
0340: Page0Image      013C   0293 0294
0350: Page0ImageEnd   0177   0293
0057: PERCENT         0025
0064: PERIOD          002E
0113: Pg0CurentDisk   0004
0112: Pg0CurentUser   0004   0113
0061: PLUS_SIGN       002B
0073: QMARK           003F
0059: R_PAREN         0029
0106: RAM             0000   0108 0109 0110 0112 0115 0118 0121 0126 0128
0248: RecordsPerBlock 0010
0232: RecordsPerExtent 0080
0225: recordsPerSector 0004   0248 0263
0076: RUBOUT          007F
0277: SectorMask      0003
0242: SectorsPerBlock 0004   0246 0248 0251 0257 0277
0252: SectorsPerCylinder 0024   0255 0256
0241: SectorsPerTrack 0012   0250 0252 0263
0069: SEMICOLON       003B
0369: SendBootMessage 01F7   0292
0372: SendMessage     01FA   0321 0378
0065: SLASH           002F
0048: SOH             0001
0053: SPACE           0020
0290: Start           0100   0291
0254: SystemSectors   0011   0255
0050: TAB             0009
0116: TopRAM          0007
0251: TotalNumberOfBlocks 02D0
0250: TotalNumberOfSectors 0B40   0251 0256
0128: TPA             0100   0289
0240: TracksPerHead   0050   0250
0021: TRUE            FFFF
0074: UNDER_SCORE     005F
0309: WaitForBootComplete 011C   0312
0108: WarmBoot        0000
0287: WarmBootEntry   F603   0341
0028: WORD            0002
0188: WriteAllocated  0000
0190: WriteCleanBuffer 0002
0189: WriteDirectory  0001
0032: ZERO            0000
