0001: 0100         ;     File created by MakeZ80Source on Tue Sep 18 10:01:22 EDT 2018 from:
0002: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\BootSector.asm
0003: 0100         ; BootSector.Z80
0004: 0100         ; Build 2.01
0005: 0100
0006: 0100         ; 2018-02-19 BDOS 1.0 designation
0007: 0100         ; 2018-11-22 begin  Z80 idiom update
0008: 0100         ; 2017-04-07 Added equates for message IO : BOOT_CON_ADDRESS
0009: 0100         ;				 , and default IOBYTE : IOBYTE_DEFAULT
0010: 0100         ; 2017-03-02 Refactored the CP/M Suite
0011: 0100
0012: 0100
0013: 0100                        Include ./osHeader.Z80
0014: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0015: 0100         ;     File created by MakeZ80Source on Mon Sep 17 16:25:47 EDT 2018 from:
0016: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\osHeader.asm
0017: 0100         ; osHeader.Z80
0018: 0100
0019: 0100         ; 2018-12-28 Changed BDOSEntry to remove dead space in BDOS
0020: 0100         ; 2017-03-02 Refactored the CP/M Suite
0021: 0100
0022: 0100         ; Contains the Equates used by the CP/M system
0023: 0100
0024: 0100         ;------------------------Page Zero Constants ---------------------------------
0025: 0100             RAM        EQU    0                    ; Start of RAM ( and the Base page)
0026: 0100
0027: 0100             WarmBoot   EQU    RAM + 0              ; Contains a JMP instruction to warm boot in BIOS
0028: 0100             BIOSPAGE   EQU    RAM + 2              ; BIOS Jump Vector Page
0029: 0100             IOBYTE     EQU    RAM + 3              ; Input/Output redirection byte
0030: 0100
0031: 0100             Pg0CurentUser EQU    RAM + 4              ; Current user ( bits 7-4)
0032: 0100             Pg0CurentDisk EQU    Pg0CurentUser        ; Default logical disk (bits 0-3)
0033: 0100
0034: 0100             BDOSE      EQU    RAM + 5              ; Contains a JMP to BDOS entry
0035: 0100             TopRAM     EQU    BDOSE+2              ; Top page of usable RAM
0036: 0100
0037: 0100             FCB1       EQU    RAM + 05CH           ; File Control Block #1
0038: 0100             FCB2       EQU    FCB1 + 16            ; File Control Block #2
0039: 0100
0040: 0100             ComTail    EQU    RAM + 080H           ; Complete command tail
0041: 0100             ComTailCount EQU    ComTail + 1          ; Count of the number of char in tail
0042: 0100             ComTailChars EQU    ComTailCount + 1     ; Complete Command tail up-cased, w/o trailing CR
0043: 0100         ;-----------------------------------------------------------------------
0044: 0100
0045: 0100             DMABuffer  EQU    RAM + 080H           ; Default "DMA" address used as buffer
0046: 0100         ;-----------------------------------------------------------------------
0047: 0100             TPA        EQU    RAM + 0100H          ; Start of Transient program Area
0048: 0100         ;-----------------------------------------------------------------------
0049: 0100             END_OF_FILE EQU    1AH                  ; end of file
0050: 0100         ;-----------------------------------------------------------------------
0051: 0100
0052: 0100         ;--------------- CP/M Constants -----------------------------------------
0053: 0100
0054: 0100             CCPLength  EQU    0800H                ; Constant
0055: 0100             BDOSLength EQU    0E00H                ; Constant 0E00H
0056: 0100             BIOSLength EQU    0A00H                ; Constant 0900H
0057: 0100
0058: 0100             LengthInBytes EQU    CCPLength + BDOSLength + BIOSLength
0059: 0100             LengthInK  EQU    (LengthInBytes/1024) + 1
0060: 0100
0061: 0100             MemorySize EQU    64
0062: 0100
0063: 0100             CCPEntry   EQU    (MemorySize * 1024) - LengthInBytes
0064: 0100
0065: 0100             BDOSBase   EQU    CCPEntry + CCPLength
0066: 0100             BDOSEntry  EQU    BDOSBase
0067: 0100
0068: 0100             BIOSBase   EQU    BDOSBase + BDOSLength
0069: 0100             BIOSStart  EQU    CCPEntry + CCPLength + BDOSLength
0070: 0100         ;-----------------------------------------------------------------------
0071: 0100
0072: 0100         ;------------------- BDOS System Call Equates --------------------------
0073: 0100             fConsoleIn EQU    01H                  ; rcharf - Console Input
0074: 0100             fConsoleOut EQU    02H                  ; pcharf - Console Output
0075: 0100             fPrintString EQU    09H                  ; pbuff	- Print String
0076: 0100             fReadString EQU    0AH                  ; rbuff	- Read Console String
0077: 0100             fGetConsoleStatus EQU    0BH                  ; breakf - Get Console Status
0078: 0100             fGetVersion EQU    0CH                  ; liftf	- Return Version Number
0079: 0100             fResetSystem EQU    0DH                  ; initf	- Reset Disk System
0080: 0100             fSelectDisk EQU    0EH                  ; self	- Select Disk
0081: 0100             fOpenFile  EQU    0FH                  ; openf	- Open File
0082: 0100             fCloseFile EQU    10H                  ; closef - Close File
0083: 0100             fSearchFirst EQU    11H                  ; searf	- Search For First
0084: 0100             fSearchNext EQU    12H                  ; searnf - Search for Next
0085: 0100             fDeleteFile EQU    13H                  ; delf - Delete File
0086: 0100             fReadSeq   EQU    14H                  ; dreadf - Read Sequential
0087: 0100             fWriteSeq  EQU    15H                  ; dwritf - Write Sequential
0088: 0100             fMakeFile  EQU    16H                  ; makef	- Make File
0089: 0100             fRenameFile EQU    17H                  ; renf	- Rename File
0090: 0100             fGetLoginVector EQU    18H                  ; logf	- Return Login Vector
0091: 0100             fGetCurrentDisk EQU    19H                  ; cself	- Return Current Disk
0092: 0100             fSetDMA    EQU    1AH                  ; dmaf	- Set DMA address
0093: 0100             fGetSetUserNumber EQU    20H                  ; userf	- Set/Get User Code
0094: 0100         ;-----------------------------------------------------------------------
0095: 0100
0096: 0100
0097: 0100
0098: 0100
0099: 0100
0100: 0100         ;*******************************************************************************
0101: 0100         ; These are the values handed over by the BDOS when it calls the Writer operation
0102: 0100         ; The allocated.unallocated indicates whether the BDOS is set to write to an
0103: 0100         ; unallocated allocation block (it only indicates this for the first 128 byte
0104: 0100         ; sector write) or to an allocation block that has already been allocated to a
0105: 0100         ; file. The BDOS also indicates if it is set to write to the file directory
0106: 0100         ;*******************************************************************************
0107: 0100             WriteAllocated EQU    00H
0108: 0100             WriteDirectory EQU    01H
0109: 0100             WriteCleanBuffer EQU    02H
0110: 0100
0111: 0100
0112: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0113: 0100                        Include ./diskHeader.Z80
0114: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0115: 0100         ;     File created by MakeZ80Source on Mon Sep 17 16:26:22 EDT 2018 from:
0116: 0100         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\diskHeader.asm
0117: 0100         ; diskHeader.asm
0118: 0100
0119: 0100         ; 2017-03-02 Refactored the CP/M Suite
0120: 0100
0121: 0100         ; needs osHeader.asm declared before this is used !!!!!!!
0122: 0100
0123: 0100         ; Contains the Equates used by the CP/M system to handle disks
0124: 0100
0125: 0100
0126: 0100         ;*******************************************************************************
0127: 0100         ;
0128: 0100         ;     Disk related values
0129: 0100         ;
0130: 0100         ;
0131: 0100         ;*******************************************************************************
0132: 0100             DiskStatusLocation EQU    043H                 ; status after disk I/O placed here
0133: 0100             DiskControlByte EQU    045H                 ; control byte for disk I/O
0134: 0100             DiskCommandBlock EQU    046H                 ; Control Table Pointer
0135: 0100         ; for boot
0136: 0100             DiskControlTable EQU    0040H
0137: 0100
0138: 0100             DiskReadCode EQU    01H                  ; Code for Read
0139: 0100             DiskWriteCode EQU    02H                  ; Code for Write
0140: 0100
0141: 0100
0142: 0100             cpmRecordSize EQU    080H                 ; (128) record size that CP/M uses
0143: 0100             diskSectorSize EQU    200H                 ; (512) size of physical disk I/O
0144: 0100             recordsPerSector EQU    diskSectorSize/cpmRecordSize
0145: 0100
0146: 0100             DirEntrySize EQU    20H                  ; (32)
0147: 0100             DirBuffSize EQU    cpmRecordSize
0148: 0100
0149: 0100             DirectoryEntryPerRecord EQU    cpmRecordSize / DirEntrySize
0150: 0100
0151: 0100             RecordsPerExtent EQU    080H                 ; extent Record capacity
0152: 0100
0153: 0100
0154: 0100         ;-------------------------------------------------------------------------------------
0155: 0100             NumberOfLogicalDisks EQU    4                    ; max number of disk in this system
0156: 0100
0157: 0100         ;----------------------3.5 Double Density Disk Geometry----------------------------------------
0158: 0100             NumberOfHeads EQU    02H                  ; number of heads
0159: 0100             TracksPerHead EQU    50H                  ; 80
0160: 0100             SectorsPerTrack EQU    12H                  ; 18 -  1 head only
0161: 0100             SectorsPerBlock EQU    04H                  ; 2048 bytes
0162: 0100             DirectoryBlockCount EQU    02H                  ;
0163: 0100         ;-----------------------------------------------------------------------
0164: 0100
0165: 0100             BlockSize  EQU    SectorsPerBlock * 	diskSectorSize ; Size in Bytes
0166: 0100
0167: 0100             RecordsPerBlock EQU    recordsPerSector * SectorsPerBlock
0168: 0100
0169: 0100             TotalNumberOfSectors EQU    SectorsPerTrack * TracksPerHead * NumberOfHeads
0170: 0100             TotalNumberOfBlocks EQU    TotalNumberOfSectors / SectorsPerBlock
0171: 0100             SectorsPerCylinder EQU    SectorsPerTrack * NumberOfHeads
0172: 0100
0173: 0100             SystemSectors EQU    LengthInBytes / diskSectorSize + 1 ; need to account for boot sector
0174: 0100             myOffset   EQU    (SystemSectors / SectorsPerCylinder) + 1 ;
0175: 0100             DataSectors EQU    TotalNumberOfSectors - (SectorsPerCylinder * myOffset)
0176: 0100             DataBlocks EQU    DataSectors / 	SectorsPerBlock
0177: 0100
0178: 0100         ;-----------------------------------------------------------------------
0179: 0100         ;; Disk block parameters for F3HD - 3.5 HD   1.44 MB Diskette
0180: 0100         ;-----------------------------------------------------------------------
0181: 0100         ;dpb3hdSPT				EQU		0090H			; cpmRecords per track- (144)
0182: 0100             dpb3hdSPT  EQU    recordsPerSector * SectorsPerTrack * NumberOfHeads ; SPT - records per Clynder
0183: 0100             dpb3hdBSH  EQU    04H                  ; Block Shift Factor - BlockSize = 128 * (2**BSH)											; BSH = Log2(BlockSize/cpmRecordSize)
0184: 0100             dpb3hdBLM  EQU    0FH                  ; BlockMask = (2**BSH) -1
0185: 0100             dpb3hdEXM  EQU    00H                  ; Extent mask = (PhysicalExtents/LogicalExtents) - 1
0186: 0100             dpb3hdDSM  EQU    DataBlocks -1        ; Maximum allocation block number (710)
0187: 0100             dpb3hdDRM  EQU    ((BlockSize *  DirectoryBlockCount)	/	DirEntrySize) -1 ; DRM Number of directory entries - 1 (127)
0188: 0100             dpb3hdAL0  EQU    0C0H                 ; Bit map for reserving 1 alloc. block
0189: 0100             dpb3hdAL1  EQU    00H                  ;  for each file directory
0190: 0100             dpb3hdCKS  EQU    (dpb3hdDRM +1)/ DirectoryEntryPerRecord ; Disk change work area size (32)
0191: 0100             dpb3hdOFF  EQU    myOffset             ; Number of tracks before directory
0192: 0100             dpb3hdNOH  EQU    NumberOfHeads
0193: 0100
0194: 0100         ;*******************************************************************************
0195: 0100
0196: 0100             SectorMask EQU    SectorsPerBlock - 1
0197: 0100
0198: 0100         ;***************************************************************************
0199: 0100
0200: 0100         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0201: 0100             CR         EQU    0DH                  ; Carriage Return
0202: 0100             EndOfMessage EQU    00H
0203: 0100             LF         EQU    0AH                  ; Line Feed
0204: 0100
0205: 0100
0206: 0100             BOOT_CON_ADDRESS EQU    0ECH                 ; tty data address
0207: 0100             IOBYTE_DEFAULT EQU    080H                 ; LST:=LPT, rest all = TTY:
0208: 0100
0209: 0100
0210: 0100             WarmBootEntry EQU    BIOSStart + 3
0211: 0100
0212: 0100                        ORG    TPA
0213: 0100             Start:
0214: 0100 31 FF 00               LD     SP,Start-1           ; Stack goes down from here
0215: 0103 CD F7 01               CALL   SendBootMessage      ; Display boot message
0216: 0106 01 3B 00               LD     BC,Page0ImageEnd-Page0Image ; Size of code to move
0217: 0109 21 3C 01               LD     HL,Page0Image        ; Source of page 0 code
0218: 010C 11 00 00               LD     DE,0000              ; Location 0, the target
0219: 010F
0220: 010F         ; Set up page zero,Move (B) bytes from (HL) to (DE).
0221: 010F ED B0                  LDIR
0222: 0111
0223: 0111         ; Now  start to move data to Disk Control Block
0224: 0111
0225: 0111 21 2F 01               LD     HL,BootControl
0226: 0114 22 46 00               LD     (DiskCommandBlock),HL ; Set up Command block for drive A:
0227: 0117
0228: 0117
0229: 0117 21 45 00               LD     HL,DiskControlByte
0230: 011A 36 80                  LD     (HL),080H            ; Activate the controller
0231: 011C
0232: 011C             WaitForBootComplete:
0233: 011C 7E                     LD     A,(HL)               ; Get the control byte
0234: 011D B7                     OR     A                    ; 0 = Completed operation
0235: 011E 20 FC                  JR     NZ,WaitForBootComplete ;  if not try again
0236: 0120
0237: 0120 3A 43 00               LD     A,(DiskStatusLocation) ; What's the status after operation
0238: 0123 FE 80                  CP     080H                 ; Any errors ?
0239: 0125
0240: 0125
0241: 0125 D2 00 00               JP     NC,0000              ; No, do a Warm Boot
0242: 0128         ;  else we have a problem
0243: 0128 21 CA 01               LD     HL,FailedBootMessage
0244: 012B CD FA 01               CALL   SendMessage
0245: 012E 76                     HALT
0246: 012F
0247: 012F
0248: 012F         ;---------------------------- ROM Disk Control Block ------------------------;
0249: 012F             BootControl:                      ;
0250: 012F 01                     DB     DiskReadCode         ; Read function                   	 ;
0251: 0130 00                     DB     00H                  ; unit number                     	 ;
0252: 0131 00                     DB     00H                  ; head number                     	 ;
0253: 0132 00                     DB     00H                  ; track number                    	 ;
0254: 0133 0D                     DB     0DH                  ; Starting sector number (13)     	 ;
0255: 0134 00 0A                  DW     5 * 512              ; Number of bytes to read         	 ;
0256: 0136         ;	( 0A00 All of BIOS)           	 ;
0257: 0136 00 F6                  DW     BIOSStart            ; read into this address          	 ;
0258: 0138 43 00                  DW     DiskStatusLocation   ; next block - no linking         	 ;
0259: 013A 40 00                  DW     DiskControlTable     ; next table- no linking          	 ;
0260: 013C         ;---------------------------- ROM Disk Control Block ------------------------;
0261: 013C
0262: 013C         ;------------------------------------ Page 0 --------------------------------;
0263: 013C             Page0Image:                      ;
0264: 013C C3 03 F6               JP     WarmBootEntry        ; warm start                         ;
0265: 013F         ;IOBYTE:                                                                     ;
0266: 013F 80                     DB     IOBYTE_DEFAULT       ; IOBYTE-                            ;
0267: 0140             DefaultDisk:                      ;
0268: 0140 00                     DB     00H                  ; Current default drive (A)          ;
0269: 0141 C3 00 E8               JP     BDOSEntry            ; jump to BDOS entry                 ;
0270: 0144                        DS     028H                 ; interrupt locations 1-5 not used   ;
0271: 016C                        DS     008H                 ; interrupt location 6 is reserved   ;
0272: 0174 C3 00 00               JP     0000H                ; RST 7 used only by DDT & SID       ;
0273: 0177             Page0ImageEnd:                      ;
0274: 0177         ;------------------------------------ Page 0 --------------------------------;
0275: 0177
0276: 0177         ;---------------------------------- Messages --------------------------------;
0277: 0177             BootMessage:                      ;
0278: 0177 0D 0A                  DB     CR,LF                ;
0279: 0179 42 6F 6F 74 53 74 72 61 70 20 6C 6F 61 64 65 72 20                DB     'BootStrap loader '  ;
0280: 018A 43 50 2F 4D 20 32 2E 32 20 28 5A 38 30 29 20                DB     'CP/M 2.2 (Z80) '    ;
0281: 0199 0D 0A                  DB     CR,LF                ;
0282: 019B 42 75 69 6C 64 20 30 2E 44 20                DB     'Build 0.D '         ;
0283: 01A5 0D 0A                  DB     CR,LF                ;
0284: 01A7 43 43 50 20 30 2E 41 20 7C 20 20 42 44 4F 53 20 31 2E 30 20 7C 20 42 49 4F 53 20 31 2E 30                DB     'CCP 0.A |  BDOS 1.0 | BIOS 1.0' ;
0285: 01C5 0D 0A 0D 0A 00                DB     CR,LF,CR,LF,EndOfMessage ;
0286: 01CA         ;
0287: 01CA             FailedBootMessage:                      ;
0288: 01CA 0D 0A                  DB     CR,LF                ;
0289: 01CC 42 6F 6F 74 20 55 6E 73 75 63 63 65 73 73 66 75 6C 20 2D 20 43 68 65 63 6B 20 66 6F 72 20 44 69 73 6B 20 69 6E 20 41 3A                DB     'Boot Unsuccessful - Check for Disk in A:' ;
0290: 01F4 0D 0A 00                DB     CR,LF,EndOfMessage   ;
0291: 01F7         ;
0292: 01F7             SendBootMessage:                      ;
0293: 01F7 21 77 01               LD     HL,BootMessage       ;
0294: 01FA         ;
0295: 01FA             SendMessage:                      ;
0296: 01FA 7E                     LD     A,(HL)               ;
0297: 01FB B7                     OR     A                    ;
0298: 01FC C8                     RET    Z                    ;
0299: 01FD D3 EC                  OUT    (BOOT_CON_ADDRESS),A ; Console address		             ;
0300: 01FF 23                     INC    HL                   ;
0301: 0200 C3 FA 01               JP     SendMessage          ;
0302: 0203         ;---------------------------------- Messages --------------------------------;
0303: 0203             Z_HighestLocation:
0304: 0203             Z_MemoryLeft EQU    0512H - Z_HighestLocation
           ************************   Xref   ************************
0000: $               0203
0065: BDOSBase        E800   0066 0068
0034: BDOSE           0005   0035
0066: BDOSEntry       E800   0269
0055: BDOSLength      0E00   0058 0068 0069
0068: BIOSBase        F600
0056: BIOSLength      0A00   0058
0028: BIOSPAGE        0002
0069: BIOSStart       F600   0210 0257
0165: BlockSize       0800   0187
0206: BOOT_CON_ADDRESS 00EC   0299
0249: BootControl     012F   0225
0277: BootMessage     0177   0293
0063: CCPEntry        E000   0065 0069
0054: CCPLength       0800   0058 0065 0069
0040: ComTail         0080   0041
0042: ComTailChars    0082
0041: ComTailCount    0081   0042
0142: cpmRecordSize   0080   0144 0147 0149
0201: CR              000D   0278 0281 0283 0285 0288 0290
0176: DataBlocks      02C7   0186
0175: DataSectors     0B1C   0176
0267: DefaultDisk     0140
0147: DirBuffSize     0080
0162: DirectoryBlockCount 0002   0187
0149: DirectoryEntryPerRecord 0004   0190
0146: DirEntrySize    0020   0149 0187
0134: DiskCommandBlock 0046   0226
0133: DiskControlByte 0045   0229
0136: DiskControlTable 0040   0259
0138: DiskReadCode    0001   0250
0143: diskSectorSize  0200   0144 0165 0173
0132: DiskStatusLocation 0043   0237 0258
0139: DiskWriteCode   0002
0045: DMABuffer       0080
0188: dpb3hdAL0       00C0
0189: dpb3hdAL1       0000
0184: dpb3hdBLM       000F
0183: dpb3hdBSH       0004
0190: dpb3hdCKS       0020
0187: dpb3hdDRM       007F   0190
0186: dpb3hdDSM       02C6
0185: dpb3hdEXM       0000
0192: dpb3hdNOH       0002
0191: dpb3hdOFF       0001
0182: dpb3hdSPT       0090
0049: END_OF_FILE     001A
0202: EndOfMessage    0000   0285 0290
0287: FailedBootMessage 01CA   0243
0037: FCB1            005C   0038
0038: FCB2            006C
0082: fCloseFile      0010
0073: fConsoleIn      0001
0074: fConsoleOut     0002
0085: fDeleteFile     0013
0077: fGetConsoleStatus 000B
0091: fGetCurrentDisk 0019
0090: fGetLoginVector 0018
0093: fGetSetUserNumber 0020
0078: fGetVersion     000C
0088: fMakeFile       0016
0081: fOpenFile       000F
0075: fPrintString    0009
0086: fReadSeq        0014
0076: fReadString     000A
0089: fRenameFile     0017
0079: fResetSystem    000D
0083: fSearchFirst    0011
0084: fSearchNext     0012
0080: fSelectDisk     000E
0092: fSetDMA         001A
0087: fWriteSeq       0015
0029: IOBYTE          0003
0207: IOBYTE_DEFAULT  0080   0266
0058: LengthInBytes   2000   0059 0063 0173
0059: LengthInK       0009
0203: LF              000A   0278 0281 0283 0285 0288 0290
0061: MemorySize      0040   0063
0174: myOffset        0001   0175 0191
0158: NumberOfHeads   0002   0169 0171 0182 0192
0155: NumberOfLogicalDisks 0004
0263: Page0Image      013C   0216 0217
0273: Page0ImageEnd   0177   0216
0032: Pg0CurentDisk   0004
0031: Pg0CurentUser   0004   0032
0025: RAM             0000   0027 0028 0029 0031 0034 0037 0040 0045 0047
0167: RecordsPerBlock 0010
0151: RecordsPerExtent 0080
0144: recordsPerSector 0004   0167 0182
0196: SectorMask      0003
0161: SectorsPerBlock 0004   0165 0167 0170 0176 0196
0171: SectorsPerCylinder 0024   0174 0175
0160: SectorsPerTrack 0012   0169 0171 0182
0292: SendBootMessage 01F7   0215
0295: SendMessage     01FA   0244 0301
0213: Start           0100   0214
0173: SystemSectors   0011   0174
0035: TopRAM          0007
0170: TotalNumberOfBlocks 02D0
0169: TotalNumberOfSectors 0B40   0170 0175
0047: TPA             0100   0212
0159: TracksPerHead   0050   0169
0232: WaitForBootComplete 011C   0235
0027: WarmBoot        0000
0210: WarmBootEntry   F603   0264
0107: WriteAllocated  0000
0109: WriteCleanBuffer 0002
0108: WriteDirectory  0001
0303: Z_HighestLocation 0203   0304
0304: Z_MemoryLeft    030F
