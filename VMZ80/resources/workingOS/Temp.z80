;------------------------------ Load The File ------------------------------;
LoadTheFile:
	LD		DE,readBuffer
	CALL	SetDMA						; Set the disk read buffer
	
	CALL	ReadSourceFile				; Get source data
	
; <set up>
;	LD		HL,startOfBuffer			; Initialize 
;	LD		(readBufferPointer),HL			;  Buffer pointer
;	LD		(displayLinePointer),HL				; Save line start
;	LD		B,CPMRecordSize				; Length of source record
;	LD		C,00						; Size of this line
	LD		DE,commandBuffer			; Destination
;	LD		HL,readBuffer				; Source
	PUSH	HL
	PUSH	DE
	PUSH	BC							; Save the control parameters
; <set up > ReadSourceFile
LoadTheFile1:
	LD		DE,FCB1
	CALL	ReadSeq						; Read next record
	OR		A							; Did we read a record?
	RET		NZ							; Exit if no more data
	POP		BC
	POP		DE
	POP		HL							; Restore the control parameters
LoadTheFile2:
	LD		A,(HL)
	CP		CR							; Carriage Return ?
	CALL	Z,CompleteLineCR			;  yes EOL CR
	CP		LF							; Line Feed ?
	CALL	Z,CompleteLineLF			;  yes EOL LF ?
LoadTheFile3:
	LD		(DE),A						;  else move character to buffer
	INC		C							; keep character count
	INC		HL
	INC		DE
	DEC		B							; Keep track of pointers
	JR		NZ,LoadTheFile2				; not at end of read buffer, loop

	LD		B,CPMRecordSize				; Length of source record
	LD		C,00						; Size of this line
	LD		HL,readBuffer				; go back to the start of read buffer
	PUSH	HL
	PUSH	DE
	PUSH	BC							; Save the control parameters

	
	
	JR		LoadTheFile1

	NOP
	HALT
	RET
;
;----------------------------- Read Source File ----------------------------;
; Read next record into buffer,
; Reset buffer character count (B)
; Reset line character count (C)
;
; Z flag if read was successful
; Z flag reset if no data returned
ReadSourceFile:
	LD		DE,FCB1
	CALL	ReadSeq						; Read next record
	
	LD		HL,readBuffer				; Source pointer
	LD		B,CPMRecordSize				; Length of source record
	LD		C,00						; Size of this line

	OR		A							; Did we read a record?
	RET		NZ							; Exit if no more data


	
;------------------------- We have a complete line -------------------------;
CompleteLineCR:
	INC		HL							; Get past the CR
	DEC		B							; account for reading CR
	LD		A,(HL)						; Get the next character
	CP		LF							; Is it a Line Feed ?
	JR		NZ,CompleteLine				;  no then process the line
	INC		HL							; Get past the LF
	DEC		B							; Account for reading LF
	JR		CompleteLine				; Process the line
;
CompleteLineLF:
	INC		HL							; Get past the LF
	DEC		B							; account for reading LF
	LD		A,(HL)						; Get the next character
	CP		CR							; Is it a Carriage Return ?
	JR		NZ,CompleteLine				;  no then process the line
	INC		HL							; Get past the CR
	DEC		B							; Account for reading CR
	JR		CompleteLine				; Process the line
;	
CompleteLine:
	PUSH	BC							; Save the counts
	EX		DE,HL
	LD		(HL),0						; Terminate the string
	INC		HL
	LD		(HL),0						; Place 0000 at end of out buffer
	INC		HL							
	EX		DE,HL
;	INC		HL							; Look past the CR
;	LD		A,LF
;	CP		(HL)						; Line Feed here ?
;	JR		NZ,CompleteLine1				; Skip if not
;	INC		HL							;  else get past it
CompleteLine1:
	PUSH	HL							; Save the pointers
	CALL	PrintLineNumber				; Display the line number
	
	CALL	IncrementLinePointer		; Bump line number
	LD		HL,commandBuffer			; point at buffer to display
	CALL	printStringNull				; print null terminated line
	POP		HL
	POP		BC
	LD		C,00H						; reset line char count
	LD		DE,commandBuffer
	
	JP		LoadTheFile2				; restart the loop
	NOP
;	HALT
	RET

;--------------------------------- Utilities --------------